#include <16f877a.h>
#fuses HS,NOWDT,NOPROTECT,NOPUT,NOLVP,NOBROWNOUT
#use delay(clock=20000000)
#use I2C(MASTER, SDA=PIN_C4, SCL=PIN_C3, SLOW)
#use standard_io(D)
#include <lcd.c>                    // Libreria para el manejo de la LCD 20x4
#include <MPU6050.c> 
#include <servo.c> // Libreria para el manejo del modulo MPU6050
float Ax, Ay, Az, Gx, Gy, Gz, t;          // Variables para almacenar los datos del acelerometro y giroscopio

void main()
{
   lcd_init();    
   servo_init(); // Inicializa la pantalla LCD
   MPU6050_init();
   servo_attach(1, PIN_C0);  // Servo 1 en RC0
   servo_attach(2, PIN_C1);// Inicializa MPU6050
   
   while(true)
   {
      Ax = MPU6050_get_Ax();              // Acelerometro eje x
      Ay = MPU6050_get_Ay();              // Acelerometro eje y
      Az = MPU6050_get_Az();              // Acelerometro eje z
      
      Gx = MPU6050_get_Gx();              // Giroscopio eje x
      Gy = MPU6050_get_Gy();              // Giroscopio eje y
      Gz = MPU6050_get_Gz();              // Giroscopio eje z
      
      t = MPU6050_get_Temp();             // Temperatura
      
      lcd_gotoxy(1,1);
      printf(lcd_putc, "Ax:%0.2f Ay:%0.2f", Ax, Ay);  // Imprime Ax y Ay en la primera línea
      
      lcd_gotoxy(1,2);
      printf(lcd_putc, "Gx:%0.2f Gy:%0.2f", Gx, Gy);  // Imprime Gx y Gy en la segunda línea
      
      delay_ms(200);
      servo_write(1, 0);    
      delay_ms(1000);

        // Mueve el servo 1 a 90 grados
      servo_write(1, 90);   
      delay_ms(1000);

        // Mueve el servo 1 a 180 grados
      servo_write(1, 180);  
      delay_ms(1000);

        // Mueve el servo 2 a diferentes posiciones
      servo_write(2, 45);   // Mueve el servo 2 a 45 grados
      delay_ms(1000);
      servo_write(2, 135);  // Mueve el servo 2 a 135 grados
      delay_ms(1000);// Retraso para que la pantalla pueda actualizarse
   } 
}
void main() {
    // Inicializa la librería de servos
    servo_init();  

    // Asigna los servos a los pines RC0 y RC1
    servo_attach(1, PIN_C0);  // Servo 1 en RC0
    servo_attach(2, PIN_C1);  // Servo 2 en RC1

    while(TRUE) {
        // Mueve el servo 1 a 0 grados

    }
}

