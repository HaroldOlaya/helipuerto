

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 30 18:50:38 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1
    64                           	psect	text53,global,reloc=2,class=CODE,delta=1
    65                           	psect	text54,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70  0000                     
    71                           ; Version 2.20
    72                           ; Generated 12/02/2020 GMT
    73                           ; 
    74                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4550 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     _ADCON1bits	set	4033
   106  0000                     _TRISDbits	set	3989
   107  0000                     _LATDbits	set	3980
   108  0000                     _SSPBUF	set	4041
   109  0000                     _PIR1bits	set	3998
   110  0000                     _SSPCON2bits	set	4037
   111  0000                     _SSPADD	set	4040
   112  0000                     _SSPCON2	set	4037
   113  0000                     _SSPCON1	set	4038
   114  0000                     _SSPSTAT	set	4039
   115  0000                     _TRISBbits	set	3987
   116                           
   117                           	psect	smallconst
   118  000800                     __psmallconst:
   119                           	callstack 0
   120  000800  00                 	db	0
   121  000801                     STR_1:
   122  000801  41                 	db	65	;'A'
   123  000802  78                 	db	120	;'x'
   124  000803  3A                 	db	58	;':'
   125  000804  25                 	db	37
   126  000805  30                 	db	48	;'0'
   127  000806  2E                 	db	46
   128  000807  32                 	db	50	;'2'
   129  000808  66                 	db	102	;'f'
   130  000809  00                 	db	0
   131  00080A                     STR_5:
   132  00080A  47                 	db	71	;'G'
   133  00080B  78                 	db	120	;'x'
   134  00080C  3A                 	db	58	;':'
   135  00080D  25                 	db	37
   136  00080E  30                 	db	48	;'0'
   137  00080F  2E                 	db	46
   138  000810  32                 	db	50	;'2'
   139  000811  66                 	db	102	;'f'
   140  000812  00                 	db	0
   141  000813                     STR_2:
   142  000813  41                 	db	65	;'A'
   143  000814  79                 	db	121	;'y'
   144  000815  3A                 	db	58	;':'
   145  000816  25                 	db	37
   146  000817  30                 	db	48	;'0'
   147  000818  2E                 	db	46
   148  000819  32                 	db	50	;'2'
   149  00081A  66                 	db	102	;'f'
   150  00081B  00                 	db	0
   151  00081C                     STR_6:
   152  00081C  47                 	db	71	;'G'
   153  00081D  79                 	db	121	;'y'
   154  00081E  3A                 	db	58	;':'
   155  00081F  25                 	db	37
   156  000820  30                 	db	48	;'0'
   157  000821  2E                 	db	46
   158  000822  32                 	db	50	;'2'
   159  000823  66                 	db	102	;'f'
   160  000824  00                 	db	0
   161  000825                     STR_3:
   162  000825  41                 	db	65	;'A'
   163  000826  7A                 	db	122	;'z'
   164  000827  3A                 	db	58	;':'
   165  000828  25                 	db	37
   166  000829  30                 	db	48	;'0'
   167  00082A  2E                 	db	46
   168  00082B  32                 	db	50	;'2'
   169  00082C  66                 	db	102	;'f'
   170  00082D  00                 	db	0
   171  00082E                     STR_7:
   172  00082E  47                 	db	71	;'G'
   173  00082F  7A                 	db	122	;'z'
   174  000830  3A                 	db	58	;':'
   175  000831  25                 	db	37
   176  000832  30                 	db	48	;'0'
   177  000833  2E                 	db	46
   178  000834  32                 	db	50	;'2'
   179  000835  66                 	db	102	;'f'
   180  000836  00                 	db	0
   181  000837                     STR_4:
   182  000837  54                 	db	84	;'T'
   183  000838  3A                 	db	58	;':'
   184  000839  25                 	db	37
   185  00083A  30                 	db	48	;'0'
   186  00083B  2E                 	db	46
   187  00083C  32                 	db	50	;'2'
   188  00083D  66                 	db	102	;'f'
   189  00083E  00                 	db	0
   190  00083F                     STR_8:
   191  00083F  49                 	db	73	;'I'
   192  000840  4E                 	db	78	;'N'
   193  000841  46                 	db	70	;'F'
   194  000842  00                 	db	0
   195  000843                     STR_12:
   196  000843  4E                 	db	78	;'N'
   197  000844  41                 	db	65	;'A'
   198  000845  4E                 	db	78	;'N'
   199  000846  00                 	db	0
   200  000847                     STR_9:
   201  000847  69                 	db	105	;'i'
   202  000848  6E                 	db	110	;'n'
   203  000849  66                 	db	102	;'f'
   204  00084A  00                 	db	0
   205  00084B                     STR_13:
   206  00084B  6E                 	db	110	;'n'
   207  00084C  61                 	db	97	;'a'
   208  00084D  6E                 	db	110	;'n'
   209  00084E  00                 	db	0
   210  00084F                     STR_16:
   211  00084F  6C                 	db	108	;'l'
   212  000850  66                 	db	102	;'f'
   213  000851  00                 	db	0
   214  000852  00                 	db	0	; dummy byte at the end
   215  0000                     
   216                           ; #config settings
   217                           
   218                           	psect	cinit
   219  003F26                     __pcinit:
   220                           	callstack 0
   221  003F26                     start_initialization:
   222                           	callstack 0
   223  003F26                     __initialization:
   224                           	callstack 0
   225                           
   226                           ; Clear objects allocated to BANK1 (80 bytes)
   227  003F26  EE01  F000         	lfsr	0,__pbssBANK1
   228  003F2A  0E50               	movlw	80
   229  003F2C                     clear_0:
   230  003F2C  6AEE               	clrf	postinc0,c
   231  003F2E  06E8               	decf	wreg,f,c
   232  003F30  E1FD               	bnz	clear_0
   233                           
   234                           ; Clear objects allocated to BANK0 (58 bytes)
   235  003F32  EE00  F0BE         	lfsr	0,__pbssBANK0
   236  003F36  0E3A               	movlw	58
   237  003F38                     clear_1:
   238  003F38  6AEE               	clrf	postinc0,c
   239  003F3A  06E8               	decf	wreg,f,c
   240  003F3C  E1FD               	bnz	clear_1
   241  003F3E                     end_of_initialization:
   242                           	callstack 0
   243  003F3E                     __end_of__initialization:
   244                           	callstack 0
   245  003F3E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   246  003F40  6EF8               	movwf	tblptru,c
   247  003F42  0100               	movlb	0
   248  003F44  EF2A  F013         	goto	_main	;jump to C main() function
   249                           
   250                           	psect	bssBANK0
   251  0000BE                     __pbssBANK0:
   252                           	callstack 0
   253  0000BE                     floorf@F527:
   254                           	callstack 0
   255  0000BE                     	ds	4
   256  0000C2                     ___fpclassifyf@F465:
   257                           	callstack 0
   258  0000C2                     	ds	4
   259  0000C6                     _t:
   260                           	callstack 0
   261  0000C6                     	ds	4
   262  0000CA                     _gz:
   263                           	callstack 0
   264  0000CA                     	ds	4
   265  0000CE                     _gy:
   266                           	callstack 0
   267  0000CE                     	ds	4
   268  0000D2                     _gx:
   269                           	callstack 0
   270  0000D2                     	ds	4
   271  0000D6                     _az:
   272                           	callstack 0
   273  0000D6                     	ds	4
   274  0000DA                     _ay:
   275                           	callstack 0
   276  0000DA                     	ds	4
   277  0000DE                     _ax:
   278                           	callstack 0
   279  0000DE                     	ds	4
   280  0000E2                     _nout:
   281                           	callstack 0
   282  0000E2                     	ds	2
   283  0000E4                     _width:
   284                           	callstack 0
   285  0000E4                     	ds	2
   286  0000E6                     _prec:
   287                           	callstack 0
   288  0000E6                     	ds	2
   289  0000E8                     _flags:
   290                           	callstack 0
   291  0000E8                     	ds	2
   292  0000EA                     _buffer:
   293                           	callstack 0
   294  0000EA                     	ds	14
   295                           
   296                           	psect	bssBANK1
   297  000100                     __pbssBANK1:
   298                           	callstack 0
   299  000100                     _dbuf:
   300                           	callstack 0
   301  000100                     	ds	80
   302                           
   303                           	psect	cstackBANK0
   304  000060                     __pcstackBANK0:
   305                           	callstack 0
   306  000060                     _efgtoa$970:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x0
   310  000060                     	ds	2
   311  000062                     _efgtoa$971:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x2
   315  000062                     	ds	2
   316  000064                     _efgtoa$976:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x4
   320  000064                     	ds	2
   321  000066                     _efgtoa$980:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x6
   325  000066                     	ds	2
   326  000068                     _efgtoa$981:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x8
   330  000068                     	ds	2
   331  00006A                     _efgtoa$982:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xA
   335  00006A                     	ds	2
   336  00006C                     efgtoa@t:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0xC
   340  00006C                     	ds	2
   341  00006E                     efgtoa@pp:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0xE
   345  00006E                     	ds	2
   346  000070                     efgtoa@ne:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x10
   350  000070                     	ds	2
   351  000072                     efgtoa@m:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x12
   355  000072                     	ds	2
   356  000074                     efgtoa@ou:
   357                           	callstack 0
   358                           
   359                           ; 4 bytes @ 0x14
   360  000074                     	ds	4
   361  000078                     efgtoa@d:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x18
   365  000078                     	ds	2
   366  00007A                     efgtoa@sign:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x1A
   370  00007A                     	ds	2
   371  00007C                     efgtoa@p:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x1C
   375  00007C                     	ds	2
   376  00007E                     efgtoa@w:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x1E
   380  00007E                     	ds	2
   381  000080                     efgtoa@nmode:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x20
   385  000080                     	ds	1
   386  000081                     efgtoa@mode:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x21
   390  000081                     	ds	1
   391  000082                     efgtoa@h:
   392                           	callstack 0
   393                           
   394                           ; 4 bytes @ 0x22
   395  000082                     	ds	4
   396  000086                     efgtoa@l:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x26
   400  000086                     	ds	4
   401  00008A                     efgtoa@i:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x2A
   405  00008A                     	ds	2
   406  00008C                     efgtoa@g:
   407                           	callstack 0
   408                           
   409                           ; 4 bytes @ 0x2C
   410  00008C                     	ds	4
   411  000090                     efgtoa@e:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x30
   415  000090                     	ds	2
   416  000092                     efgtoa@n:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x32
   420  000092                     	ds	2
   421  000094                     efgtoa@u:
   422                           	callstack 0
   423                           
   424                           ; 4 bytes @ 0x34
   425  000094                     	ds	4
   426  000098                     vfpfcnvrt@done:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x38
   430  000098                     	ds	2
   431  00009A                     _vfpfcnvrt$996:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x3A
   435  00009A                     	ds	2
   436  00009C                     _vfpfcnvrt$1000:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x3C
   440  00009C                     	ds	2
   441  00009E                     vfpfcnvrt@f:
   442                           	callstack 0
   443                           
   444                           ; 4 bytes @ 0x3E
   445  00009E                     	ds	4
   446  0000A2                     vfpfcnvrt@ct:
   447                           	callstack 0
   448                           
   449                           ; 3 bytes @ 0x42
   450  0000A2                     	ds	3
   451  0000A5                     vfpfcnvrt@c:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x45
   455  0000A5                     	ds	1
   456  0000A6                     ?_vfprintf:
   457                           	callstack 0
   458  0000A6                     vfprintf@fp:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x46
   462  0000A6                     	ds	2
   463  0000A8                     vfprintf@fmt:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x48
   467  0000A8                     	ds	2
   468  0000AA                     vfprintf@ap:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x4A
   472  0000AA                     	ds	2
   473  0000AC                     ?_sprintf:
   474                           	callstack 0
   475  0000AC                     sprintf@s:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x4C
   479  0000AC                     	ds	2
   480  0000AE                     sprintf@fmt:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x4E
   484  0000AE                     	ds	6
   485  0000B4                     sprintf@ap:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x54
   489  0000B4                     	ds	2
   490  0000B6                     sprintf@f:
   491                           	callstack 0
   492                           
   493                           ; 6 bytes @ 0x56
   494  0000B6                     	ds	6
   495  0000BC                     ??_main:
   496                           
   497                           ; 1 bytes @ 0x5C
   498  0000BC                     	ds	2
   499                           
   500                           	psect	cstackCOMRAM
   501  000001                     __pcstackCOMRAM:
   502                           	callstack 0
   503  000001                     ?_strlen:
   504                           	callstack 0
   505  000001                     ?___fpclassifyf:
   506                           	callstack 0
   507  000001                     ?_isupper:
   508                           	callstack 0
   509  000001                     ?_isdigit:
   510                           	callstack 0
   511  000001                     ?_strncmp:
   512                           	callstack 0
   513  000001                     ?_isspace:
   514                           	callstack 0
   515  000001                     ?___wmul:
   516                           	callstack 0
   517  000001                     ?___awdiv:
   518                           	callstack 0
   519  000001                     ?___awmod:
   520                           	callstack 0
   521  000001                     ?___flmul:
   522                           	callstack 0
   523  000001                     ?___flneg:
   524                           	callstack 0
   525  000001                     ?___fltol:
   526                           	callstack 0
   527  000001                     I2C_Init_Master@sp_i2c:
   528                           	callstack 0
   529  000001                     I2C_Write@data:
   530                           	callstack 0
   531  000001                     Lcd_Port@a:
   532                           	callstack 0
   533  000001                     ___wmul@multiplier:
   534                           	callstack 0
   535  000001                     ___awdiv@dividend:
   536                           	callstack 0
   537  000001                     ___awmod@dividend:
   538                           	callstack 0
   539  000001                     isdigit@c:
   540                           	callstack 0
   541  000001                     isspace@c:
   542                           	callstack 0
   543  000001                     isupper@c:
   544                           	callstack 0
   545  000001                     fputc@c:
   546                           	callstack 0
   547  000001                     strcpy@dest:
   548                           	callstack 0
   549  000001                     strlen@s:
   550                           	callstack 0
   551  000001                     strncmp@_l:
   552                           	callstack 0
   553  000001                     ___fleq@ff1:
   554                           	callstack 0
   555  000001                     ___flneg@f1:
   556                           	callstack 0
   557  000001                     ___fltol@f1:
   558                           	callstack 0
   559  000001                     ___flmul@b:
   560                           	callstack 0
   561  000001                     ___fpclassifyf@x:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x0
   565  000001                     	ds	1
   566  000002                     ??_Lcd_Cmd:
   567  000002                     ?_MPU6050_Read:
   568                           	callstack 0
   569  000002                     Lcd_Write_Char@temp:
   570                           	callstack 0
   571  000002                     MPU6050_Write@data:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x1
   575  000002                     	ds	1
   576  000003                     ??_isupper:
   577  000003                     ??_isdigit:
   578  000003                     ??_isspace:
   579  000003                     Lcd_Cmd@a:
   580                           	callstack 0
   581  000003                     Lcd_Write_Char@y:
   582                           	callstack 0
   583  000003                     MPU6050_Write@add:
   584                           	callstack 0
   585  000003                     ___wmul@multiplicand:
   586                           	callstack 0
   587  000003                     ___awdiv@divisor:
   588                           	callstack 0
   589  000003                     ___awmod@divisor:
   590                           	callstack 0
   591  000003                     fputc@fp:
   592                           	callstack 0
   593  000003                     strcpy@src:
   594                           	callstack 0
   595  000003                     strlen@a:
   596                           	callstack 0
   597  000003                     strncmp@_r:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x2
   601  000003                     	ds	1
   602  000004                     ??_Lcd_Init:
   603  000004                     ??_MPU6050_Init:
   604  000004                     ??_MPU6050_Read:
   605  000004                     Lcd_Set_Cursor@b:
   606                           	callstack 0
   607  000004                     Lcd_Write_Char@a:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x3
   611  000004                     	ds	1
   612  000005                     ??_fputc:
   613  000005                     ??___fpclassifyf:
   614  000005                     ??_strcpy:
   615  000005                     ??___fltol:
   616  000005                     Lcd_Set_Cursor@a:
   617                           	callstack 0
   618  000005                     ___awdiv@counter:
   619                           	callstack 0
   620  000005                     ___awmod@counter:
   621                           	callstack 0
   622  000005                     Lcd_Write_String@a:
   623                           	callstack 0
   624  000005                     MPU6050_Read@retval:
   625                           	callstack 0
   626  000005                     ___wmul@product:
   627                           	callstack 0
   628  000005                     strncmp@n:
   629                           	callstack 0
   630  000005                     ___fleq@ff2:
   631                           	callstack 0
   632  000005                     ___flmul@a:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0x4
   636  000005                     	ds	1
   637  000006                     Lcd_Set_Cursor@z:
   638                           	callstack 0
   639  000006                     ___awdiv@sign:
   640                           	callstack 0
   641  000006                     ___awmod@sign:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x5
   645  000006                     	ds	1
   646  000007                     ??_strncmp:
   647  000007                     ?_tolower:
   648                           	callstack 0
   649  000007                     Lcd_Set_Cursor@y:
   650                           	callstack 0
   651  000007                     MPU6050_Read@add:
   652                           	callstack 0
   653  000007                     _isspace$1065:
   654                           	callstack 0
   655  000007                     Lcd_Write_String@i:
   656                           	callstack 0
   657  000007                     ___awdiv@quotient:
   658                           	callstack 0
   659  000007                     strcpy@s:
   660                           	callstack 0
   661  000007                     tolower@c:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x6
   665  000007                     	ds	1
   666  000008                     ?_atoi:
   667                           	callstack 0
   668  000008                     ?___xxtofl:
   669                           	callstack 0
   670  000008                     Lcd_Set_Cursor@temp:
   671                           	callstack 0
   672  000008                     atoi@s:
   673                           	callstack 0
   674  000008                     strncmp@l:
   675                           	callstack 0
   676  000008                     ___xxtofl@val:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x7
   680  000008                     	ds	1
   681  000009                     ??___flmul:
   682  000009                     ??_tolower:
   683  000009                     ??___fleq:
   684  000009                     ___fltol@sign1:
   685                           	callstack 0
   686  000009                     ___fpclassifyf@e:
   687                           	callstack 0
   688  000009                     strcpy@d:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x8
   692  000009                     	ds	1
   693  00000A                     ??_atoi:
   694  00000A                     ___fltol@exp1:
   695                           	callstack 0
   696  00000A                     fputs@s:
   697                           	callstack 0
   698  00000A                     strncmp@r:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x9
   702  00000A                     	ds	1
   703  00000B                     ___fpclassifyf@u:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0xA
   707  00000B                     	ds	1
   708  00000C                     ??___xxtofl:
   709  00000C                     fputs@fp:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0xB
   713  00000C                     	ds	1
   714  00000D                     ___flmul@sign:
   715                           	callstack 0
   716  00000D                     _tolower$1129:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0xC
   720  00000D                     	ds	1
   721  00000E                     fputs@c:
   722                           	callstack 0
   723  00000E                     atoi@neg:
   724                           	callstack 0
   725  00000E                     ___flmul@grs:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0xD
   729  00000E                     	ds	1
   730  00000F                     fputs@i:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0xE
   734  00000F                     	ds	1
   735  000010                     ___xxtofl@sign:
   736                           	callstack 0
   737  000010                     _atoi$1034:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0xF
   741  000010                     	ds	1
   742  000011                     ?_pad:
   743                           	callstack 0
   744  000011                     ___xxtofl@exp:
   745                           	callstack 0
   746  000011                     pad@fp:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x10
   750  000011                     	ds	1
   751  000012                     ___flmul@aexp:
   752                           	callstack 0
   753  000012                     _atoi$1036:
   754                           	callstack 0
   755  000012                     ___xxtofl@arg:
   756                           	callstack 0
   757                           
   758                           ; 4 bytes @ 0x11
   759  000012                     	ds	1
   760  000013                     ___flmul@bexp:
   761                           	callstack 0
   762  000013                     pad@buf:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x12
   766  000013                     	ds	1
   767  000014                     _atoi$1035:
   768                           	callstack 0
   769  000014                     ___flmul@prod:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x13
   773  000014                     	ds	1
   774  000015                     pad@p:
   775                           	callstack 0
   776  000015                     atoi@n:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x14
   780  000015                     	ds	1
   781  000016                     ?___fldiv:
   782                           	callstack 0
   783  000016                     ___fldiv@b:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x15
   787  000016                     	ds	1
   788  000017                     ??_pad:
   789                           
   790                           ; 1 bytes @ 0x16
   791  000017                     	ds	1
   792  000018                     ___flmul@temp:
   793                           	callstack 0
   794  000018                     pad@i:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x17
   798  000018                     	ds	2
   799  00001A                     pad@w:
   800                           	callstack 0
   801  00001A                     ___flge@ff1:
   802                           	callstack 0
   803  00001A                     ___fldiv@a:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x19
   807  00001A                     	ds	4
   808  00001E                     ??___fldiv:
   809  00001E                     ___flge@ff2:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x1D
   813  00001E                     	ds	4
   814  000022                     ??___flge:
   815  000022                     ___fldiv@rem:
   816                           	callstack 0
   817                           
   818                           ; 4 bytes @ 0x21
   819  000022                     	ds	4
   820  000026                     ___fldiv@sign:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x25
   824  000026                     	ds	1
   825  000027                     ___fldiv@new_exp:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x26
   829  000027                     	ds	2
   830  000029                     ___fldiv@grs:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x28
   834  000029                     	ds	4
   835  00002D                     ___fldiv@bexp:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x2C
   839  00002D                     	ds	1
   840  00002E                     ___fldiv@aexp:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x2D
   844  00002E                     	ds	1
   845  00002F                     ?___fladd:
   846                           	callstack 0
   847  00002F                     ?_floorf:
   848                           	callstack 0
   849  00002F                     ?_MPU6050_Read_Ax:
   850                           	callstack 0
   851  00002F                     ?_MPU6050_Read_Ay:
   852                           	callstack 0
   853  00002F                     ?_MPU6050_Read_Az:
   854                           	callstack 0
   855  00002F                     ?_MPU6050_Read_Gx:
   856                           	callstack 0
   857  00002F                     ?_MPU6050_Read_Gy:
   858                           	callstack 0
   859  00002F                     ?_MPU6050_Read_Gz:
   860                           	callstack 0
   861  00002F                     ___fladd@b:
   862                           	callstack 0
   863  00002F                     floorf@x:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x2E
   867  00002F                     	ds	4
   868  000033                     ??_floorf:
   869  000033                     ??_MPU6050_Read_Ax:
   870  000033                     ??_MPU6050_Read_Ay:
   871  000033                     ??_MPU6050_Read_Az:
   872  000033                     ??_MPU6050_Read_Gx:
   873  000033                     ??_MPU6050_Read_Gy:
   874  000033                     ??_MPU6050_Read_Gz:
   875  000033                     ___fladd@a:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x32
   879  000033                     	ds	4
   880  000037                     ??___fladd:
   881                           
   882                           ; 1 bytes @ 0x36
   883  000037                     	ds	2
   884  000039                     floorf@m:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x38
   888  000039                     	ds	2
   889  00003B                     ___fladd@signs:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x3A
   893  00003B                     	ds	1
   894  00003C                     ___fladd@aexp:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x3B
   898  00003C                     	ds	1
   899  00003D                     ___fladd@bexp:
   900                           	callstack 0
   901  00003D                     floorf@e:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x3C
   905  00003D                     	ds	1
   906  00003E                     ___fladd@grs:
   907                           	callstack 0
   908                           
   909                           ; 1 bytes @ 0x3D
   910  00003E                     	ds	1
   911  00003F                     ?___flsub:
   912                           	callstack 0
   913  00003F                     ?_MPU6050_Read_Temperature:
   914                           	callstack 0
   915  00003F                     ___flsub@b:
   916                           	callstack 0
   917  00003F                     floorf@u:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x3E
   921  00003F                     	ds	4
   922  000043                     ??_MPU6050_Read_Temperature:
   923  000043                     ___flsub@a:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x42
   927  000043                     	ds	4
   928  000047                     ?_efgtoa:
   929                           	callstack 0
   930  000047                     efgtoa@fp:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x46
   934  000047                     	ds	2
   935  000049                     efgtoa@f:
   936                           	callstack 0
   937                           
   938                           ; 4 bytes @ 0x48
   939  000049                     	ds	4
   940  00004D                     efgtoa@c:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x4C
   944  00004D                     	ds	1
   945  00004E                     ??_efgtoa:
   946                           
   947                           ; 1 bytes @ 0x4D
   948  00004E                     	ds	5
   949  000053                     ?_vfpfcnvrt:
   950                           	callstack 0
   951  000053                     vfpfcnvrt@fp:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x52
   955  000053                     	ds	2
   956  000055                     vfpfcnvrt@fmt:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x54
   960  000055                     	ds	2
   961  000057                     vfpfcnvrt@ap:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x56
   965  000057                     	ds	2
   966  000059                     ??_vfpfcnvrt:
   967                           
   968                           ; 1 bytes @ 0x58
   969  000059                     	ds	4
   970  00005D                     vfprintf@cfmt:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x5C
   974  00005D                     	ds	2
   975  00005F                     
   976                           ; 1 bytes @ 0x5E
   977 ;;
   978 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   979 ;;
   980 ;; *************** function _main *****************
   981 ;; Defined at:
   982 ;;		line 26 in file "MPU6050_Read.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   996 ;;      Params:         0       0       0       0       0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0       0       0
   998 ;;      Temps:          0       2       0       0       0       0       0       0       0
   999 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1000 ;;Total ram usage:        2 bytes
  1001 ;; Hardware stack levels required when called: 8
  1002 ;; This function calls:
  1003 ;;		_I2C_Init_Master
  1004 ;;		_Lcd_Clear
  1005 ;;		_Lcd_Init
  1006 ;;		_Lcd_Set_Cursor
  1007 ;;		_Lcd_Write_String
  1008 ;;		_MPU6050_Init
  1009 ;;		_MPU6050_Read_Ax
  1010 ;;		_MPU6050_Read_Ay
  1011 ;;		_MPU6050_Read_Az
  1012 ;;		_MPU6050_Read_Gx
  1013 ;;		_MPU6050_Read_Gy
  1014 ;;		_MPU6050_Read_Gz
  1015 ;;		_MPU6050_Read_Temperature
  1016 ;;		_sprintf
  1017 ;; This function is called by:
  1018 ;;		Startup code after reset
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text0
  1023  002654                     __ptext0:
  1024                           	callstack 0
  1025  002654                     _main:
  1026                           	callstack 23
  1027  002654                     
  1028                           ;MPU6050_Read.c: 28:     ADCON1bits.PCFG = 0x0F;
  1029  002654  0E0F               	movlw	15
  1030  002656  12C1               	iorwf	193,f,c	;volatile
  1031  002658                     
  1032                           ;MPU6050_Read.c: 29:     I2C_Init_Master(0x80);
  1033  002658  0E80               	movlw	128
  1034  00265A  EC99  F01E         	call	_I2C_Init_Master
  1035  00265E                     
  1036                           ;MPU6050_Read.c: 30:     MPU6050_Init();
  1037  00265E  ECD5  F01D         	call	_MPU6050_Init	;wreg free
  1038  002662                     
  1039                           ;MPU6050_Read.c: 31:     Lcd_Init();
  1040  002662  EC82  F01B         	call	_Lcd_Init	;wreg free
  1041  002666                     l4514:
  1042                           
  1043                           ;MPU6050_Read.c: 34:     {;MPU6050_Read.c: 35:         ax = MPU6050_Read_Ax();
  1044  002666  ECE0  F01C         	call	_MPU6050_Read_Ax	;wreg free
  1045  00266A  C02F  F0DE         	movff	?_MPU6050_Read_Ax,_ax
  1046  00266E  C030  F0DF         	movff	?_MPU6050_Read_Ax+1,_ax+1
  1047  002672  C031  F0E0         	movff	?_MPU6050_Read_Ax+2,_ax+2
  1048  002676  C032  F0E1         	movff	?_MPU6050_Read_Ax+3,_ax+3
  1049  00267A                     
  1050                           ;MPU6050_Read.c: 36:         ay = MPU6050_Read_Ay();
  1051  00267A  ECA8  F01C         	call	_MPU6050_Read_Ay	;wreg free
  1052  00267E  C02F  F0DA         	movff	?_MPU6050_Read_Ay,_ay
  1053  002682  C030  F0DB         	movff	?_MPU6050_Read_Ay+1,_ay+1
  1054  002686  C031  F0DC         	movff	?_MPU6050_Read_Ay+2,_ay+2
  1055  00268A  C032  F0DD         	movff	?_MPU6050_Read_Ay+3,_ay+3
  1056  00268E                     
  1057                           ;MPU6050_Read.c: 37:         az = MPU6050_Read_Az();
  1058  00268E  EC70  F01C         	call	_MPU6050_Read_Az	;wreg free
  1059  002692  C02F  F0D6         	movff	?_MPU6050_Read_Az,_az
  1060  002696  C030  F0D7         	movff	?_MPU6050_Read_Az+1,_az+1
  1061  00269A  C031  F0D8         	movff	?_MPU6050_Read_Az+2,_az+2
  1062  00269E  C032  F0D9         	movff	?_MPU6050_Read_Az+3,_az+3
  1063  0026A2                     
  1064                           ;MPU6050_Read.c: 39:         gx = MPU6050_Read_Gx();
  1065  0026A2  EC38  F01C         	call	_MPU6050_Read_Gx	;wreg free
  1066  0026A6  C02F  F0D2         	movff	?_MPU6050_Read_Gx,_gx
  1067  0026AA  C030  F0D3         	movff	?_MPU6050_Read_Gx+1,_gx+1
  1068  0026AE  C031  F0D4         	movff	?_MPU6050_Read_Gx+2,_gx+2
  1069  0026B2  C032  F0D5         	movff	?_MPU6050_Read_Gx+3,_gx+3
  1070  0026B6                     
  1071                           ;MPU6050_Read.c: 40:         gy = MPU6050_Read_Gy();
  1072  0026B6  EC00  F01C         	call	_MPU6050_Read_Gy	;wreg free
  1073  0026BA  C02F  F0CE         	movff	?_MPU6050_Read_Gy,_gy
  1074  0026BE  C030  F0CF         	movff	?_MPU6050_Read_Gy+1,_gy+1
  1075  0026C2  C031  F0D0         	movff	?_MPU6050_Read_Gy+2,_gy+2
  1076  0026C6  C032  F0D1         	movff	?_MPU6050_Read_Gy+3,_gy+3
  1077  0026CA                     
  1078                           ;MPU6050_Read.c: 41:         gz = MPU6050_Read_Gz();
  1079  0026CA  ECC8  F01B         	call	_MPU6050_Read_Gz	;wreg free
  1080  0026CE  C02F  F0CA         	movff	?_MPU6050_Read_Gz,_gz
  1081  0026D2  C030  F0CB         	movff	?_MPU6050_Read_Gz+1,_gz+1
  1082  0026D6  C031  F0CC         	movff	?_MPU6050_Read_Gz+2,_gz+2
  1083  0026DA  C032  F0CD         	movff	?_MPU6050_Read_Gz+3,_gz+3
  1084  0026DE                     
  1085                           ;MPU6050_Read.c: 43:         t = MPU6050_Read_Temperature();
  1086  0026DE  EC38  F01B         	call	_MPU6050_Read_Temperature	;wreg free
  1087  0026E2  C03F  F0C6         	movff	?_MPU6050_Read_Temperature,_t
  1088  0026E6  C040  F0C7         	movff	?_MPU6050_Read_Temperature+1,_t+1
  1089  0026EA  C041  F0C8         	movff	?_MPU6050_Read_Temperature+2,_t+2
  1090  0026EE  C042  F0C9         	movff	?_MPU6050_Read_Temperature+3,_t+3
  1091  0026F2                     
  1092                           ;MPU6050_Read.c: 45:         Lcd_Clear();
  1093  0026F2  EC04  F020         	call	_Lcd_Clear	;wreg free
  1094  0026F6                     
  1095                           ;MPU6050_Read.c: 46:         Lcd_Set_Cursor(1,1);
  1096  0026F6  0E01               	movlw	1
  1097  0026F8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1098  0026FA  0E01               	movlw	1
  1099  0026FC  ECF8  F018         	call	_Lcd_Set_Cursor
  1100  002700                     
  1101                           ;MPU6050_Read.c: 47:         sprintf(buffer, "Ax:%0.2f", ax);
  1102  002700  0EEA               	movlw	low _buffer
  1103  002702  0100               	movlb	0	; () banked
  1104  002704  6FAC               	movwf	sprintf@s& (0+255),b
  1105  002706  0E00               	movlw	high _buffer
  1106  002708  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1107  00270A  0E01               	movlw	low STR_1
  1108  00270C  6FAE               	movwf	sprintf@fmt& (0+255),b
  1109  00270E  0E08               	movlw	high STR_1
  1110  002710  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1111  002712  C0DE  F0B0         	movff	_ax,?_sprintf+4
  1112  002716  C0DF  F0B1         	movff	_ax+1,?_sprintf+5
  1113  00271A  C0E0  F0B2         	movff	_ax+2,?_sprintf+6
  1114  00271E  C0E1  F0B3         	movff	_ax+3,?_sprintf+7
  1115  002722  EC02  F01E         	call	_sprintf	;wreg free
  1116  002726                     
  1117                           ;MPU6050_Read.c: 48:         Lcd_Write_String(buffer);
  1118  002726  0EEA               	movlw	low _buffer
  1119  002728  6E05               	movwf	Lcd_Write_String@a^0,c
  1120  00272A  0E00               	movlw	high _buffer
  1121  00272C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1122  00272E  ECBA  F01E         	call	_Lcd_Write_String	;wreg free
  1123  002732                     
  1124                           ;MPU6050_Read.c: 49:         Lcd_Set_Cursor(2,1);
  1125  002732  0E01               	movlw	1
  1126  002734  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1127  002736  0E02               	movlw	2
  1128  002738  ECF8  F018         	call	_Lcd_Set_Cursor
  1129  00273C                     
  1130                           ;MPU6050_Read.c: 50:         sprintf(buffer, "Ay:%0.2f", ay);
  1131  00273C  0EEA               	movlw	low _buffer
  1132  00273E  0100               	movlb	0	; () banked
  1133  002740  6FAC               	movwf	sprintf@s& (0+255),b
  1134  002742  0E00               	movlw	high _buffer
  1135  002744  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1136  002746  0E13               	movlw	low STR_2
  1137  002748  6FAE               	movwf	sprintf@fmt& (0+255),b
  1138  00274A  0E08               	movlw	high STR_2
  1139  00274C  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1140  00274E  C0DA  F0B0         	movff	_ay,?_sprintf+4
  1141  002752  C0DB  F0B1         	movff	_ay+1,?_sprintf+5
  1142  002756  C0DC  F0B2         	movff	_ay+2,?_sprintf+6
  1143  00275A  C0DD  F0B3         	movff	_ay+3,?_sprintf+7
  1144  00275E  EC02  F01E         	call	_sprintf	;wreg free
  1145  002762                     
  1146                           ;MPU6050_Read.c: 51:         Lcd_Write_String(buffer);
  1147  002762  0EEA               	movlw	low _buffer
  1148  002764  6E05               	movwf	Lcd_Write_String@a^0,c
  1149  002766  0E00               	movlw	high _buffer
  1150  002768  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1151  00276A  ECBA  F01E         	call	_Lcd_Write_String	;wreg free
  1152  00276E                     
  1153                           ;MPU6050_Read.c: 52:         Lcd_Set_Cursor(3,1);
  1154  00276E  0E01               	movlw	1
  1155  002770  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1156  002772  0E03               	movlw	3
  1157  002774  ECF8  F018         	call	_Lcd_Set_Cursor
  1158  002778                     
  1159                           ;MPU6050_Read.c: 53:         sprintf(buffer, "Az:%0.2f", az);
  1160  002778  0EEA               	movlw	low _buffer
  1161  00277A  0100               	movlb	0	; () banked
  1162  00277C  6FAC               	movwf	sprintf@s& (0+255),b
  1163  00277E  0E00               	movlw	high _buffer
  1164  002780  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1165  002782  0E25               	movlw	low STR_3
  1166  002784  6FAE               	movwf	sprintf@fmt& (0+255),b
  1167  002786  0E08               	movlw	high STR_3
  1168  002788  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1169  00278A  C0D6  F0B0         	movff	_az,?_sprintf+4
  1170  00278E  C0D7  F0B1         	movff	_az+1,?_sprintf+5
  1171  002792  C0D8  F0B2         	movff	_az+2,?_sprintf+6
  1172  002796  C0D9  F0B3         	movff	_az+3,?_sprintf+7
  1173  00279A  EC02  F01E         	call	_sprintf	;wreg free
  1174  00279E                     
  1175                           ;MPU6050_Read.c: 54:         Lcd_Write_String(buffer);
  1176  00279E  0EEA               	movlw	low _buffer
  1177  0027A0  6E05               	movwf	Lcd_Write_String@a^0,c
  1178  0027A2  0E00               	movlw	high _buffer
  1179  0027A4  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1180  0027A6  ECBA  F01E         	call	_Lcd_Write_String	;wreg free
  1181  0027AA                     
  1182                           ;MPU6050_Read.c: 55:         Lcd_Set_Cursor(4,1);
  1183  0027AA  0E01               	movlw	1
  1184  0027AC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1185  0027AE  0E04               	movlw	4
  1186  0027B0  ECF8  F018         	call	_Lcd_Set_Cursor
  1187  0027B4                     
  1188                           ;MPU6050_Read.c: 56:         sprintf(buffer, "T:%0.2f", t);
  1189  0027B4  0EEA               	movlw	low _buffer
  1190  0027B6  0100               	movlb	0	; () banked
  1191  0027B8  6FAC               	movwf	sprintf@s& (0+255),b
  1192  0027BA  0E00               	movlw	high _buffer
  1193  0027BC  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1194  0027BE  0E37               	movlw	low STR_4
  1195  0027C0  6FAE               	movwf	sprintf@fmt& (0+255),b
  1196  0027C2  0E08               	movlw	high STR_4
  1197  0027C4  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1198  0027C6  C0C6  F0B0         	movff	_t,?_sprintf+4
  1199  0027CA  C0C7  F0B1         	movff	_t+1,?_sprintf+5
  1200  0027CE  C0C8  F0B2         	movff	_t+2,?_sprintf+6
  1201  0027D2  C0C9  F0B3         	movff	_t+3,?_sprintf+7
  1202  0027D6  EC02  F01E         	call	_sprintf	;wreg free
  1203  0027DA                     
  1204                           ;MPU6050_Read.c: 57:         Lcd_Write_String(buffer);
  1205  0027DA  0EEA               	movlw	low _buffer
  1206  0027DC  6E05               	movwf	Lcd_Write_String@a^0,c
  1207  0027DE  0E00               	movlw	high _buffer
  1208  0027E0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1209  0027E2  ECBA  F01E         	call	_Lcd_Write_String	;wreg free
  1210  0027E6                     
  1211                           ;MPU6050_Read.c: 58:         Lcd_Set_Cursor(1,11);
  1212  0027E6  0E0B               	movlw	11
  1213  0027E8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1214  0027EA  0E01               	movlw	1
  1215  0027EC  ECF8  F018         	call	_Lcd_Set_Cursor
  1216  0027F0                     
  1217                           ;MPU6050_Read.c: 59:         sprintf(buffer, "Gx:%0.2f", gx);
  1218  0027F0  0EEA               	movlw	low _buffer
  1219  0027F2  0100               	movlb	0	; () banked
  1220  0027F4  6FAC               	movwf	sprintf@s& (0+255),b
  1221  0027F6  0E00               	movlw	high _buffer
  1222  0027F8  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1223  0027FA  0E0A               	movlw	low STR_5
  1224  0027FC  6FAE               	movwf	sprintf@fmt& (0+255),b
  1225  0027FE  0E08               	movlw	high STR_5
  1226  002800  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1227  002802  C0D2  F0B0         	movff	_gx,?_sprintf+4
  1228  002806  C0D3  F0B1         	movff	_gx+1,?_sprintf+5
  1229  00280A  C0D4  F0B2         	movff	_gx+2,?_sprintf+6
  1230  00280E  C0D5  F0B3         	movff	_gx+3,?_sprintf+7
  1231  002812  EC02  F01E         	call	_sprintf	;wreg free
  1232  002816                     
  1233                           ;MPU6050_Read.c: 60:         Lcd_Write_String(buffer);
  1234  002816  0EEA               	movlw	low _buffer
  1235  002818  6E05               	movwf	Lcd_Write_String@a^0,c
  1236  00281A  0E00               	movlw	high _buffer
  1237  00281C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1238  00281E  ECBA  F01E         	call	_Lcd_Write_String	;wreg free
  1239  002822                     
  1240                           ;MPU6050_Read.c: 61:         Lcd_Set_Cursor(2,11);
  1241  002822  0E0B               	movlw	11
  1242  002824  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1243  002826  0E02               	movlw	2
  1244  002828  ECF8  F018         	call	_Lcd_Set_Cursor
  1245  00282C                     
  1246                           ;MPU6050_Read.c: 62:         sprintf(buffer, "Gy:%0.2f", gy);
  1247  00282C  0EEA               	movlw	low _buffer
  1248  00282E  0100               	movlb	0	; () banked
  1249  002830  6FAC               	movwf	sprintf@s& (0+255),b
  1250  002832  0E00               	movlw	high _buffer
  1251  002834  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1252  002836  0E1C               	movlw	low STR_6
  1253  002838  6FAE               	movwf	sprintf@fmt& (0+255),b
  1254  00283A  0E08               	movlw	high STR_6
  1255  00283C  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1256  00283E  C0CE  F0B0         	movff	_gy,?_sprintf+4
  1257  002842  C0CF  F0B1         	movff	_gy+1,?_sprintf+5
  1258  002846  C0D0  F0B2         	movff	_gy+2,?_sprintf+6
  1259  00284A  C0D1  F0B3         	movff	_gy+3,?_sprintf+7
  1260  00284E  EC02  F01E         	call	_sprintf	;wreg free
  1261  002852                     
  1262                           ;MPU6050_Read.c: 63:         Lcd_Write_String(buffer);
  1263  002852  0EEA               	movlw	low _buffer
  1264  002854  6E05               	movwf	Lcd_Write_String@a^0,c
  1265  002856  0E00               	movlw	high _buffer
  1266  002858  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1267  00285A  ECBA  F01E         	call	_Lcd_Write_String	;wreg free
  1268  00285E                     
  1269                           ;MPU6050_Read.c: 64:         Lcd_Set_Cursor(3,11);
  1270  00285E  0E0B               	movlw	11
  1271  002860  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1272  002862  0E03               	movlw	3
  1273  002864  ECF8  F018         	call	_Lcd_Set_Cursor
  1274  002868                     
  1275                           ;MPU6050_Read.c: 65:         sprintf(buffer, "Gz:%0.2f", gz);
  1276  002868  0EEA               	movlw	low _buffer
  1277  00286A  0100               	movlb	0	; () banked
  1278  00286C  6FAC               	movwf	sprintf@s& (0+255),b
  1279  00286E  0E00               	movlw	high _buffer
  1280  002870  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1281  002872  0E2E               	movlw	low STR_7
  1282  002874  6FAE               	movwf	sprintf@fmt& (0+255),b
  1283  002876  0E08               	movlw	high STR_7
  1284  002878  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1285  00287A  C0CA  F0B0         	movff	_gz,?_sprintf+4
  1286  00287E  C0CB  F0B1         	movff	_gz+1,?_sprintf+5
  1287  002882  C0CC  F0B2         	movff	_gz+2,?_sprintf+6
  1288  002886  C0CD  F0B3         	movff	_gz+3,?_sprintf+7
  1289  00288A  EC02  F01E         	call	_sprintf	;wreg free
  1290  00288E                     
  1291                           ;MPU6050_Read.c: 66:         Lcd_Write_String(buffer);
  1292  00288E  0EEA               	movlw	low _buffer
  1293  002890  6E05               	movwf	Lcd_Write_String@a^0,c
  1294  002892  0E00               	movlw	high _buffer
  1295  002894  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1296  002896  ECBA  F01E         	call	_Lcd_Write_String	;wreg free
  1297  00289A                     
  1298                           ;MPU6050_Read.c: 67:         _delay((unsigned long)((200)*(48000000/4000.0)));
  1299  00289A  0E0D               	movlw	13
  1300  00289C  0100               	movlb	0	; () banked
  1301  00289E  6FBD               	movwf	(??_main+1)& (0+255),b
  1302  0028A0  0E2D               	movlw	45
  1303  0028A2  6FBC               	movwf	??_main& (0+255),b
  1304  0028A4  0ED7               	movlw	215
  1305  0028A6                     u5167:
  1306  0028A6  2EE8               	decfsz	wreg,f,c
  1307  0028A8  D7FE               	bra	u5167
  1308  0028AA  2FBC               	decfsz	??_main& (0+255),f,b
  1309  0028AC  D7FC               	bra	u5167
  1310  0028AE  2FBD               	decfsz	(??_main+1)& (0+255),f,b
  1311  0028B0  D7FA               	bra	u5167
  1312  0028B2  D000               	nop2	
  1313  0028B4  EF33  F013         	goto	l4514
  1314  0028B8  EF00  F000         	goto	start
  1315  0028BC                     __end_of_main:
  1316                           	callstack 0
  1317                           
  1318 ;; *************** function _sprintf *****************
  1319 ;; Defined at:
  1320 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  s               2   76[BANK0 ] PTR unsigned char 
  1323 ;;		 -> buffer(14), 
  1324 ;;  fmt             2   78[BANK0 ] PTR const unsigned char 
  1325 ;;		 -> STR_7(9), STR_6(9), STR_5(9), STR_4(8), 
  1326 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  f               6   86[BANK0 ] struct _IO_FILE
  1329 ;;  ap              2   84[BANK0 ] PTR void [1]
  1330 ;;		 -> ?_sprintf(2), 
  1331 ;;  ret             2    0        int 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  2   76[BANK0 ] int 
  1334 ;; Registers used:
  1335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1341 ;;      Params:         0       8       0       0       0       0       0       0       0
  1342 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1344 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1345 ;;Total ram usage:       16 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 7
  1348 ;; This function calls:
  1349 ;;		_vfprintf
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text1
  1356  003C04                     __ptext1:
  1357                           	callstack 0
  1358  003C04                     _sprintf:
  1359                           	callstack 23
  1360  003C04  0EB0               	movlw	low (?_sprintf+4)
  1361  003C06  0100               	movlb	0	; () banked
  1362  003C08  6FB4               	movwf	sprintf@ap& (0+255),b
  1363  003C0A  0E00               	movlw	high (?_sprintf+4)
  1364  003C0C  6FB5               	movwf	(sprintf@ap+1)& (0+255),b
  1365  003C0E  C0AC  F0B6         	movff	sprintf@s,sprintf@f
  1366  003C12  C0AD  F0B7         	movff	sprintf@s+1,sprintf@f+1
  1367  003C16                     
  1368                           ; BSR set to: 0
  1369  003C16  0E00               	movlw	0
  1370  003C18  6FB9               	movwf	(sprintf@f+3)& (0+255),b
  1371  003C1A  0E00               	movlw	0
  1372  003C1C  6FB8               	movwf	(sprintf@f+2)& (0+255),b
  1373  003C1E                     
  1374                           ; BSR set to: 0
  1375  003C1E  0E00               	movlw	0
  1376  003C20  6FBB               	movwf	(sprintf@f+5)& (0+255),b
  1377  003C22  0E00               	movlw	0
  1378  003C24  6FBA               	movwf	(sprintf@f+4)& (0+255),b
  1379  003C26                     
  1380                           ; BSR set to: 0
  1381  003C26  0EB6               	movlw	low sprintf@f
  1382  003C28  6FA6               	movwf	vfprintf@fp& (0+255),b
  1383  003C2A  0E00               	movlw	high sprintf@f
  1384  003C2C  6FA7               	movwf	(vfprintf@fp+1)& (0+255),b
  1385  003C2E  C0AE  F0A8         	movff	sprintf@fmt,vfprintf@fmt
  1386  003C32  C0AF  F0A9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1387  003C36  0EB4               	movlw	low sprintf@ap
  1388  003C38  6FAA               	movwf	vfprintf@ap& (0+255),b
  1389  003C3A  0E00               	movlw	high sprintf@ap
  1390  003C3C  6FAB               	movwf	(vfprintf@ap+1)& (0+255),b
  1391  003C3E  EC18  F01D         	call	_vfprintf	;wreg free
  1392  003C42  0100               	movlb	0	; () banked
  1393  003C44  51B8               	movf	(sprintf@f+2)& (0+255),w,b
  1394  003C46  25AC               	addwf	sprintf@s& (0+255),w,b
  1395  003C48  6ED9               	movwf	fsr2l,c
  1396  003C4A  51B9               	movf	(sprintf@f+3)& (0+255),w,b
  1397  003C4C  21AD               	addwfc	(sprintf@s+1)& (0+255),w,b
  1398  003C4E  6EDA               	movwf	fsr2h,c
  1399  003C50  0E00               	movlw	0
  1400  003C52  6EDF               	movwf	indf2,c
  1401  003C54                     
  1402                           ; BSR set to: 0
  1403  003C54  0012               	return		;funcret
  1404  003C56                     __end_of_sprintf:
  1405                           	callstack 0
  1406                           
  1407 ;; *************** function _vfprintf *****************
  1408 ;; Defined at:
  1409 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  1412 ;;		 -> sprintf@f(6), 
  1413 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  1414 ;;		 -> STR_7(9), STR_6(9), STR_5(9), STR_4(8), 
  1415 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  1416 ;;  ap              2   74[BANK0 ] PTR PTR void 
  1417 ;;		 -> sprintf@ap(2), 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  1420 ;;		 -> STR_7(9), STR_6(9), STR_5(9), STR_4(8), 
  1421 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  2   70[BANK0 ] int 
  1424 ;; Registers used:
  1425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1431 ;;      Params:         0       6       0       0       0       0       0       0       0
  1432 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1434 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1435 ;;Total ram usage:        8 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; Hardware stack levels required when called: 6
  1438 ;; This function calls:
  1439 ;;		_vfpfcnvrt
  1440 ;; This function is called by:
  1441 ;;		_sprintf
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text2
  1446  003A30                     __ptext2:
  1447                           	callstack 0
  1448  003A30                     _vfprintf:
  1449                           	callstack 23
  1450  003A30                     
  1451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1452  003A30  C0A8  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  1453  003A34  C0A9  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1454  003A38                     
  1455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1456  003A38  0E00               	movlw	0
  1457  003A3A  0100               	movlb	0	; () banked
  1458  003A3C  6FE3               	movwf	(_nout+1)& (0+255),b
  1459  003A3E  0E00               	movlw	0
  1460  003A40  6FE2               	movwf	_nout& (0+255),b
  1461                           
  1462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1463  003A42  EF36  F01D         	goto	l4358
  1464  003A46                     l4356:
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1468  003A46  C0A6  F053         	movff	vfprintf@fp,vfpfcnvrt@fp
  1469  003A4A  C0A7  F054         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1470  003A4E  0E5D               	movlw	low vfprintf@cfmt
  1471  003A50  6E55               	movwf	vfpfcnvrt@fmt^0,c
  1472  003A52  0E00               	movlw	high vfprintf@cfmt
  1473  003A54  6E56               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1474  003A56  C0AA  F057         	movff	vfprintf@ap,vfpfcnvrt@ap
  1475  003A5A  C0AB  F058         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1476  003A5E  EC56  F00A         	call	_vfpfcnvrt	;wreg free
  1477  003A62  5053               	movf	?_vfpfcnvrt^0,w,c
  1478  003A64  0100               	movlb	0	; () banked
  1479  003A66  27E2               	addwf	_nout& (0+255),f,b
  1480  003A68  5054               	movf	(?_vfpfcnvrt+1)^0,w,c
  1481  003A6A  23E3               	addwfc	(_nout+1)& (0+255),f,b
  1482  003A6C                     l4358:
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1486  003A6C  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1487  003A70  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1488  003A74                     	if	0	;tblptru may be non-zero
  1489  003A74                     	endif
  1490  003A74                     	if	0	;tblptru may be non-zero
  1491  003A74                     	endif
  1492  003A74  0008               	tblrd		*
  1493  003A76  50F5               	movf	tablat,w,c
  1494  003A78  0900               	iorlw	0
  1495  003A7A  A4D8               	btfss	status,2,c
  1496  003A7C  EF42  F01D         	goto	u5081
  1497  003A80  EF44  F01D         	goto	u5080
  1498  003A84                     u5081:
  1499  003A84  EF23  F01D         	goto	l4356
  1500  003A88                     u5080:
  1501  003A88                     
  1502                           ; BSR set to: 0
  1503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1504  003A88  C0E2  F0A6         	movff	_nout,?_vfprintf
  1505  003A8C  C0E3  F0A7         	movff	_nout+1,?_vfprintf+1
  1506  003A90                     
  1507                           ; BSR set to: 0
  1508  003A90  0012               	return		;funcret
  1509  003A92                     __end_of_vfprintf:
  1510                           	callstack 0
  1511                           
  1512 ;; *************** function _vfpfcnvrt *****************
  1513 ;; Defined at:
  1514 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  1517 ;;		 -> sprintf@f(6), 
  1518 ;;  fmt             2   84[COMRAM] PTR PTR unsigned char 
  1519 ;;		 -> vfprintf@cfmt(2), 
  1520 ;;  ap              2   86[COMRAM] PTR PTR void 
  1521 ;;		 -> sprintf@ap(2), 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  llu             8    0        unsigned long long 
  1524 ;;  ll              8    0        long long 
  1525 ;;  f               4   62[BANK0 ] long long 
  1526 ;;  ct              3   66[BANK0 ] unsigned char [3]
  1527 ;;  vp              3    0        PTR void 
  1528 ;;  cp              3    0        PTR unsigned char 
  1529 ;;  done            2   56[BANK0 ] int 
  1530 ;;  i               2    0        int 
  1531 ;;  c               1   69[BANK0 ] unsigned char 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  2   82[COMRAM] int 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1541 ;;      Params:         6       0       0       0       0       0       0       0       0
  1542 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1543 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1544 ;;      Totals:        10      14       0       0       0       0       0       0       0
  1545 ;;Total ram usage:       24 bytes
  1546 ;; Hardware stack levels used: 1
  1547 ;; Hardware stack levels required when called: 5
  1548 ;; This function calls:
  1549 ;;		_atoi
  1550 ;;		_efgtoa
  1551 ;;		_fputc
  1552 ;;		_isdigit
  1553 ;;		_isupper
  1554 ;;		_strncmp
  1555 ;;		_tolower
  1556 ;; This function is called by:
  1557 ;;		_vfprintf
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text3
  1562  0014AC                     __ptext3:
  1563                           	callstack 0
  1564  0014AC                     _vfpfcnvrt:
  1565                           	callstack 23
  1566  0014AC                     
  1567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1568  0014AC  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1569  0014B0  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1570  0014B4  CFDE FFF6          	movff	postinc2,tblptrl
  1571  0014B8  CFDD FFF7          	movff	postdec2,tblptrh
  1572  0014BC                     	if	0	;tblptru may be non-zero
  1573  0014BC                     	endif
  1574  0014BC                     	if	0	;tblptru may be non-zero
  1575  0014BC                     	endif
  1576  0014BC  0008               	tblrd		*
  1577  0014BE  50F5               	movf	tablat,w,c
  1578  0014C0  0A25               	xorlw	37
  1579  0014C2  A4D8               	btfss	status,2,c
  1580  0014C4  EF66  F00A         	goto	u4821
  1581  0014C8  EF68  F00A         	goto	u4820
  1582  0014CC                     u4821:
  1583  0014CC  EFCC  F00C         	goto	l4240
  1584  0014D0                     u4820:
  1585  0014D0                     
  1586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1587  0014D0  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1588  0014D4  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1589  0014D8  2ADE               	incf	postinc2,f,c
  1590  0014DA  0E00               	movlw	0
  1591  0014DC  22DD               	addwfc	postdec2,f,c
  1592  0014DE                     
  1593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1594  0014DE  0E00               	movlw	0
  1595  0014E0  0100               	movlb	0	; () banked
  1596  0014E2  6FE5               	movwf	(_width+1)& (0+255),b
  1597  0014E4  0E00               	movlw	0
  1598  0014E6  6FE4               	movwf	_width& (0+255),b
  1599  0014E8  C0E4  F0E8         	movff	_width,_flags
  1600  0014EC  C0E5  F0E9         	movff	_width+1,_flags+1
  1601  0014F0                     
  1602                           ; BSR set to: 0
  1603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1604  0014F0  69E6               	setf	_prec& (0+255),b
  1605  0014F2  69E7               	setf	(_prec+1)& (0+255),b
  1606  0014F4                     
  1607                           ; BSR set to: 0
  1608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1609  0014F4  0E00               	movlw	0
  1610  0014F6  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1611  0014F8  0E00               	movlw	0
  1612  0014FA  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1615  0014FC  EFC6  F00A         	goto	l4162
  1616  001500                     l4136:
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1620  001500  81E8               	bsf	_flags& (0+255),0,b
  1621  001502                     l4138:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1625  001502  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1626  001506  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1627  00150A  2ADE               	incf	postinc2,f,c
  1628  00150C  0E00               	movlw	0
  1629  00150E  22DD               	addwfc	postdec2,f,c
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1632  001510  EFC6  F00A         	goto	l4162
  1633  001514                     l4140:
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1637  001514  83E8               	bsf	_flags& (0+255),1,b
  1638  001516  EF81  F00A         	goto	l4138
  1639  00151A                     l4144:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1643  00151A  85E8               	bsf	_flags& (0+255),2,b
  1644  00151C  EF81  F00A         	goto	l4138
  1645  001520                     l4148:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1649  001520  87E8               	bsf	_flags& (0+255),3,b
  1650  001522  EF81  F00A         	goto	l4138
  1651  001526                     l4152:
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1655  001526  89E8               	bsf	_flags& (0+255),4,b
  1656  001528  EF81  F00A         	goto	l4138
  1657  00152C                     l4156:
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1661  00152C  0E00               	movlw	0
  1662  00152E  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1663  001530  0E01               	movlw	1
  1664  001532  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1667  001534  EFC6  F00A         	goto	l4162
  1668  001538                     l4160:
  1669                           
  1670                           ; BSR set to: 0
  1671  001538  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1672  00153C  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1673  001540  CFDE FFF6          	movff	postinc2,tblptrl
  1674  001544  CFDD FFF7          	movff	postdec2,tblptrh
  1675  001548                     	if	0	;tblptru may be non-zero
  1676  001548                     	endif
  1677  001548                     	if	0	;tblptru may be non-zero
  1678  001548                     	endif
  1679  001548  0008               	tblrd		*
  1680  00154A  50F5               	movf	tablat,w,c
  1681  00154C  6E59               	movwf	??_vfpfcnvrt^0,c
  1682  00154E  6A5A               	clrf	(??_vfpfcnvrt+1)^0,c
  1683                           
  1684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1685                           ; Switch size 1, requested type "simple"
  1686                           ; Number of cases is 1, Range of values is 0 to 0
  1687                           ; switch strategies available:
  1688                           ; Name         Instructions Cycles
  1689                           ; simple_byte            4     3 (average)
  1690                           ;	Chosen strategy is simple_byte
  1691  001550  505A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1692  001552  0A00               	xorlw	0	; case 0
  1693  001554  B4D8               	btfsc	status,2,c
  1694  001556  EFAF  F00A         	goto	l4624
  1695  00155A  EF96  F00A         	goto	l4156
  1696  00155E                     l4624:
  1697                           
  1698                           ; BSR set to: 0
  1699                           ; Switch size 1, requested type "simple"
  1700                           ; Number of cases is 5, Range of values is 32 to 48
  1701                           ; switch strategies available:
  1702                           ; Name         Instructions Cycles
  1703                           ; simple_byte           16     9 (average)
  1704                           ;	Chosen strategy is simple_byte
  1705  00155E  5059               	movf	??_vfpfcnvrt^0,w,c
  1706  001560  0A20               	xorlw	32	; case 32
  1707  001562  B4D8               	btfsc	status,2,c
  1708  001564  EF90  F00A         	goto	l4148
  1709  001568  0A03               	xorlw	3	; case 35
  1710  00156A  B4D8               	btfsc	status,2,c
  1711  00156C  EF93  F00A         	goto	l4152
  1712  001570  0A08               	xorlw	8	; case 43
  1713  001572  B4D8               	btfsc	status,2,c
  1714  001574  EF8D  F00A         	goto	l4144
  1715  001578  0A06               	xorlw	6	; case 45
  1716  00157A  B4D8               	btfsc	status,2,c
  1717  00157C  EF80  F00A         	goto	l4136
  1718  001580  0A1D               	xorlw	29	; case 48
  1719  001582  B4D8               	btfsc	status,2,c
  1720  001584  EF8A  F00A         	goto	l4140
  1721  001588  EF96  F00A         	goto	l4156
  1722  00158C                     l4162:
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1726  00158C  5198               	movf	vfpfcnvrt@done& (0+255),w,b
  1727  00158E  1199               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1728  001590  B4D8               	btfsc	status,2,c
  1729  001592  EFCD  F00A         	goto	u4831
  1730  001596  EFCF  F00A         	goto	u4830
  1731  00159A                     u4831:
  1732  00159A  EF9C  F00A         	goto	l4160
  1733  00159E                     u4830:
  1734  00159E                     
  1735                           ; BSR set to: 0
  1736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1737  00159E  A1E8               	btfss	_flags& (0+255),0,b
  1738  0015A0  EFD4  F00A         	goto	u4841
  1739  0015A4  EFD6  F00A         	goto	u4840
  1740  0015A8                     u4841:
  1741  0015A8  EFD7  F00A         	goto	l4166
  1742  0015AC                     u4840:
  1743  0015AC                     
  1744                           ; BSR set to: 0
  1745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1746  0015AC  93E8               	bcf	_flags& (0+255),1,b
  1747  0015AE                     l4166:
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1751  0015AE  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1752  0015B2  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1753  0015B6  CFDE FFF6          	movff	postinc2,tblptrl
  1754  0015BA  CFDD FFF7          	movff	postdec2,tblptrh
  1755  0015BE                     	if	0	;tblptru may be non-zero
  1756  0015BE                     	endif
  1757  0015BE                     	if	0	;tblptru may be non-zero
  1758  0015BE                     	endif
  1759  0015BE  0008               	tblrd		*
  1760  0015C0  50F5               	movf	tablat,w,c
  1761  0015C2  0A2E               	xorlw	46
  1762  0015C4  A4D8               	btfss	status,2,c
  1763  0015C6  EFE7  F00A         	goto	u4851
  1764  0015CA  EFE9  F00A         	goto	u4850
  1765  0015CE                     u4851:
  1766  0015CE  EF67  F00B         	goto	l4186
  1767  0015D2                     u4850:
  1768  0015D2                     
  1769                           ; BSR set to: 0
  1770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1771  0015D2  0E00               	movlw	0
  1772  0015D4  6FE7               	movwf	(_prec+1)& (0+255),b
  1773  0015D6  0E00               	movlw	0
  1774  0015D8  6FE6               	movwf	_prec& (0+255),b
  1775  0015DA                     
  1776                           ; BSR set to: 0
  1777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1778  0015DA  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1779  0015DE  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1780  0015E2  2ADE               	incf	postinc2,f,c
  1781  0015E4  0E00               	movlw	0
  1782  0015E6  22DD               	addwfc	postdec2,f,c
  1783  0015E8                     
  1784                           ; BSR set to: 0
  1785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1786  0015E8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1787  0015EC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1788  0015F0  CFDE FFF6          	movff	postinc2,tblptrl
  1789  0015F4  CFDD FFF7          	movff	postdec2,tblptrh
  1790  0015F8                     	if	0	;tblptru may be non-zero
  1791  0015F8                     	endif
  1792  0015F8                     	if	0	;tblptru may be non-zero
  1793  0015F8                     	endif
  1794  0015F8  0008               	tblrd		*
  1795  0015FA  50F5               	movf	tablat,w,c
  1796  0015FC  0A2A               	xorlw	42
  1797  0015FE  A4D8               	btfss	status,2,c
  1798  001600  EF04  F00B         	goto	u4861
  1799  001604  EF06  F00B         	goto	u4860
  1800  001608                     u4861:
  1801  001608  EF23  F00B         	goto	l4176
  1802  00160C                     u4860:
  1803  00160C                     
  1804                           ; BSR set to: 0
  1805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1806  00160C  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1807  001610  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1808  001614  2ADE               	incf	postinc2,f,c
  1809  001616  0E00               	movlw	0
  1810  001618  22DD               	addwfc	postdec2,f,c
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1813  00161A  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1814  00161E  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1815  001622  CFDF F059          	movff	indf2,??_vfpfcnvrt
  1816  001626  0E02               	movlw	2
  1817  001628  26DE               	addwf	postinc2,f,c
  1818  00162A  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  1819  00162E  0E00               	movlw	0
  1820  001630  22DD               	addwfc	postdec2,f,c
  1821  001632  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1822  001636  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1823  00163A  CFDE F0E6          	movff	postinc2,_prec
  1824  00163E  CFDD F0E7          	movff	postdec2,_prec+1
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1827  001642  EF67  F00B         	goto	l4186
  1828  001646                     l4176:
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1832  001646  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1833  00164A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1834  00164E  CFDE F008          	movff	postinc2,atoi@s
  1835  001652  CFDD F009          	movff	postdec2,atoi@s+1
  1836  001656  EC41  F016         	call	_atoi	;wreg free
  1837  00165A  C008  F0E6         	movff	?_atoi,_prec
  1838  00165E  C009  F0E7         	movff	?_atoi+1,_prec+1
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1841  001662  EF3A  F00B         	goto	l4180
  1842  001666                     l4178:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1846  001666  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1847  00166A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1848  00166E  2ADE               	incf	postinc2,f,c
  1849  001670  0E00               	movlw	0
  1850  001672  22DD               	addwfc	postdec2,f,c
  1851  001674                     l4180:
  1852  001674  0ED0               	movlw	208
  1853  001676  6E59               	movwf	??_vfpfcnvrt^0,c
  1854  001678  0EFF               	movlw	255
  1855  00167A  6E5A               	movwf	(??_vfpfcnvrt+1)^0,c
  1856  00167C  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1857  001680  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1858  001684  CFDE FFF6          	movff	postinc2,tblptrl
  1859  001688  CFDD FFF7          	movff	postdec2,tblptrh
  1860  00168C                     	if	0	;tblptru may be non-zero
  1861  00168C                     	endif
  1862  00168C                     	if	0	;tblptru may be non-zero
  1863  00168C                     	endif
  1864  00168C  0008               	tblrd		*
  1865  00168E  50F5               	movf	tablat,w,c
  1866  001690  6E5B               	movwf	(??_vfpfcnvrt+2)^0,c
  1867  001692  6A5C               	clrf	(??_vfpfcnvrt+3)^0,c
  1868  001694  5059               	movf	??_vfpfcnvrt^0,w,c
  1869  001696  265B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1870  001698  505A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1871  00169A  225C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1872  00169C  505C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1873  00169E  E10A               	bnz	u4870
  1874  0016A0  0E0A               	movlw	10
  1875  0016A2  5C5B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1876  0016A4  A0D8               	btfss	status,0,c
  1877  0016A6  EF57  F00B         	goto	u4871
  1878  0016AA  EF5A  F00B         	goto	u4870
  1879  0016AE                     u4871:
  1880  0016AE  0E01               	movlw	1
  1881  0016B0  EF5B  F00B         	goto	u4880
  1882  0016B4                     u4870:
  1883  0016B4  0E00               	movlw	0
  1884  0016B6                     u4880:
  1885  0016B6  0100               	movlb	0	; () banked
  1886  0016B8  6F9A               	movwf	_vfpfcnvrt$996& (0+255),b
  1887  0016BA  6B9B               	clrf	(_vfpfcnvrt$996+1)& (0+255),b
  1888  0016BC                     
  1889                           ; BSR set to: 0
  1890  0016BC  519A               	movf	_vfpfcnvrt$996& (0+255),w,b
  1891  0016BE  119B               	iorwf	(_vfpfcnvrt$996+1)& (0+255),w,b
  1892  0016C0  A4D8               	btfss	status,2,c
  1893  0016C2  EF65  F00B         	goto	u4891
  1894  0016C6  EF67  F00B         	goto	u4890
  1895  0016CA                     u4891:
  1896  0016CA  EF33  F00B         	goto	l4178
  1897  0016CE                     u4890:
  1898  0016CE                     l4186:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1902  0016CE  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1903  0016D2  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1904  0016D6  CFDE FFF6          	movff	postinc2,tblptrl
  1905  0016DA  CFDD FFF7          	movff	postdec2,tblptrh
  1906  0016DE                     	if	0	;tblptru may be non-zero
  1907  0016DE                     	endif
  1908  0016DE                     	if	0	;tblptru may be non-zero
  1909  0016DE                     	endif
  1910  0016DE  0008               	tblrd		*
  1911  0016E0  50F5               	movf	tablat,w,c
  1912  0016E2  6E07               	movwf	tolower@c^0,c
  1913  0016E4  6A08               	clrf	(tolower@c+1)^0,c
  1914  0016E6  EC49  F01D         	call	_tolower	;wreg free
  1915  0016EA  5007               	movf	?_tolower^0,w,c
  1916  0016EC  0100               	movlb	0	; () banked
  1917  0016EE  6FA2               	movwf	vfpfcnvrt@ct& (0+255),b
  1918  0016F0                     
  1919                           ; BSR set to: 0
  1920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1921  0016F0  51A2               	movf	vfpfcnvrt@ct& (0+255),w,b
  1922  0016F2  B4D8               	btfsc	status,2,c
  1923  0016F4  EF7E  F00B         	goto	u4901
  1924  0016F8  EF80  F00B         	goto	u4900
  1925  0016FC                     u4901:
  1926  0016FC  EFBA  F00B         	goto	l4196
  1927  001700                     u4900:
  1928  001700                     
  1929                           ; BSR set to: 0
  1930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1931  001700  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1932  001704  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1933  001708  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  1934  00170C  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  1935  001710  0E01               	movlw	1
  1936  001712  2659               	addwf	??_vfpfcnvrt^0,f,c
  1937  001714  0E00               	movlw	0
  1938  001716  225A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1939  001718  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1940  00171C  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1941  001720                     	if	0	;tblptru may be non-zero
  1942  001720                     	endif
  1943  001720                     	if	0	;tblptru may be non-zero
  1944  001720                     	endif
  1945  001720  0008               	tblrd		*
  1946  001722  50F5               	movf	tablat,w,c
  1947  001724  6E07               	movwf	tolower@c^0,c
  1948  001726  6A08               	clrf	(tolower@c+1)^0,c
  1949  001728  EC49  F01D         	call	_tolower	;wreg free
  1950  00172C  5007               	movf	?_tolower^0,w,c
  1951  00172E  0100               	movlb	0	; () banked
  1952  001730  6FA3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1953  001732                     
  1954                           ; BSR set to: 0
  1955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1956  001732  51A3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1957  001734  B4D8               	btfsc	status,2,c
  1958  001736  EF9F  F00B         	goto	u4911
  1959  00173A  EFA1  F00B         	goto	u4910
  1960  00173E                     u4911:
  1961  00173E  EFBA  F00B         	goto	l4196
  1962  001742                     u4910:
  1963  001742                     
  1964                           ; BSR set to: 0
  1965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1966  001742  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1967  001746  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1968  00174A  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  1969  00174E  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  1970  001752  0E02               	movlw	2
  1971  001754  2659               	addwf	??_vfpfcnvrt^0,f,c
  1972  001756  0E00               	movlw	0
  1973  001758  225A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1974  00175A  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1975  00175E  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1976  001762                     	if	0	;tblptru may be non-zero
  1977  001762                     	endif
  1978  001762                     	if	0	;tblptru may be non-zero
  1979  001762                     	endif
  1980  001762  0008               	tblrd		*
  1981  001764  50F5               	movf	tablat,w,c
  1982  001766  6E07               	movwf	tolower@c^0,c
  1983  001768  6A08               	clrf	(tolower@c+1)^0,c
  1984  00176A  EC49  F01D         	call	_tolower	;wreg free
  1985  00176E  5007               	movf	?_tolower^0,w,c
  1986  001770  0100               	movlb	0	; () banked
  1987  001772  6FA4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1988  001774                     l4196:
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1992  001774  0E66               	movlw	102
  1993  001776  19A2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1994  001778  A4D8               	btfss	status,2,c
  1995  00177A  EFC1  F00B         	goto	u4921
  1996  00177E  EFC3  F00B         	goto	u4920
  1997  001782                     u4921:
  1998  001782  EF03  F00C         	goto	l4208
  1999  001786                     u4920:
  2000  001786                     
  2001                           ; BSR set to: 0
  2002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2003  001786  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2004  00178A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2005  00178E  CFDE FFF6          	movff	postinc2,tblptrl
  2006  001792  CFDD FFF7          	movff	postdec2,tblptrh
  2007  001796                     	if	0	;tblptru may be non-zero
  2008  001796                     	endif
  2009  001796                     	if	0	;tblptru may be non-zero
  2010  001796                     	endif
  2011  001796  0008               	tblrd		*
  2012  001798  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2013  00179C                     
  2014                           ; BSR set to: 0
  2015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2016  00179C  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2017  0017A0  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2018  0017A4  2ADE               	incf	postinc2,f,c
  2019  0017A6  0E00               	movlw	0
  2020  0017A8  22DD               	addwfc	postdec2,f,c
  2021  0017AA                     
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2024  0017AA  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2025  0017AE  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2026  0017B2  CFDF F059          	movff	indf2,??_vfpfcnvrt
  2027  0017B6  0E04               	movlw	4
  2028  0017B8  26DE               	addwf	postinc2,f,c
  2029  0017BA  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  2030  0017BE  0E00               	movlw	0
  2031  0017C0  22DD               	addwfc	postdec2,f,c
  2032  0017C2  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2033  0017C6  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2034  0017CA  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  2035  0017CE  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  2036  0017D2  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  2037  0017D6  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  2038  0017DA                     l4204:
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2042  0017DA  C053  F047         	movff	vfpfcnvrt@fp,efgtoa@fp
  2043  0017DE  C054  F048         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2044  0017E2  C09E  F049         	movff	vfpfcnvrt@f,efgtoa@f
  2045  0017E6  C09F  F04A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2046  0017EA  C0A0  F04B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2047  0017EE  C0A1  F04C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2048  0017F2  C0A5  F04D         	movff	vfpfcnvrt@c,efgtoa@c
  2049  0017F6  EC2A  F004         	call	_efgtoa	;wreg free
  2050  0017FA  C047  F053         	movff	?_efgtoa,?_vfpfcnvrt
  2051  0017FE  C048  F054         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2052  001802  EFE7  F00C         	goto	l1078
  2053  001806                     l4208:
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2057  001806  0EA2               	movlw	low vfpfcnvrt@ct
  2058  001808  6E01               	movwf	strncmp@_l^0,c
  2059  00180A  0E00               	movlw	high vfpfcnvrt@ct
  2060  00180C  6E02               	movwf	(strncmp@_l+1)^0,c
  2061  00180E  0E4F               	movlw	low STR_16
  2062  001810  6E03               	movwf	strncmp@_r^0,c
  2063  001812  0E08               	movlw	high STR_16
  2064  001814  6E04               	movwf	(strncmp@_r+1)^0,c
  2065  001816  0E00               	movlw	0
  2066  001818  6E06               	movwf	(strncmp@n+1)^0,c
  2067  00181A  0E02               	movlw	2
  2068  00181C  6E05               	movwf	strncmp@n^0,c
  2069  00181E  EC8D  F018         	call	_strncmp	;wreg free
  2070  001822  5001               	movf	?_strncmp^0,w,c
  2071  001824  1002               	iorwf	(?_strncmp+1)^0,w,c
  2072  001826  A4D8               	btfss	status,2,c
  2073  001828  EF18  F00C         	goto	u4931
  2074  00182C  EF1A  F00C         	goto	u4930
  2075  001830                     u4931:
  2076  001830  EF96  F00C         	goto	l4224
  2077  001834                     u4930:
  2078  001834                     
  2079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2080  001834  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2081  001838  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2082  00183C  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  2083  001840  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  2084  001844  0E01               	movlw	1
  2085  001846  2659               	addwf	??_vfpfcnvrt^0,f,c
  2086  001848  0E00               	movlw	0
  2087  00184A  225A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2088  00184C  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2089  001850  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2090  001854                     	if	0	;tblptru may be non-zero
  2091  001854                     	endif
  2092  001854                     	if	0	;tblptru may be non-zero
  2093  001854                     	endif
  2094  001854  0008               	tblrd		*
  2095  001856  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2096  00185A  0EBF               	movlw	191
  2097  00185C  6E59               	movwf	??_vfpfcnvrt^0,c
  2098  00185E  0EFF               	movlw	255
  2099  001860  6E5A               	movwf	(??_vfpfcnvrt+1)^0,c
  2100  001862  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2101  001866  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2102  00186A  CFDE FFF6          	movff	postinc2,tblptrl
  2103  00186E  CFDD FFF7          	movff	postdec2,tblptrh
  2104  001872                     	if	0	;tblptru may be non-zero
  2105  001872                     	endif
  2106  001872                     	if	0	;tblptru may be non-zero
  2107  001872                     	endif
  2108  001872  0008               	tblrd		*
  2109  001874  50F5               	movf	tablat,w,c
  2110  001876  6E5B               	movwf	(??_vfpfcnvrt+2)^0,c
  2111  001878  6A5C               	clrf	(??_vfpfcnvrt+3)^0,c
  2112  00187A  5059               	movf	??_vfpfcnvrt^0,w,c
  2113  00187C  265B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2114  00187E  505A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2115  001880  225C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2116  001882  505C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2117  001884  E10A               	bnz	u4940
  2118  001886  0E1A               	movlw	26
  2119  001888  5C5B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2120  00188A  A0D8               	btfss	status,0,c
  2121  00188C  EF4A  F00C         	goto	u4941
  2122  001890  EF4D  F00C         	goto	u4940
  2123  001894                     u4941:
  2124  001894  0E01               	movlw	1
  2125  001896  EF4E  F00C         	goto	u4950
  2126  00189A                     u4940:
  2127  00189A  0E00               	movlw	0
  2128  00189C                     u4950:
  2129  00189C  0100               	movlb	0	; () banked
  2130  00189E  6F9C               	movwf	_vfpfcnvrt$1000& (0+255),b
  2131  0018A0  6B9D               	clrf	(_vfpfcnvrt$1000+1)& (0+255),b
  2132  0018A2                     
  2133                           ; BSR set to: 0
  2134  0018A2  519C               	movf	_vfpfcnvrt$1000& (0+255),w,b
  2135  0018A4  119D               	iorwf	(_vfpfcnvrt$1000+1)& (0+255),w,b
  2136  0018A6  B4D8               	btfsc	status,2,c
  2137  0018A8  EF58  F00C         	goto	u4961
  2138  0018AC  EF5A  F00C         	goto	u4960
  2139  0018B0                     u4961:
  2140  0018B0  EF74  F00C         	goto	l4218
  2141  0018B4                     u4960:
  2142  0018B4                     
  2143                           ; BSR set to: 0
  2144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2145  0018B4  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2146  0018B8  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2147  0018BC  CFDF F059          	movff	indf2,??_vfpfcnvrt
  2148  0018C0  0E04               	movlw	4
  2149  0018C2  26DE               	addwf	postinc2,f,c
  2150  0018C4  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  2151  0018C8  0E00               	movlw	0
  2152  0018CA  22DD               	addwfc	postdec2,f,c
  2153  0018CC  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2154  0018D0  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2155  0018D4  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  2156  0018D8  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  2157  0018DC  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  2158  0018E0  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2161  0018E4  EF8C  F00C         	goto	l1085
  2162  0018E8                     l4218:
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2166  0018E8  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2167  0018EC  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2168  0018F0  CFDF F059          	movff	indf2,??_vfpfcnvrt
  2169  0018F4  0E04               	movlw	4
  2170  0018F6  26DE               	addwf	postinc2,f,c
  2171  0018F8  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  2172  0018FC  0E00               	movlw	0
  2173  0018FE  22DD               	addwfc	postdec2,f,c
  2174  001900  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2175  001904  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2176  001908  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  2177  00190C  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  2178  001910  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  2179  001914  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  2180  001918                     l1085:
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2184  001918  0E02               	movlw	2
  2185  00191A  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2186  00191E  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2187  001922  26DE               	addwf	postinc2,f,c
  2188  001924  0E00               	movlw	0
  2189  001926  22DD               	addwfc	postdec2,f,c
  2190  001928  EFED  F00B         	goto	l4204
  2191  00192C                     l4224:
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2194  00192C  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2195  001930  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2196  001934  CFDE FFF6          	movff	postinc2,tblptrl
  2197  001938  CFDD FFF7          	movff	postdec2,tblptrh
  2198  00193C                     	if	0	;tblptru may be non-zero
  2199  00193C                     	endif
  2200  00193C                     	if	0	;tblptru may be non-zero
  2201  00193C                     	endif
  2202  00193C  0008               	tblrd		*
  2203  00193E  50F5               	movf	tablat,w,c
  2204  001940  0A25               	xorlw	37
  2205  001942  A4D8               	btfss	status,2,c
  2206  001944  EFA6  F00C         	goto	u4971
  2207  001948  EFA8  F00C         	goto	u4970
  2208  00194C                     u4971:
  2209  00194C  EFBF  F00C         	goto	l4234
  2210  001950                     u4970:
  2211  001950                     
  2212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2213  001950  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2214  001954  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2215  001958  2ADE               	incf	postinc2,f,c
  2216  00195A  0E00               	movlw	0
  2217  00195C  22DD               	addwfc	postdec2,f,c
  2218  00195E                     
  2219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2220  00195E  0E00               	movlw	0
  2221  001960  6E02               	movwf	(fputc@c+1)^0,c
  2222  001962  0E25               	movlw	37
  2223  001964  6E01               	movwf	fputc@c^0,c
  2224  001966  C053  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2225  00196A  C054  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2226  00196E  EC61  F019         	call	_fputc	;wreg free
  2227  001972                     l4230:
  2228                           
  2229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2230  001972  0E00               	movlw	0
  2231  001974  6E54               	movwf	(?_vfpfcnvrt+1)^0,c
  2232  001976  0E01               	movlw	1
  2233  001978  6E53               	movwf	?_vfpfcnvrt^0,c
  2234  00197A  EFE7  F00C         	goto	l1078
  2235  00197E                     l4234:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2238  00197E  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2239  001982  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2240  001986  2ADE               	incf	postinc2,f,c
  2241  001988  0E00               	movlw	0
  2242  00198A  22DD               	addwfc	postdec2,f,c
  2243  00198C                     
  2244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2245  00198C  0E00               	movlw	0
  2246  00198E  6E54               	movwf	(?_vfpfcnvrt+1)^0,c
  2247  001990  0E00               	movlw	0
  2248  001992  6E53               	movwf	?_vfpfcnvrt^0,c
  2249  001994  EFE7  F00C         	goto	l1078
  2250  001998                     l4240:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2253  001998  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2254  00199C  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2255  0019A0  CFDE FFF6          	movff	postinc2,tblptrl
  2256  0019A4  CFDD FFF7          	movff	postdec2,tblptrh
  2257  0019A8                     	if	0	;tblptru may be non-zero
  2258  0019A8                     	endif
  2259  0019A8                     	if	0	;tblptru may be non-zero
  2260  0019A8                     	endif
  2261  0019A8  0008               	tblrd		*
  2262  0019AA  50F5               	movf	tablat,w,c
  2263  0019AC  6E01               	movwf	fputc@c^0,c
  2264  0019AE  6A02               	clrf	(fputc@c+1)^0,c
  2265  0019B0  C053  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2266  0019B4  C054  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2267  0019B8  EC61  F019         	call	_fputc	;wreg free
  2268  0019BC                     
  2269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2270  0019BC  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2271  0019C0  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2272  0019C4  2ADE               	incf	postinc2,f,c
  2273  0019C6  0E00               	movlw	0
  2274  0019C8  22DD               	addwfc	postdec2,f,c
  2275  0019CA  EFB9  F00C         	goto	l4230
  2276  0019CE                     l1078:
  2277  0019CE  0012               	return		;funcret
  2278  0019D0                     __end_of_vfpfcnvrt:
  2279                           	callstack 0
  2280                           
  2281 ;; *************** function _strncmp *****************
  2282 ;; Defined at:
  2283 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2286 ;;		 -> vfpfcnvrt@ct(3), 
  2287 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2288 ;;		 -> STR_18(3), 
  2289 ;;  n               2    4[COMRAM] unsigned int 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2292 ;;		 -> STR_18(3), 
  2293 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2294 ;;		 -> vfpfcnvrt@ct(3), 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  2    0[COMRAM] int 
  2297 ;; Registers used:
  2298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2304 ;;      Params:         6       0       0       0       0       0       0       0       0
  2305 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2306 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2307 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2308 ;;Total ram usage:       11 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_vfpfcnvrt
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text4
  2318  00311A                     __ptext4:
  2319                           	callstack 0
  2320  00311A                     _strncmp:
  2321                           	callstack 27
  2322  00311A  C001  F008         	movff	strncmp@_l,strncmp@l
  2323  00311E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2324  003122  C003  F00A         	movff	strncmp@_r,strncmp@r
  2325  003126  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2326  00312A  0605               	decf	strncmp@n^0,f,c
  2327  00312C  A0D8               	btfss	status,0,c
  2328  00312E  0606               	decf	(strncmp@n+1)^0,f,c
  2329  003130  2805               	incf	strncmp@n^0,w,c
  2330  003132  E106               	bnz	u4711
  2331  003134  2806               	incf	(strncmp@n+1)^0,w,c
  2332  003136  A4D8               	btfss	status,2,c
  2333  003138  EFA0  F018         	goto	u4711
  2334  00313C  EFA2  F018         	goto	u4710
  2335  003140                     u4711:
  2336  003140  EFAF  F018         	goto	l4084
  2337  003144                     u4710:
  2338  003144  0E00               	movlw	0
  2339  003146  6E02               	movwf	(?_strncmp+1)^0,c
  2340  003148  0E00               	movlw	0
  2341  00314A  6E01               	movwf	?_strncmp^0,c
  2342  00314C  EFF7  F018         	goto	l1206
  2343  003150                     l4082:
  2344  003150  4A08               	infsnz	strncmp@l^0,f,c
  2345  003152  2A09               	incf	(strncmp@l+1)^0,f,c
  2346  003154  4A0A               	infsnz	strncmp@r^0,f,c
  2347  003156  2A0B               	incf	(strncmp@r+1)^0,f,c
  2348  003158  0605               	decf	strncmp@n^0,f,c
  2349  00315A  A0D8               	btfss	status,0,c
  2350  00315C  0606               	decf	(strncmp@n+1)^0,f,c
  2351  00315E                     l4084:
  2352  00315E  C008  FFD9         	movff	strncmp@l,fsr2l
  2353  003162  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2354  003166  50DF               	movf	indf2,w,c
  2355  003168  B4D8               	btfsc	status,2,c
  2356  00316A  EFB9  F018         	goto	u4721
  2357  00316E  EFBB  F018         	goto	u4720
  2358  003172                     u4721:
  2359  003172  EFE6  F018         	goto	l4092
  2360  003176                     u4720:
  2361  003176  C00A  FFF6         	movff	strncmp@r,tblptrl
  2362  00317A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2363  00317E                     	if	0	;tblptru may be non-zero
  2364  00317E                     	endif
  2365  00317E                     	if	0	;tblptru may be non-zero
  2366  00317E                     	endif
  2367  00317E  0008               	tblrd		*
  2368  003180  50F5               	movf	tablat,w,c
  2369  003182  0900               	iorlw	0
  2370  003184  B4D8               	btfsc	status,2,c
  2371  003186  EFC7  F018         	goto	u4731
  2372  00318A  EFC9  F018         	goto	u4730
  2373  00318E                     u4731:
  2374  00318E  EFE6  F018         	goto	l4092
  2375  003192                     u4730:
  2376  003192  5005               	movf	strncmp@n^0,w,c
  2377  003194  1006               	iorwf	(strncmp@n+1)^0,w,c
  2378  003196  B4D8               	btfsc	status,2,c
  2379  003198  EFD0  F018         	goto	u4741
  2380  00319C  EFD2  F018         	goto	u4740
  2381  0031A0                     u4741:
  2382  0031A0  EFE6  F018         	goto	l4092
  2383  0031A4                     u4740:
  2384  0031A4  C008  FFD9         	movff	strncmp@l,fsr2l
  2385  0031A8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2386  0031AC  50DF               	movf	indf2,w,c
  2387  0031AE  6E07               	movwf	??_strncmp^0,c
  2388  0031B0  C00A  FFF6         	movff	strncmp@r,tblptrl
  2389  0031B4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2390  0031B8                     	if	0	;tblptru may be non-zero
  2391  0031B8                     	endif
  2392  0031B8                     	if	0	;tblptru may be non-zero
  2393  0031B8                     	endif
  2394  0031B8  0008               	tblrd		*
  2395  0031BA  50F5               	movf	tablat,w,c
  2396  0031BC  1807               	xorwf	??_strncmp^0,w,c
  2397  0031BE  B4D8               	btfsc	status,2,c
  2398  0031C0  EFE4  F018         	goto	u4751
  2399  0031C4  EFE6  F018         	goto	u4750
  2400  0031C8                     u4751:
  2401  0031C8  EFA8  F018         	goto	l4082
  2402  0031CC                     u4750:
  2403  0031CC                     l4092:
  2404  0031CC  C008  FFD9         	movff	strncmp@l,fsr2l
  2405  0031D0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2406  0031D4  50DF               	movf	indf2,w,c
  2407  0031D6  6E07               	movwf	??_strncmp^0,c
  2408  0031D8  C00A  FFF6         	movff	strncmp@r,tblptrl
  2409  0031DC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2410  0031E0                     	if	0	;tblptru may be non-zero
  2411  0031E0                     	endif
  2412  0031E0                     	if	0	;tblptru may be non-zero
  2413  0031E0                     	endif
  2414  0031E0  0008               	tblrd		*
  2415  0031E2  50F5               	movf	tablat,w,c
  2416  0031E4  5C07               	subwf	??_strncmp^0,w,c
  2417  0031E6  6E01               	movwf	?_strncmp^0,c
  2418  0031E8  6A02               	clrf	(?_strncmp+1)^0,c
  2419  0031EA  A0D8               	btfss	status,0,c
  2420  0031EC  0602               	decf	(?_strncmp+1)^0,f,c
  2421  0031EE                     l1206:
  2422  0031EE  0012               	return		;funcret
  2423  0031F0                     __end_of_strncmp:
  2424                           	callstack 0
  2425                           
  2426 ;; *************** function _efgtoa *****************
  2427 ;; Defined at:
  2428 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  2431 ;;		 -> sprintf@f(6), 
  2432 ;;  f               4   72[COMRAM] PTR struct _IO_FILE
  2433 ;;  c               1   76[COMRAM] unsigned char 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  u               4   52[BANK0 ] unsigned char 
  2436 ;;  g               4   44[BANK0 ] unsigned char 
  2437 ;;  l               4   38[BANK0 ] unsigned char 
  2438 ;;  h               4   34[BANK0 ] unsigned char 
  2439 ;;  ou              4   20[BANK0 ] unsigned char 
  2440 ;;  n               2   50[BANK0 ] int 
  2441 ;;  e               2   48[BANK0 ] int 
  2442 ;;  i               2   42[BANK0 ] int 
  2443 ;;  w               2   30[BANK0 ] int 
  2444 ;;  p               2   28[BANK0 ] int 
  2445 ;;  sign            2   26[BANK0 ] int 
  2446 ;;  d               2   24[BANK0 ] int 
  2447 ;;  m               2   18[BANK0 ] int 
  2448 ;;  ne              2   16[BANK0 ] int 
  2449 ;;  pp              2   14[BANK0 ] int 
  2450 ;;  t               2   12[BANK0 ] int 
  2451 ;;  mode            1   33[BANK0 ] unsigned char 
  2452 ;;  nmode           1   32[BANK0 ] unsigned char 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  2   70[COMRAM] int 
  2455 ;; Registers used:
  2456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2462 ;;      Params:         7       0       0       0       0       0       0       0       0
  2463 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2464 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2465 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2466 ;;Total ram usage:       68 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 4
  2469 ;; This function calls:
  2470 ;;		___awdiv
  2471 ;;		___awmod
  2472 ;;		___fladd
  2473 ;;		___fldiv
  2474 ;;		___fleq
  2475 ;;		___flge
  2476 ;;		___flmul
  2477 ;;		___flneg
  2478 ;;		___flsub
  2479 ;;		___fltol
  2480 ;;		___fpclassifyf
  2481 ;;		_floorf
  2482 ;;		_isupper
  2483 ;;		_pad
  2484 ;;		_strcpy
  2485 ;;		_tolower
  2486 ;; This function is called by:
  2487 ;;		_vfpfcnvrt
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text5
  2492  000854                     __ptext5:
  2493                           	callstack 0
  2494  000854                     _efgtoa:
  2495                           	callstack 23
  2496  000854                     
  2497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2498  000854  0E00               	movlw	0
  2499  000856  0100               	movlb	0	; () banked
  2500  000858  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2501  00085A  0E00               	movlw	0
  2502  00085C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2503  00085E                     
  2504                           ; BSR set to: 0
  2505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2506  00085E  C049  F08C         	movff	efgtoa@f,efgtoa@g
  2507  000862  C04A  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2508  000866  C04B  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2509  00086A  C04C  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2510  00086E                     
  2511                           ; BSR set to: 0
  2512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2513  00086E  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2514  000870  EF3E  F004         	goto	u4100
  2515  000874  EF3C  F004         	goto	u4101
  2516  000878                     u4101:
  2517  000878  EF54  F004         	goto	l3736
  2518  00087C                     u4100:
  2519  00087C                     
  2520                           ; BSR set to: 0
  2521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2522  00087C  0E00               	movlw	0
  2523  00087E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2524  000880  0E01               	movlw	1
  2525  000882  6F7A               	movwf	efgtoa@sign& (0+255),b
  2526  000884                     
  2527                           ; BSR set to: 0
  2528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2529  000884  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2530  000888  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2531  00088C  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2532  000890  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2533  000894  EC13  F01F         	call	___flneg	;wreg free
  2534  000898  C001  F08C         	movff	?___flneg,efgtoa@g
  2535  00089C  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2536  0008A0  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2537  0008A4  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2538  0008A8                     l3736:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2541  0008A8  0E00               	movlw	0
  2542  0008AA  0100               	movlb	0	; () banked
  2543  0008AC  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2544  0008AE  0E00               	movlw	0
  2545  0008B0  6F92               	movwf	efgtoa@n& (0+255),b
  2546  0008B2                     
  2547                           ; BSR set to: 0
  2548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2549  0008B2  C0E4  F07E         	movff	_width,efgtoa@w
  2550  0008B6  C0E5  F07F         	movff	_width+1,efgtoa@w+1
  2551  0008BA                     
  2552                           ; BSR set to: 0
  2553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2554  0008BA  517A               	movf	efgtoa@sign& (0+255),w,b
  2555  0008BC  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2556  0008BE  A4D8               	btfss	status,2,c
  2557  0008C0  EF64  F004         	goto	u4111
  2558  0008C4  EF66  F004         	goto	u4110
  2559  0008C8                     u4111:
  2560  0008C8  EF6D  F004         	goto	l3744
  2561  0008CC                     u4110:
  2562  0008CC                     
  2563                           ; BSR set to: 0
  2564  0008CC  A5E8               	btfss	_flags& (0+255),2,b
  2565  0008CE  EF6B  F004         	goto	u4121
  2566  0008D2  EF6D  F004         	goto	u4120
  2567  0008D6                     u4121:
  2568  0008D6  EF87  F004         	goto	l3756
  2569  0008DA                     u4120:
  2570  0008DA                     l3744:
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2574  0008DA  517A               	movf	efgtoa@sign& (0+255),w,b
  2575  0008DC  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2576  0008DE  A4D8               	btfss	status,2,c
  2577  0008E0  EF74  F004         	goto	u4131
  2578  0008E4  EF76  F004         	goto	u4130
  2579  0008E8                     u4131:
  2580  0008E8  EF7C  F004         	goto	l3748
  2581  0008EC                     u4130:
  2582  0008EC                     
  2583                           ; BSR set to: 0
  2584  0008EC  0E00               	movlw	0
  2585  0008EE  6F61               	movwf	(_efgtoa$970+1)& (0+255),b
  2586  0008F0  0E2B               	movlw	43
  2587  0008F2  6F60               	movwf	_efgtoa$970& (0+255),b
  2588  0008F4  EF80  F004         	goto	l3750
  2589  0008F8                     l3748:
  2590                           
  2591                           ; BSR set to: 0
  2592  0008F8  0E00               	movlw	0
  2593  0008FA  6F61               	movwf	(_efgtoa$970+1)& (0+255),b
  2594  0008FC  0E2D               	movlw	45
  2595  0008FE  6F60               	movwf	_efgtoa$970& (0+255),b
  2596  000900                     l3750:
  2597                           
  2598                           ; BSR set to: 0
  2599  000900  C060  F100         	movff	_efgtoa$970,_dbuf
  2600  000904                     
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2603  000904  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2604  000906  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2605  000908                     
  2606                           ; BSR set to: 0
  2607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2608  000908  077E               	decf	efgtoa@w& (0+255),f,b
  2609  00090A  A0D8               	btfss	status,0,c
  2610  00090C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  2611  00090E                     l3756:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2615  00090E  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2616  000912  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2617  000916  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2618  00091A  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2619  00091E  EC0E  F018         	call	___fpclassifyf	;wreg free
  2620  000922  0401               	decf	?___fpclassifyf^0,w,c
  2621  000924  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2622  000926  A4D8               	btfss	status,2,c
  2623  000928  EF98  F004         	goto	u4141
  2624  00092C  EF9A  F004         	goto	u4140
  2625  000930                     u4141:
  2626  000930  EFF1  F004         	goto	l3774
  2627  000934                     u4140:
  2628  000934  0EBF               	movlw	191
  2629  000936  6E4E               	movwf	??_efgtoa^0,c
  2630  000938  0EFF               	movlw	255
  2631  00093A  6E4F               	movwf	(??_efgtoa+1)^0,c
  2632  00093C  504D               	movf	efgtoa@c^0,w,c
  2633  00093E  6E50               	movwf	(??_efgtoa+2)^0,c
  2634  000940  6A51               	clrf	(??_efgtoa+3)^0,c
  2635  000942  504E               	movf	??_efgtoa^0,w,c
  2636  000944  2650               	addwf	(??_efgtoa+2)^0,f,c
  2637  000946  504F               	movf	(??_efgtoa+1)^0,w,c
  2638  000948  2251               	addwfc	(??_efgtoa+3)^0,f,c
  2639  00094A  5051               	movf	(??_efgtoa+3)^0,w,c
  2640  00094C  E10A               	bnz	u4150
  2641  00094E  0E1A               	movlw	26
  2642  000950  5C50               	subwf	(??_efgtoa+2)^0,w,c
  2643  000952  A0D8               	btfss	status,0,c
  2644  000954  EFAE  F004         	goto	u4151
  2645  000958  EFB1  F004         	goto	u4150
  2646  00095C                     u4151:
  2647  00095C  0E01               	movlw	1
  2648  00095E  EFB2  F004         	goto	u4160
  2649  000962                     u4150:
  2650  000962  0E00               	movlw	0
  2651  000964                     u4160:
  2652  000964  0100               	movlb	0	; () banked
  2653  000966  6F62               	movwf	_efgtoa$971& (0+255),b
  2654  000968  6B63               	clrf	(_efgtoa$971+1)& (0+255),b
  2655  00096A                     
  2656                           ; BSR set to: 0
  2657  00096A  5162               	movf	_efgtoa$971& (0+255),w,b
  2658  00096C  1163               	iorwf	(_efgtoa$971+1)& (0+255),w,b
  2659  00096E  B4D8               	btfsc	status,2,c
  2660  000970  EFBC  F004         	goto	u4171
  2661  000974  EFBE  F004         	goto	u4170
  2662  000978                     u4171:
  2663  000978  EFCC  F004         	goto	l3766
  2664  00097C                     u4170:
  2665  00097C                     
  2666                           ; BSR set to: 0
  2667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2668  00097C  0E00               	movlw	low _dbuf
  2669  00097E  2592               	addwf	efgtoa@n& (0+255),w,b
  2670  000980  6E01               	movwf	strcpy@dest^0,c
  2671  000982  0E01               	movlw	high _dbuf
  2672  000984  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2673  000986  6E02               	movwf	(strcpy@dest+1)^0,c
  2674  000988  0E3F               	movlw	low STR_8
  2675  00098A  6E03               	movwf	strcpy@src^0,c
  2676  00098C  0E08               	movlw	high STR_8
  2677  00098E  6E04               	movwf	(strcpy@src+1)^0,c
  2678  000990  EC79  F01D         	call	_strcpy	;wreg free
  2679                           
  2680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2681  000994  EFD8  F004         	goto	l3768
  2682  000998                     l3766:
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2686  000998  0E00               	movlw	low _dbuf
  2687  00099A  2592               	addwf	efgtoa@n& (0+255),w,b
  2688  00099C  6E01               	movwf	strcpy@dest^0,c
  2689  00099E  0E01               	movlw	high _dbuf
  2690  0009A0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2691  0009A2  6E02               	movwf	(strcpy@dest+1)^0,c
  2692  0009A4  0E47               	movlw	low STR_9
  2693  0009A6  6E03               	movwf	strcpy@src^0,c
  2694  0009A8  0E08               	movlw	high STR_9
  2695  0009AA  6E04               	movwf	(strcpy@src+1)^0,c
  2696  0009AC  EC79  F01D         	call	_strcpy	;wreg free
  2697  0009B0                     l3768:
  2698                           
  2699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2700  0009B0  0100               	movlb	0	; () banked
  2701  0009B2  0EFD               	movlw	253
  2702  0009B4  277E               	addwf	efgtoa@w& (0+255),f,b
  2703  0009B6  0EFF               	movlw	255
  2704  0009B8  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2705  0009BA                     l3770:
  2706                           
  2707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2708  0009BA  C047  F011         	movff	efgtoa@fp,pad@fp
  2709  0009BE  C048  F012         	movff	efgtoa@fp+1,pad@fp+1
  2710  0009C2  0E00               	movlw	low _dbuf
  2711  0009C4  6E13               	movwf	pad@buf^0,c
  2712  0009C6  0E01               	movlw	high _dbuf
  2713  0009C8  6E14               	movwf	(pad@buf+1)^0,c
  2714  0009CA  C07E  F015         	movff	efgtoa@w,pad@p
  2715  0009CE  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  2716  0009D2  ECC6  F019         	call	_pad	;wreg free
  2717  0009D6  C011  F047         	movff	?_pad,?_efgtoa
  2718  0009DA  C012  F048         	movff	?_pad+1,?_efgtoa+1
  2719  0009DE  EF55  F00A         	goto	l974
  2720  0009E2                     l3774:
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2723  0009E2  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2724  0009E6  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2725  0009EA  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2726  0009EE  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2727  0009F2  EC0E  F018         	call	___fpclassifyf	;wreg free
  2728  0009F6  5001               	movf	?___fpclassifyf^0,w,c
  2729  0009F8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2730  0009FA  A4D8               	btfss	status,2,c
  2731  0009FC  EF02  F005         	goto	u4181
  2732  000A00  EF04  F005         	goto	u4180
  2733  000A04                     u4181:
  2734  000A04  EF44  F005         	goto	l3792
  2735  000A08                     u4180:
  2736  000A08  0EBF               	movlw	191
  2737  000A0A  6E4E               	movwf	??_efgtoa^0,c
  2738  000A0C  0EFF               	movlw	255
  2739  000A0E  6E4F               	movwf	(??_efgtoa+1)^0,c
  2740  000A10  504D               	movf	efgtoa@c^0,w,c
  2741  000A12  6E50               	movwf	(??_efgtoa+2)^0,c
  2742  000A14  6A51               	clrf	(??_efgtoa+3)^0,c
  2743  000A16  504E               	movf	??_efgtoa^0,w,c
  2744  000A18  2650               	addwf	(??_efgtoa+2)^0,f,c
  2745  000A1A  504F               	movf	(??_efgtoa+1)^0,w,c
  2746  000A1C  2251               	addwfc	(??_efgtoa+3)^0,f,c
  2747  000A1E  5051               	movf	(??_efgtoa+3)^0,w,c
  2748  000A20  E10A               	bnz	u4190
  2749  000A22  0E1A               	movlw	26
  2750  000A24  5C50               	subwf	(??_efgtoa+2)^0,w,c
  2751  000A26  A0D8               	btfss	status,0,c
  2752  000A28  EF18  F005         	goto	u4191
  2753  000A2C  EF1B  F005         	goto	u4190
  2754  000A30                     u4191:
  2755  000A30  0E01               	movlw	1
  2756  000A32  EF1C  F005         	goto	u4200
  2757  000A36                     u4190:
  2758  000A36  0E00               	movlw	0
  2759  000A38                     u4200:
  2760  000A38  0100               	movlb	0	; () banked
  2761  000A3A  6F64               	movwf	_efgtoa$976& (0+255),b
  2762  000A3C  6B65               	clrf	(_efgtoa$976+1)& (0+255),b
  2763  000A3E                     
  2764                           ; BSR set to: 0
  2765  000A3E  5164               	movf	_efgtoa$976& (0+255),w,b
  2766  000A40  1165               	iorwf	(_efgtoa$976+1)& (0+255),w,b
  2767  000A42  B4D8               	btfsc	status,2,c
  2768  000A44  EF26  F005         	goto	u4211
  2769  000A48  EF28  F005         	goto	u4210
  2770  000A4C                     u4211:
  2771  000A4C  EF36  F005         	goto	l3784
  2772  000A50                     u4210:
  2773  000A50                     
  2774                           ; BSR set to: 0
  2775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2776  000A50  0E00               	movlw	low _dbuf
  2777  000A52  2592               	addwf	efgtoa@n& (0+255),w,b
  2778  000A54  6E01               	movwf	strcpy@dest^0,c
  2779  000A56  0E01               	movlw	high _dbuf
  2780  000A58  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2781  000A5A  6E02               	movwf	(strcpy@dest+1)^0,c
  2782  000A5C  0E43               	movlw	low STR_12
  2783  000A5E  6E03               	movwf	strcpy@src^0,c
  2784  000A60  0E08               	movlw	high STR_12
  2785  000A62  6E04               	movwf	(strcpy@src+1)^0,c
  2786  000A64  EC79  F01D         	call	_strcpy	;wreg free
  2787                           
  2788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2789  000A68  EFD8  F004         	goto	l3768
  2790  000A6C                     l3784:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2794  000A6C  0E00               	movlw	low _dbuf
  2795  000A6E  2592               	addwf	efgtoa@n& (0+255),w,b
  2796  000A70  6E01               	movwf	strcpy@dest^0,c
  2797  000A72  0E01               	movlw	high _dbuf
  2798  000A74  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2799  000A76  6E02               	movwf	(strcpy@dest+1)^0,c
  2800  000A78  0E4B               	movlw	low STR_13
  2801  000A7A  6E03               	movwf	strcpy@src^0,c
  2802  000A7C  0E08               	movlw	high STR_13
  2803  000A7E  6E04               	movwf	(strcpy@src+1)^0,c
  2804  000A80  EC79  F01D         	call	_strcpy	;wreg free
  2805  000A84  EFD8  F004         	goto	l3768
  2806  000A88                     l3792:
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2809  000A88  0E00               	movlw	0
  2810  000A8A  0100               	movlb	0	; () banked
  2811  000A8C  6F94               	movwf	efgtoa@u& (0+255),b
  2812  000A8E  0E00               	movlw	0
  2813  000A90  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2814  000A92  0E80               	movlw	128
  2815  000A94  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2816  000A96  0E3F               	movlw	63
  2817  000A98  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2820  000A9A  0E00               	movlw	0
  2821  000A9C  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2822  000A9E  0E00               	movlw	0
  2823  000AA0  6F90               	movwf	efgtoa@e& (0+255),b
  2824  000AA2                     
  2825                           ; BSR set to: 0
  2826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2827  000AA2  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2828  000AA6  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2829  000AAA  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2830  000AAE  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2831  000AB2  0E00               	movlw	0
  2832  000AB4  6E05               	movwf	___fleq@ff2^0,c
  2833  000AB6  0E00               	movlw	0
  2834  000AB8  6E06               	movwf	(___fleq@ff2+1)^0,c
  2835  000ABA  0E00               	movlw	0
  2836  000ABC  6E07               	movwf	(___fleq@ff2+2)^0,c
  2837  000ABE  0E00               	movlw	0
  2838  000AC0  6E08               	movwf	(___fleq@ff2+3)^0,c
  2839  000AC2  ECE3  F01A         	call	___fleq	;wreg free
  2840  000AC6  B0D8               	btfsc	status,0,c
  2841  000AC8  EF68  F005         	goto	u4221
  2842  000ACC  EF6A  F005         	goto	u4220
  2843  000AD0                     u4221:
  2844  000AD0  EFED  F005         	goto	l3810
  2845  000AD4                     u4220:
  2846  000AD4  EF89  F005         	goto	l3802
  2847  000AD8                     l3798:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2850  000AD8  C094  F001         	movff	efgtoa@u,___flmul@b
  2851  000ADC  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2852  000AE0  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2853  000AE4  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2854  000AE8  0E00               	movlw	0
  2855  000AEA  6E05               	movwf	___flmul@a^0,c
  2856  000AEC  0E00               	movlw	0
  2857  000AEE  6E06               	movwf	(___flmul@a+1)^0,c
  2858  000AF0  0E20               	movlw	32
  2859  000AF2  6E07               	movwf	(___flmul@a+2)^0,c
  2860  000AF4  0E41               	movlw	65
  2861  000AF6  6E08               	movwf	(___flmul@a+3)^0,c
  2862  000AF8  EC48  F00F         	call	___flmul	;wreg free
  2863  000AFC  C001  F094         	movff	?___flmul,efgtoa@u
  2864  000B00  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  2865  000B04  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  2866  000B08  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  2867  000B0C                     
  2868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2869  000B0C  0100               	movlb	0	; () banked
  2870  000B0E  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2871  000B10  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2872  000B12                     l3802:
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2875  000B12  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2876  000B16  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2877  000B1A  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2878  000B1E  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2879  000B22  0E00               	movlw	0
  2880  000B24  6E05               	movwf	___flmul@a^0,c
  2881  000B26  0E00               	movlw	0
  2882  000B28  6E06               	movwf	(___flmul@a+1)^0,c
  2883  000B2A  0E20               	movlw	32
  2884  000B2C  6E07               	movwf	(___flmul@a+2)^0,c
  2885  000B2E  0E41               	movlw	65
  2886  000B30  6E08               	movwf	(___flmul@a+3)^0,c
  2887  000B32  C094  F001         	movff	efgtoa@u,___flmul@b
  2888  000B36  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2889  000B3A  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2890  000B3E  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2891  000B42  EC48  F00F         	call	___flmul	;wreg free
  2892  000B46  C001  F01E         	movff	?___flmul,___flge@ff2
  2893  000B4A  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2894  000B4E  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2895  000B52  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2896  000B56  EC8C  F017         	call	___flge	;wreg free
  2897  000B5A  B0D8               	btfsc	status,0,c
  2898  000B5C  EFB2  F005         	goto	u4231
  2899  000B60  EFB4  F005         	goto	u4230
  2900  000B64                     u4231:
  2901  000B64  EF6C  F005         	goto	l3798
  2902  000B68                     u4230:
  2903  000B68  EFD4  F005         	goto	l3808
  2904  000B6C                     l3804:
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2907  000B6C  C094  F016         	movff	efgtoa@u,___fldiv@b
  2908  000B70  C095  F017         	movff	efgtoa@u+1,___fldiv@b+1
  2909  000B74  C096  F018         	movff	efgtoa@u+2,___fldiv@b+2
  2910  000B78  C097  F019         	movff	efgtoa@u+3,___fldiv@b+3
  2911  000B7C  0E00               	movlw	0
  2912  000B7E  6E1A               	movwf	___fldiv@a^0,c
  2913  000B80  0E00               	movlw	0
  2914  000B82  6E1B               	movwf	(___fldiv@a+1)^0,c
  2915  000B84  0E20               	movlw	32
  2916  000B86  6E1C               	movwf	(___fldiv@a+2)^0,c
  2917  000B88  0E41               	movlw	65
  2918  000B8A  6E1D               	movwf	(___fldiv@a+3)^0,c
  2919  000B8C  EC5D  F011         	call	___fldiv	;wreg free
  2920  000B90  C016  F094         	movff	?___fldiv,efgtoa@u
  2921  000B94  C017  F095         	movff	?___fldiv+1,efgtoa@u+1
  2922  000B98  C018  F096         	movff	?___fldiv+2,efgtoa@u+2
  2923  000B9C  C019  F097         	movff	?___fldiv+3,efgtoa@u+3
  2924  000BA0                     
  2925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2926  000BA0  0100               	movlb	0	; () banked
  2927  000BA2  0790               	decf	efgtoa@e& (0+255),f,b
  2928  000BA4  A0D8               	btfss	status,0,c
  2929  000BA6  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2930  000BA8                     l3808:
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2933  000BA8  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2934  000BAC  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2935  000BB0  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2936  000BB4  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2937  000BB8  C094  F01E         	movff	efgtoa@u,___flge@ff2
  2938  000BBC  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2939  000BC0  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2940  000BC4  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2941  000BC8  EC8C  F017         	call	___flge	;wreg free
  2942  000BCC  A0D8               	btfss	status,0,c
  2943  000BCE  EFEB  F005         	goto	u4241
  2944  000BD2  EFED  F005         	goto	u4240
  2945  000BD6                     u4241:
  2946  000BD6  EFB6  F005         	goto	l3804
  2947  000BDA                     u4240:
  2948  000BDA                     l3810:
  2949                           
  2950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2951  000BDA  C04D  F007         	movff	efgtoa@c,tolower@c
  2952  000BDE  6A08               	clrf	(tolower@c+1)^0,c
  2953  000BE0  EC49  F01D         	call	_tolower	;wreg free
  2954  000BE4  5007               	movf	?_tolower^0,w,c
  2955  000BE6  0100               	movlb	0	; () banked
  2956  000BE8  6F81               	movwf	efgtoa@mode& (0+255),b
  2957  000BEA                     
  2958                           ; BSR set to: 0
  2959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2960  000BEA  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  2961  000BEE                     
  2962                           ; BSR set to: 0
  2963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2964  000BEE  0E67               	movlw	103
  2965  000BF0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2966  000BF2  A4D8               	btfss	status,2,c
  2967  000BF4  EFFE  F005         	goto	u4251
  2968  000BF8  EF00  F006         	goto	u4250
  2969  000BFC                     u4251:
  2970  000BFC  EF26  F006         	goto	l3824
  2971  000C00                     u4250:
  2972  000C00                     
  2973                           ; BSR set to: 0
  2974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2975  000C00  51E6               	movf	_prec& (0+255),w,b
  2976  000C02  11E7               	iorwf	(_prec+1)& (0+255),w,b
  2977  000C04  A4D8               	btfss	status,2,c
  2978  000C06  EF07  F006         	goto	u4261
  2979  000C0A  EF09  F006         	goto	u4260
  2980  000C0E                     u4261:
  2981  000C0E  EF0D  F006         	goto	l3820
  2982  000C12                     u4260:
  2983  000C12                     
  2984                           ; BSR set to: 0
  2985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2986  000C12  0E00               	movlw	0
  2987  000C14  6FE7               	movwf	(_prec+1)& (0+255),b
  2988  000C16  0E01               	movlw	1
  2989  000C18  6FE6               	movwf	_prec& (0+255),b
  2990  000C1A                     l3820:
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2994  000C1A  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  2995  000C1C  EF1A  F006         	goto	u4270
  2996  000C20  51E7               	movf	(_prec+1)& (0+255),w,b
  2997  000C22  E106               	bnz	u4271
  2998  000C24  05E6               	decf	_prec& (0+255),w,b
  2999  000C26  B0D8               	btfsc	status,0,c
  3000  000C28  EF18  F006         	goto	u4271
  3001  000C2C  EF1A  F006         	goto	u4270
  3002  000C30                     u4271:
  3003  000C30  EF20  F006         	goto	l992
  3004  000C34                     u4270:
  3005  000C34                     l3822:
  3006                           
  3007                           ; BSR set to: 0
  3008  000C34  0E00               	movlw	0
  3009  000C36  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3010  000C38  0E06               	movlw	6
  3011  000C3A  6F7C               	movwf	efgtoa@p& (0+255),b
  3012  000C3C  EF2F  F006         	goto	l3830
  3013  000C40                     l992:
  3014                           
  3015                           ; BSR set to: 0
  3016  000C40  C0E6  F07C         	movff	_prec,efgtoa@p
  3017  000C44  C0E7  F07D         	movff	_prec+1,efgtoa@p+1
  3018  000C48  EF2F  F006         	goto	l3830
  3019  000C4C                     l3824:
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3023  000C4C  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  3024  000C4E  EF2B  F006         	goto	u4281
  3025  000C52  EF2D  F006         	goto	u4280
  3026  000C56                     u4281:
  3027  000C56  EF1A  F006         	goto	l3822
  3028  000C5A                     u4280:
  3029  000C5A  EF20  F006         	goto	l992
  3030  000C5E                     l3830:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3034  000C5E  0E67               	movlw	103
  3035  000C60  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3036  000C62  A4D8               	btfss	status,2,c
  3037  000C64  EF36  F006         	goto	u4291
  3038  000C68  EF38  F006         	goto	u4290
  3039  000C6C                     u4291:
  3040  000C6C  EF67  F006         	goto	l3840
  3041  000C70                     u4290:
  3042  000C70                     
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3045  000C70  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3046  000C72  EF46  F006         	goto	u4300
  3047  000C76  0EFC               	movlw	252
  3048  000C78  5D90               	subwf	efgtoa@e& (0+255),w,b
  3049  000C7A  0EFF               	movlw	255
  3050  000C7C  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3051  000C7E  A0D8               	btfss	status,0,c
  3052  000C80  EF44  F006         	goto	u4301
  3053  000C84  EF46  F006         	goto	u4300
  3054  000C88                     u4301:
  3055  000C88  EF65  F006         	goto	l3838
  3056  000C8C                     u4300:
  3057  000C8C                     
  3058                           ; BSR set to: 0
  3059  000C8C  0EFF               	movlw	255
  3060  000C8E  6E4E               	movwf	??_efgtoa^0,c
  3061  000C90  0EFF               	movlw	255
  3062  000C92  6E4F               	movwf	(??_efgtoa+1)^0,c
  3063  000C94  C07C  F050         	movff	efgtoa@p,??_efgtoa+2
  3064  000C98  C07D  F051         	movff	efgtoa@p+1,??_efgtoa+3
  3065  000C9C  504E               	movf	??_efgtoa^0,w,c
  3066  000C9E  2650               	addwf	(??_efgtoa+2)^0,f,c
  3067  000CA0  504F               	movf	(??_efgtoa+1)^0,w,c
  3068  000CA2  2251               	addwfc	(??_efgtoa+3)^0,f,c
  3069  000CA4  5190               	movf	efgtoa@e& (0+255),w,b
  3070  000CA6  5C50               	subwf	(??_efgtoa+2)^0,w,c
  3071  000CA8  5051               	movf	(??_efgtoa+3)^0,w,c
  3072  000CAA  0A80               	xorlw	128
  3073  000CAC  6E52               	movwf	(??_efgtoa+4)^0,c
  3074  000CAE  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3075  000CB0  0A80               	xorlw	128
  3076  000CB2  5852               	subwfb	(??_efgtoa+4)^0,w,c
  3077  000CB4  A0D8               	btfss	status,0,c
  3078  000CB6  EF5F  F006         	goto	u4311
  3079  000CBA  EF61  F006         	goto	u4310
  3080  000CBE                     u4311:
  3081  000CBE  EF65  F006         	goto	l3838
  3082  000CC2                     u4310:
  3083  000CC2                     
  3084                           ; BSR set to: 0
  3085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3086  000CC2  0E66               	movlw	102
  3087  000CC4  6F80               	movwf	efgtoa@nmode& (0+255),b
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3090  000CC6  EF67  F006         	goto	l3840
  3091  000CCA                     l3838:
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3095  000CCA  0E65               	movlw	101
  3096  000CCC  6F80               	movwf	efgtoa@nmode& (0+255),b
  3097  000CCE                     l3840:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3101  000CCE  C07C  F072         	movff	efgtoa@p,efgtoa@m
  3102  000CD2  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  3103  000CD6                     
  3104                           ; BSR set to: 0
  3105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3106  000CD6  0E67               	movlw	103
  3107  000CD8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3108  000CDA  A4D8               	btfss	status,2,c
  3109  000CDC  EF72  F006         	goto	u4321
  3110  000CE0  EF74  F006         	goto	u4320
  3111  000CE4                     u4321:
  3112  000CE4  EF84  F006         	goto	l3848
  3113  000CE8                     u4320:
  3114  000CE8                     
  3115                           ; BSR set to: 0
  3116  000CE8  0E66               	movlw	102
  3117  000CEA  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3118  000CEC  A4D8               	btfss	status,2,c
  3119  000CEE  EF7B  F006         	goto	u4331
  3120  000CF2  EF7D  F006         	goto	u4330
  3121  000CF6                     u4331:
  3122  000CF6  EF86  F006         	goto	l3850
  3123  000CFA                     u4330:
  3124  000CFA                     
  3125                           ; BSR set to: 0
  3126  000CFA  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3127  000CFC  EF84  F006         	goto	u4340
  3128  000D00  EF82  F006         	goto	u4341
  3129  000D04                     u4341:
  3130  000D04  EF86  F006         	goto	l3850
  3131  000D08                     u4340:
  3132  000D08                     l3848:
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3136  000D08  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3137  000D0A  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3138  000D0C                     l3850:
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3142  000D0C  0E66               	movlw	102
  3143  000D0E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3144  000D10  A4D8               	btfss	status,2,c
  3145  000D12  EF8D  F006         	goto	u4351
  3146  000D16  EF8F  F006         	goto	u4350
  3147  000D1A                     u4351:
  3148  000D1A  EFAF  F006         	goto	l3860
  3149  000D1E                     u4350:
  3150  000D1E                     
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3153  000D1E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3154  000D20  EF96  F006         	goto	u4360
  3155  000D24  EF94  F006         	goto	u4361
  3156  000D28                     u4361:
  3157  000D28  EFA2  F006         	goto	l3856
  3158  000D2C                     u4360:
  3159  000D2C                     
  3160                           ; BSR set to: 0
  3161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3162  000D2C  0E00               	movlw	0
  3163  000D2E  6F94               	movwf	efgtoa@u& (0+255),b
  3164  000D30  0E00               	movlw	0
  3165  000D32  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3166  000D34  0E80               	movlw	128
  3167  000D36  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3168  000D38  0E3F               	movlw	63
  3169  000D3A  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3172  000D3C  0E00               	movlw	0
  3173  000D3E  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3174  000D40  0E00               	movlw	0
  3175  000D42  6F90               	movwf	efgtoa@e& (0+255),b
  3176  000D44                     l3856:
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3180  000D44  0E67               	movlw	103
  3181  000D46  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3182  000D48  B4D8               	btfsc	status,2,c
  3183  000D4A  EFA9  F006         	goto	u4371
  3184  000D4E  EFAB  F006         	goto	u4370
  3185  000D52                     u4371:
  3186  000D52  EFAF  F006         	goto	l3860
  3187  000D56                     u4370:
  3188  000D56                     
  3189                           ; BSR set to: 0
  3190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3191  000D56  5190               	movf	efgtoa@e& (0+255),w,b
  3192  000D58  2772               	addwf	efgtoa@m& (0+255),f,b
  3193  000D5A  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3194  000D5C  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3195  000D5E                     l3860:
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3199  000D5E  0E00               	movlw	0
  3200  000D60  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3201  000D62  0E00               	movlw	0
  3202  000D64  6F8A               	movwf	efgtoa@i& (0+255),b
  3203  000D66                     
  3204                           ; BSR set to: 0
  3205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3206  000D66  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3207  000D6A  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3208  000D6E  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3209  000D72  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3210  000D76                     
  3211                           ; BSR set to: 0
  3212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3213  000D76  C094  F074         	movff	efgtoa@u,efgtoa@ou
  3214  000D7A  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  3215  000D7E  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  3216  000D82  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3219  000D86  EF40  F007         	goto	l3874
  3220  000D8A                     l3866:
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3224  000D8A  C082  F016         	movff	efgtoa@h,___fldiv@b
  3225  000D8E  C083  F017         	movff	efgtoa@h+1,___fldiv@b+1
  3226  000D92  C084  F018         	movff	efgtoa@h+2,___fldiv@b+2
  3227  000D96  C085  F019         	movff	efgtoa@h+3,___fldiv@b+3
  3228  000D9A  C094  F01A         	movff	efgtoa@u,___fldiv@a
  3229  000D9E  C095  F01B         	movff	efgtoa@u+1,___fldiv@a+1
  3230  000DA2  C096  F01C         	movff	efgtoa@u+2,___fldiv@a+2
  3231  000DA6  C097  F01D         	movff	efgtoa@u+3,___fldiv@a+3
  3232  000DAA  EC5D  F011         	call	___fldiv	;wreg free
  3233  000DAE  C016  F02F         	movff	?___fldiv,floorf@x
  3234  000DB2  C017  F030         	movff	?___fldiv+1,floorf@x+1
  3235  000DB6  C018  F031         	movff	?___fldiv+2,floorf@x+2
  3236  000DBA  C019  F032         	movff	?___fldiv+3,floorf@x+3
  3237  000DBE  EC5E  F014         	call	_floorf	;wreg free
  3238  000DC2  C02F  F086         	movff	?_floorf,efgtoa@l
  3239  000DC6  C030  F087         	movff	?_floorf+1,efgtoa@l+1
  3240  000DCA  C031  F088         	movff	?_floorf+2,efgtoa@l+2
  3241  000DCE  C032  F089         	movff	?_floorf+3,efgtoa@l+3
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3244  000DD2  C086  F001         	movff	efgtoa@l,___fltol@f1
  3245  000DD6  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3246  000DDA  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3247  000DDE  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3248  000DE2  EC09  F017         	call	___fltol	;wreg free
  3249  000DE6  C001  F078         	movff	?___fltol,efgtoa@d
  3250  000DEA  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3251  000DEE                     
  3252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3253  000DEE  C082  F03F         	movff	efgtoa@h,___flsub@b
  3254  000DF2  C083  F040         	movff	efgtoa@h+1,___flsub@b+1
  3255  000DF6  C084  F041         	movff	efgtoa@h+2,___flsub@b+2
  3256  000DFA  C085  F042         	movff	efgtoa@h+3,___flsub@b+3
  3257  000DFE  C094  F005         	movff	efgtoa@u,___flmul@a
  3258  000E02  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3259  000E06  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3260  000E0A  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3261  000E0E  C086  F001         	movff	efgtoa@l,___flmul@b
  3262  000E12  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3263  000E16  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3264  000E1A  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3265  000E1E  EC48  F00F         	call	___flmul	;wreg free
  3266  000E22  C001  F043         	movff	?___flmul,___flsub@a
  3267  000E26  C002  F044         	movff	?___flmul+1,___flsub@a+1
  3268  000E2A  C003  F045         	movff	?___flmul+2,___flsub@a+2
  3269  000E2E  C004  F046         	movff	?___flmul+3,___flsub@a+3
  3270  000E32  EC54  F01E         	call	___flsub	;wreg free
  3271  000E36  C03F  F082         	movff	?___flsub,efgtoa@h
  3272  000E3A  C040  F083         	movff	?___flsub+1,efgtoa@h+1
  3273  000E3E  C041  F084         	movff	?___flsub+2,efgtoa@h+2
  3274  000E42  C042  F085         	movff	?___flsub+3,efgtoa@h+3
  3275  000E46                     
  3276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3277  000E46  C094  F016         	movff	efgtoa@u,___fldiv@b
  3278  000E4A  C095  F017         	movff	efgtoa@u+1,___fldiv@b+1
  3279  000E4E  C096  F018         	movff	efgtoa@u+2,___fldiv@b+2
  3280  000E52  C097  F019         	movff	efgtoa@u+3,___fldiv@b+3
  3281  000E56  0E00               	movlw	0
  3282  000E58  6E1A               	movwf	___fldiv@a^0,c
  3283  000E5A  0E00               	movlw	0
  3284  000E5C  6E1B               	movwf	(___fldiv@a+1)^0,c
  3285  000E5E  0E20               	movlw	32
  3286  000E60  6E1C               	movwf	(___fldiv@a+2)^0,c
  3287  000E62  0E41               	movlw	65
  3288  000E64  6E1D               	movwf	(___fldiv@a+3)^0,c
  3289  000E66  EC5D  F011         	call	___fldiv	;wreg free
  3290  000E6A  C016  F094         	movff	?___fldiv,efgtoa@u
  3291  000E6E  C017  F095         	movff	?___fldiv+1,efgtoa@u+1
  3292  000E72  C018  F096         	movff	?___fldiv+2,efgtoa@u+2
  3293  000E76  C019  F097         	movff	?___fldiv+3,efgtoa@u+3
  3294  000E7A                     
  3295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3296  000E7A  0100               	movlb	0	; () banked
  3297  000E7C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3298  000E7E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3299  000E80                     l3874:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3303  000E80  5172               	movf	efgtoa@m& (0+255),w,b
  3304  000E82  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3305  000E84  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3306  000E86  0A80               	xorlw	128
  3307  000E88  6E4E               	movwf	??_efgtoa^0,c
  3308  000E8A  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3309  000E8C  0A80               	xorlw	128
  3310  000E8E  584E               	subwfb	??_efgtoa^0,w,c
  3311  000E90  A0D8               	btfss	status,0,c
  3312  000E92  EF4D  F007         	goto	u4381
  3313  000E96  EF4F  F007         	goto	u4380
  3314  000E9A                     u4381:
  3315  000E9A  EFC5  F006         	goto	l3866
  3316  000E9E                     u4380:
  3317  000E9E                     
  3318                           ; BSR set to: 0
  3319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3320  000E9E  C094  F001         	movff	efgtoa@u,___flmul@b
  3321  000EA2  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3322  000EA6  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3323  000EAA  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3324  000EAE  0E00               	movlw	0
  3325  000EB0  6E05               	movwf	___flmul@a^0,c
  3326  000EB2  0E00               	movlw	0
  3327  000EB4  6E06               	movwf	(___flmul@a+1)^0,c
  3328  000EB6  0EA0               	movlw	160
  3329  000EB8  6E07               	movwf	(___flmul@a+2)^0,c
  3330  000EBA  0E40               	movlw	64
  3331  000EBC  6E08               	movwf	(___flmul@a+3)^0,c
  3332  000EBE  EC48  F00F         	call	___flmul	;wreg free
  3333  000EC2  C001  F086         	movff	?___flmul,efgtoa@l
  3334  000EC6  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  3335  000ECA  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  3336  000ECE  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  3337  000ED2                     
  3338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3339  000ED2  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3340  000ED6  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3341  000EDA  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3342  000EDE  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3343  000EE2  C086  F01E         	movff	efgtoa@l,___flge@ff2
  3344  000EE6  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3345  000EEA  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3346  000EEE  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3347  000EF2  EC8C  F017         	call	___flge	;wreg free
  3348  000EF6  B0D8               	btfsc	status,0,c
  3349  000EF8  EF80  F007         	goto	u4391
  3350  000EFC  EF82  F007         	goto	u4390
  3351  000F00                     u4391:
  3352  000F00  EF8D  F007         	goto	l3882
  3353  000F04                     u4390:
  3354  000F04                     
  3355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3356  000F04  0E00               	movlw	0
  3357  000F06  0100               	movlb	0	; () banked
  3358  000F08  6F86               	movwf	efgtoa@l& (0+255),b
  3359  000F0A  0E00               	movlw	0
  3360  000F0C  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3361  000F0E  0E00               	movlw	0
  3362  000F10  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3363  000F12  0E00               	movlw	0
  3364  000F14  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3365                           
  3366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3367  000F16  EFB6  F007         	goto	l3888
  3368  000F1A                     l3882:
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3371  000F1A  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3372  000F1E  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3373  000F22  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3374  000F26  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3375  000F2A  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3376  000F2E  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3377  000F32  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3378  000F36  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3379  000F3A  ECE3  F01A         	call	___fleq	;wreg free
  3380  000F3E  A0D8               	btfss	status,0,c
  3381  000F40  EFA4  F007         	goto	u4401
  3382  000F44  EFA6  F007         	goto	u4400
  3383  000F48                     u4401:
  3384  000F48  EFB6  F007         	goto	l3888
  3385  000F4C                     u4400:
  3386  000F4C  0100               	movlb	0	; () banked
  3387  000F4E  B178               	btfsc	efgtoa@d& (0+255),0,b
  3388  000F50  EFAC  F007         	goto	u4411
  3389  000F54  EFAE  F007         	goto	u4410
  3390  000F58                     u4411:
  3391  000F58  EFB6  F007         	goto	l3888
  3392  000F5C                     u4410:
  3393  000F5C                     
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3396  000F5C  0E00               	movlw	0
  3397  000F5E  6F86               	movwf	efgtoa@l& (0+255),b
  3398  000F60  0E00               	movlw	0
  3399  000F62  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3400  000F64  0E00               	movlw	0
  3401  000F66  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3402  000F68  0E00               	movlw	0
  3403  000F6A  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3404  000F6C                     l3888:
  3405                           
  3406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3407  000F6C  C08C  F02F         	movff	efgtoa@g,___fladd@b
  3408  000F70  C08D  F030         	movff	efgtoa@g+1,___fladd@b+1
  3409  000F74  C08E  F031         	movff	efgtoa@g+2,___fladd@b+2
  3410  000F78  C08F  F032         	movff	efgtoa@g+3,___fladd@b+3
  3411  000F7C  C086  F033         	movff	efgtoa@l,___fladd@a
  3412  000F80  C087  F034         	movff	efgtoa@l+1,___fladd@a+1
  3413  000F84  C088  F035         	movff	efgtoa@l+2,___fladd@a+2
  3414  000F88  C089  F036         	movff	efgtoa@l+3,___fladd@a+3
  3415  000F8C  ECE8  F00C         	call	___fladd	;wreg free
  3416  000F90  C02F  F082         	movff	?___fladd,efgtoa@h
  3417  000F94  C030  F083         	movff	?___fladd+1,efgtoa@h+1
  3418  000F98  C031  F084         	movff	?___fladd+2,efgtoa@h+2
  3419  000F9C  C032  F085         	movff	?___fladd+3,efgtoa@h+3
  3420  000FA0                     
  3421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3422  000FA0  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3423  000FA4  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3424  000FA8  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3425  000FAC  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3426  000FB0  0E00               	movlw	0
  3427  000FB2  6E05               	movwf	___flmul@a^0,c
  3428  000FB4  0E00               	movlw	0
  3429  000FB6  6E06               	movwf	(___flmul@a+1)^0,c
  3430  000FB8  0E20               	movlw	32
  3431  000FBA  6E07               	movwf	(___flmul@a+2)^0,c
  3432  000FBC  0E41               	movlw	65
  3433  000FBE  6E08               	movwf	(___flmul@a+3)^0,c
  3434  000FC0  C074  F001         	movff	efgtoa@ou,___flmul@b
  3435  000FC4  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3436  000FC8  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3437  000FCC  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3438  000FD0  EC48  F00F         	call	___flmul	;wreg free
  3439  000FD4  C001  F01E         	movff	?___flmul,___flge@ff2
  3440  000FD8  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3441  000FDC  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3442  000FE0  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3443  000FE4  EC8C  F017         	call	___flge	;wreg free
  3444  000FE8  A0D8               	btfss	status,0,c
  3445  000FEA  EFF9  F007         	goto	u4421
  3446  000FEE  EFFB  F007         	goto	u4420
  3447  000FF2                     u4421:
  3448  000FF2  EF24  F008         	goto	l3900
  3449  000FF6                     u4420:
  3450  000FF6                     
  3451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3452  000FF6  0100               	movlb	0	; () banked
  3453  000FF8  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3454  000FFA  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3455  000FFC                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3458  000FFC  C074  F001         	movff	efgtoa@ou,___flmul@b
  3459  001000  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3460  001004  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3461  001008  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3462  00100C  0E00               	movlw	0
  3463  00100E  6E05               	movwf	___flmul@a^0,c
  3464  001010  0E00               	movlw	0
  3465  001012  6E06               	movwf	(___flmul@a+1)^0,c
  3466  001014  0E20               	movlw	32
  3467  001016  6E07               	movwf	(___flmul@a+2)^0,c
  3468  001018  0E41               	movlw	65
  3469  00101A  6E08               	movwf	(___flmul@a+3)^0,c
  3470  00101C  EC48  F00F         	call	___flmul	;wreg free
  3471  001020  C001  F074         	movff	?___flmul,efgtoa@ou
  3472  001024  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  3473  001028  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  3474  00102C  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  3475  001030                     
  3476                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3477  001030  0E66               	movlw	102
  3478  001032  0100               	movlb	0	; () banked
  3479  001034  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3480  001036  A4D8               	btfss	status,2,c
  3481  001038  EF20  F008         	goto	u4431
  3482  00103C  EF22  F008         	goto	u4430
  3483  001040                     u4431:
  3484  001040  EF24  F008         	goto	l3900
  3485  001044                     u4430:
  3486  001044                     
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3489  001044  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3490  001046  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3491  001048                     l3900:
  3492                           
  3493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3494  001048  C074  F094         	movff	efgtoa@ou,efgtoa@u
  3495  00104C  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3496  001050  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3497  001054  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3498  001058                     
  3499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3500  001058  0E65               	movlw	101
  3501  00105A  0100               	movlb	0	; () banked
  3502  00105C  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3503  00105E  B4D8               	btfsc	status,2,c
  3504  001060  EF34  F008         	goto	u4441
  3505  001064  EF36  F008         	goto	u4440
  3506  001068                     u4441:
  3507  001068  EF3C  F008         	goto	l3906
  3508  00106C                     u4440:
  3509  00106C                     
  3510                           ; BSR set to: 0
  3511  00106C  C090  F070         	movff	efgtoa@e,efgtoa@ne
  3512  001070  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3513  001074  EF40  F008         	goto	l1020
  3514  001078                     l3906:
  3515                           
  3516                           ; BSR set to: 0
  3517  001078  0E00               	movlw	0
  3518  00107A  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  3519  00107C  0E00               	movlw	0
  3520  00107E  6F70               	movwf	efgtoa@ne& (0+255),b
  3521  001080                     l1020:
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3525  001080  0E00               	movlw	0
  3526  001082  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3527  001084  0E00               	movlw	0
  3528  001086  6F6E               	movwf	efgtoa@pp& (0+255),b
  3529                           
  3530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3531  001088  0E00               	movlw	0
  3532  00108A  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  3533  00108C  0E00               	movlw	0
  3534  00108E  6F6C               	movwf	efgtoa@t& (0+255),b
  3535                           
  3536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3537  001090  0E00               	movlw	0
  3538  001092  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3539  001094  0E00               	movlw	0
  3540  001096  6F8A               	movwf	efgtoa@i& (0+255),b
  3541                           
  3542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3543  001098  EF3B  F009         	goto	l3956
  3544  00109C                     l3908:
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3548  00109C  C082  F016         	movff	efgtoa@h,___fldiv@b
  3549  0010A0  C083  F017         	movff	efgtoa@h+1,___fldiv@b+1
  3550  0010A4  C084  F018         	movff	efgtoa@h+2,___fldiv@b+2
  3551  0010A8  C085  F019         	movff	efgtoa@h+3,___fldiv@b+3
  3552  0010AC  C094  F01A         	movff	efgtoa@u,___fldiv@a
  3553  0010B0  C095  F01B         	movff	efgtoa@u+1,___fldiv@a+1
  3554  0010B4  C096  F01C         	movff	efgtoa@u+2,___fldiv@a+2
  3555  0010B8  C097  F01D         	movff	efgtoa@u+3,___fldiv@a+3
  3556  0010BC  EC5D  F011         	call	___fldiv	;wreg free
  3557  0010C0  C016  F02F         	movff	?___fldiv,floorf@x
  3558  0010C4  C017  F030         	movff	?___fldiv+1,floorf@x+1
  3559  0010C8  C018  F031         	movff	?___fldiv+2,floorf@x+2
  3560  0010CC  C019  F032         	movff	?___fldiv+3,floorf@x+3
  3561  0010D0  EC5E  F014         	call	_floorf	;wreg free
  3562  0010D4  C02F  F086         	movff	?_floorf,efgtoa@l
  3563  0010D8  C030  F087         	movff	?_floorf+1,efgtoa@l+1
  3564  0010DC  C031  F088         	movff	?_floorf+2,efgtoa@l+2
  3565  0010E0  C032  F089         	movff	?_floorf+3,efgtoa@l+3
  3566                           
  3567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3568  0010E4  C086  F001         	movff	efgtoa@l,___fltol@f1
  3569  0010E8  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3570  0010EC  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3571  0010F0  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3572  0010F4  EC09  F017         	call	___fltol	;wreg free
  3573  0010F8  C001  F078         	movff	?___fltol,efgtoa@d
  3574  0010FC  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3575  001100                     
  3576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3577  001100  0100               	movlb	0	; () banked
  3578  001102  B9E8               	btfsc	_flags& (0+255),4,b
  3579  001104  EF86  F008         	goto	u4451
  3580  001108  EF88  F008         	goto	u4450
  3581  00110C                     u4451:
  3582  00110C  EFA5  F008         	goto	l3920
  3583  001110                     u4450:
  3584  001110                     
  3585                           ; BSR set to: 0
  3586  001110  5178               	movf	efgtoa@d& (0+255),w,b
  3587  001112  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3588  001114  A4D8               	btfss	status,2,c
  3589  001116  EF8F  F008         	goto	u4461
  3590  00111A  EF91  F008         	goto	u4460
  3591  00111E                     u4461:
  3592  00111E  EFA5  F008         	goto	l3920
  3593  001122                     u4460:
  3594  001122                     
  3595                           ; BSR set to: 0
  3596  001122  0E67               	movlw	103
  3597  001124  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3598  001126  A4D8               	btfss	status,2,c
  3599  001128  EF98  F008         	goto	u4471
  3600  00112C  EF9A  F008         	goto	u4470
  3601  001130                     u4471:
  3602  001130  EFA5  F008         	goto	l3920
  3603  001134                     u4470:
  3604  001134                     
  3605                           ; BSR set to: 0
  3606  001134  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3607  001136  EFA1  F008         	goto	u4480
  3608  00113A  EF9F  F008         	goto	u4481
  3609  00113E                     u4481:
  3610  00113E  EFA5  F008         	goto	l3920
  3611  001142                     u4480:
  3612  001142                     
  3613                           ; BSR set to: 0
  3614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3615  001142  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  3616  001144  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3619  001146  EFEF  F008         	goto	l3948
  3620  00114A                     l3920:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3624  00114A  516E               	movf	efgtoa@pp& (0+255),w,b
  3625  00114C  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3626  00114E  A4D8               	btfss	status,2,c
  3627  001150  EFAC  F008         	goto	u4491
  3628  001154  EFAE  F008         	goto	u4490
  3629  001158                     u4491:
  3630  001158  EFD8  F008         	goto	l3940
  3631  00115C                     u4490:
  3632  00115C                     
  3633                           ; BSR set to: 0
  3634  00115C  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3635  00115E  EFB5  F008         	goto	u4500
  3636  001162  EFB3  F008         	goto	u4501
  3637  001166                     u4501:
  3638  001166  EFD8  F008         	goto	l3940
  3639  00116A                     u4500:
  3640  00116A                     
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3643  00116A  0E00               	movlw	low _dbuf
  3644  00116C  2592               	addwf	efgtoa@n& (0+255),w,b
  3645  00116E  6ED9               	movwf	fsr2l,c
  3646  001170  0E01               	movlw	high _dbuf
  3647  001172  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3648  001174  6EDA               	movwf	fsr2h,c
  3649  001176  0E2E               	movlw	46
  3650  001178  6EDF               	movwf	indf2,c
  3651  00117A                     
  3652                           ; BSR set to: 0
  3653  00117A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3654  00117C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3655  00117E                     
  3656                           ; BSR set to: 0
  3657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3658  00117E  077E               	decf	efgtoa@w& (0+255),f,b
  3659  001180  A0D8               	btfss	status,0,c
  3660  001182  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3661  001184                     
  3662                           ; BSR set to: 0
  3663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3664  001184  0E00               	movlw	0
  3665  001186  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3666  001188  0E01               	movlw	1
  3667  00118A  6F6E               	movwf	efgtoa@pp& (0+255),b
  3668  00118C  EFD8  F008         	goto	l3940
  3669  001190                     l3932:
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3673  001190  0E00               	movlw	low _dbuf
  3674  001192  2592               	addwf	efgtoa@n& (0+255),w,b
  3675  001194  6ED9               	movwf	fsr2l,c
  3676  001196  0E01               	movlw	high _dbuf
  3677  001198  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3678  00119A  6EDA               	movwf	fsr2h,c
  3679  00119C  0E30               	movlw	48
  3680  00119E  6EDF               	movwf	indf2,c
  3681  0011A0                     
  3682                           ; BSR set to: 0
  3683  0011A0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3684  0011A2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3685  0011A4                     
  3686                           ; BSR set to: 0
  3687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3688  0011A4  077E               	decf	efgtoa@w& (0+255),f,b
  3689  0011A6  A0D8               	btfss	status,0,c
  3690  0011A8  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3691  0011AA                     
  3692                           ; BSR set to: 0
  3693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3694  0011AA  076C               	decf	efgtoa@t& (0+255),f,b
  3695  0011AC  A0D8               	btfss	status,0,c
  3696  0011AE  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  3697  0011B0                     l3940:
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3701  0011B0  516C               	movf	efgtoa@t& (0+255),w,b
  3702  0011B2  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3703  0011B4  A4D8               	btfss	status,2,c
  3704  0011B6  EFDF  F008         	goto	u4511
  3705  0011BA  EFE1  F008         	goto	u4510
  3706  0011BE                     u4511:
  3707  0011BE  EFC8  F008         	goto	l3932
  3708  0011C2                     u4510:
  3709  0011C2                     
  3710                           ; BSR set to: 0
  3711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3712  0011C2  0E00               	movlw	low _dbuf
  3713  0011C4  2592               	addwf	efgtoa@n& (0+255),w,b
  3714  0011C6  6ED9               	movwf	fsr2l,c
  3715  0011C8  0E01               	movlw	high _dbuf
  3716  0011CA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3717  0011CC  6EDA               	movwf	fsr2h,c
  3718  0011CE  5178               	movf	efgtoa@d& (0+255),w,b
  3719  0011D0  0F30               	addlw	48
  3720  0011D2  6EDF               	movwf	indf2,c
  3721  0011D4                     
  3722                           ; BSR set to: 0
  3723  0011D4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3724  0011D6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3725  0011D8                     
  3726                           ; BSR set to: 0
  3727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3728  0011D8  077E               	decf	efgtoa@w& (0+255),f,b
  3729  0011DA  A0D8               	btfss	status,0,c
  3730  0011DC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3731  0011DE                     l3948:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3735  0011DE  C082  F03F         	movff	efgtoa@h,___flsub@b
  3736  0011E2  C083  F040         	movff	efgtoa@h+1,___flsub@b+1
  3737  0011E6  C084  F041         	movff	efgtoa@h+2,___flsub@b+2
  3738  0011EA  C085  F042         	movff	efgtoa@h+3,___flsub@b+3
  3739  0011EE  C094  F005         	movff	efgtoa@u,___flmul@a
  3740  0011F2  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3741  0011F6  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3742  0011FA  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3743  0011FE  C086  F001         	movff	efgtoa@l,___flmul@b
  3744  001202  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3745  001206  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3746  00120A  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3747  00120E  EC48  F00F         	call	___flmul	;wreg free
  3748  001212  C001  F043         	movff	?___flmul,___flsub@a
  3749  001216  C002  F044         	movff	?___flmul+1,___flsub@a+1
  3750  00121A  C003  F045         	movff	?___flmul+2,___flsub@a+2
  3751  00121E  C004  F046         	movff	?___flmul+3,___flsub@a+3
  3752  001222  EC54  F01E         	call	___flsub	;wreg free
  3753  001226  C03F  F082         	movff	?___flsub,efgtoa@h
  3754  00122A  C040  F083         	movff	?___flsub+1,efgtoa@h+1
  3755  00122E  C041  F084         	movff	?___flsub+2,efgtoa@h+2
  3756  001232  C042  F085         	movff	?___flsub+3,efgtoa@h+3
  3757  001236                     
  3758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3759  001236  C094  F016         	movff	efgtoa@u,___fldiv@b
  3760  00123A  C095  F017         	movff	efgtoa@u+1,___fldiv@b+1
  3761  00123E  C096  F018         	movff	efgtoa@u+2,___fldiv@b+2
  3762  001242  C097  F019         	movff	efgtoa@u+3,___fldiv@b+3
  3763  001246  0E00               	movlw	0
  3764  001248  6E1A               	movwf	___fldiv@a^0,c
  3765  00124A  0E00               	movlw	0
  3766  00124C  6E1B               	movwf	(___fldiv@a+1)^0,c
  3767  00124E  0E20               	movlw	32
  3768  001250  6E1C               	movwf	(___fldiv@a+2)^0,c
  3769  001252  0E41               	movlw	65
  3770  001254  6E1D               	movwf	(___fldiv@a+3)^0,c
  3771  001256  EC5D  F011         	call	___fldiv	;wreg free
  3772  00125A  C016  F094         	movff	?___fldiv,efgtoa@u
  3773  00125E  C017  F095         	movff	?___fldiv+1,efgtoa@u+1
  3774  001262  C018  F096         	movff	?___fldiv+2,efgtoa@u+2
  3775  001266  C019  F097         	movff	?___fldiv+3,efgtoa@u+3
  3776  00126A                     
  3777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3778  00126A  0100               	movlb	0	; () banked
  3779  00126C  0770               	decf	efgtoa@ne& (0+255),f,b
  3780  00126E  A0D8               	btfss	status,0,c
  3781  001270  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  3782  001272                     
  3783                           ; BSR set to: 0
  3784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3785  001272  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3786  001274  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3787  001276                     l3956:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3791  001276  5172               	movf	efgtoa@m& (0+255),w,b
  3792  001278  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3793  00127A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3794  00127C  0A80               	xorlw	128
  3795  00127E  6E4E               	movwf	??_efgtoa^0,c
  3796  001280  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3797  001282  0A80               	xorlw	128
  3798  001284  584E               	subwfb	??_efgtoa^0,w,c
  3799  001286  B0D8               	btfsc	status,0,c
  3800  001288  EF48  F009         	goto	u4521
  3801  00128C  EF4A  F009         	goto	u4520
  3802  001290                     u4521:
  3803  001290  EF58  F009         	goto	l3960
  3804  001294                     u4520:
  3805  001294                     
  3806                           ; BSR set to: 0
  3807  001294  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3808  001296  EF56  F009         	goto	u4531
  3809  00129A  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3810  00129C  E109               	bnz	u4530
  3811  00129E  0E4B               	movlw	75
  3812  0012A0  5D92               	subwf	efgtoa@n& (0+255),w,b
  3813  0012A2  A0D8               	btfss	status,0,c
  3814  0012A4  EF56  F009         	goto	u4531
  3815  0012A8  EF58  F009         	goto	u4530
  3816  0012AC                     u4531:
  3817  0012AC  EF4E  F008         	goto	l3908
  3818  0012B0                     u4530:
  3819  0012B0                     l3960:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3823  0012B0  516E               	movf	efgtoa@pp& (0+255),w,b
  3824  0012B2  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3825  0012B4  A4D8               	btfss	status,2,c
  3826  0012B6  EF5F  F009         	goto	u4541
  3827  0012BA  EF61  F009         	goto	u4540
  3828  0012BE                     u4541:
  3829  0012BE  EF72  F009         	goto	l3968
  3830  0012C2                     u4540:
  3831  0012C2                     
  3832                           ; BSR set to: 0
  3833  0012C2  A9E8               	btfss	_flags& (0+255),4,b
  3834  0012C4  EF66  F009         	goto	u4551
  3835  0012C8  EF68  F009         	goto	u4550
  3836  0012CC                     u4551:
  3837  0012CC  EF72  F009         	goto	l3968
  3838  0012D0                     u4550:
  3839  0012D0                     
  3840                           ; BSR set to: 0
  3841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3842  0012D0  0E00               	movlw	low _dbuf
  3843  0012D2  2592               	addwf	efgtoa@n& (0+255),w,b
  3844  0012D4  6ED9               	movwf	fsr2l,c
  3845  0012D6  0E01               	movlw	high _dbuf
  3846  0012D8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3847  0012DA  6EDA               	movwf	fsr2h,c
  3848  0012DC  0E2E               	movlw	46
  3849  0012DE  6EDF               	movwf	indf2,c
  3850  0012E0                     
  3851                           ; BSR set to: 0
  3852  0012E0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3853  0012E2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3854  0012E4                     l3968:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3858  0012E4  0E00               	movlw	low _dbuf
  3859  0012E6  2592               	addwf	efgtoa@n& (0+255),w,b
  3860  0012E8  6ED9               	movwf	fsr2l,c
  3861  0012EA  0E01               	movlw	high _dbuf
  3862  0012EC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3863  0012EE  6EDA               	movwf	fsr2h,c
  3864  0012F0  0E00               	movlw	0
  3865  0012F2  6EDF               	movwf	indf2,c
  3866  0012F4                     
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3869  0012F4  0E65               	movlw	101
  3870  0012F6  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3871  0012F8  A4D8               	btfss	status,2,c
  3872  0012FA  EF81  F009         	goto	u4561
  3873  0012FE  EF83  F009         	goto	u4560
  3874  001302                     u4561:
  3875  001302  EFDD  F004         	goto	l3770
  3876  001306                     u4560:
  3877  001306                     
  3878                           ; BSR set to: 0
  3879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3880  001306  0E00               	movlw	0
  3881  001308  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3882  00130A  0E4F               	movlw	79
  3883  00130C  6F8A               	movwf	efgtoa@i& (0+255),b
  3884  00130E                     
  3885                           ; BSR set to: 0
  3886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3887  00130E  0E00               	movlw	low _dbuf
  3888  001310  258A               	addwf	efgtoa@i& (0+255),w,b
  3889  001312  6ED9               	movwf	fsr2l,c
  3890  001314  0E01               	movlw	high _dbuf
  3891  001316  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3892  001318  6EDA               	movwf	fsr2h,c
  3893  00131A  0E00               	movlw	0
  3894  00131C  6EDF               	movwf	indf2,c
  3895  00131E                     
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3898  00131E  0E00               	movlw	0
  3899  001320  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3900  001322  0E00               	movlw	0
  3901  001324  6F7A               	movwf	efgtoa@sign& (0+255),b
  3902  001326                     
  3903                           ; BSR set to: 0
  3904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3905  001326  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3906  001328  EF9A  F009         	goto	u4570
  3907  00132C  EF98  F009         	goto	u4571
  3908  001330                     u4571:
  3909  001330  EFA2  F009         	goto	l3984
  3910  001334                     u4570:
  3911  001334                     
  3912                           ; BSR set to: 0
  3913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3914  001334  0E00               	movlw	0
  3915  001336  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3916  001338  0E01               	movlw	1
  3917  00133A  6F7A               	movwf	efgtoa@sign& (0+255),b
  3918  00133C                     
  3919                           ; BSR set to: 0
  3920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3921  00133C  6D90               	negf	efgtoa@e& (0+255),b
  3922  00133E  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3923  001340  B0D8               	btfsc	status,0,c
  3924  001342  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3925  001344                     l3984:
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3929  001344  0E00               	movlw	0
  3930  001346  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3931  001348  0E02               	movlw	2
  3932  00134A  6F7C               	movwf	efgtoa@p& (0+255),b
  3933                           
  3934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3935  00134C  EFD3  F009         	goto	l3996
  3936  001350                     l3986:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3940  001350  078A               	decf	efgtoa@i& (0+255),f,b
  3941  001352  A0D8               	btfss	status,0,c
  3942  001354  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3943  001356                     
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3946  001356  0E00               	movlw	low _dbuf
  3947  001358  258A               	addwf	efgtoa@i& (0+255),w,b
  3948  00135A  6ED9               	movwf	fsr2l,c
  3949  00135C  0E01               	movlw	high _dbuf
  3950  00135E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3951  001360  6EDA               	movwf	fsr2h,c
  3952  001362  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3953  001366  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3954  00136A  0E00               	movlw	0
  3955  00136C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3956  00136E  0E0A               	movlw	10
  3957  001370  6E03               	movwf	___awmod@divisor^0,c
  3958  001372  EC8B  F01A         	call	___awmod	;wreg free
  3959  001376  5001               	movf	?___awmod^0,w,c
  3960  001378  0F30               	addlw	48
  3961  00137A  6EDF               	movwf	indf2,c
  3962  00137C                     
  3963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3964  00137C  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3965  001380  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3966  001384  0E00               	movlw	0
  3967  001386  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3968  001388  0E0A               	movlw	10
  3969  00138A  6E03               	movwf	___awdiv@divisor^0,c
  3970  00138C  EC29  F01A         	call	___awdiv	;wreg free
  3971  001390  C001  F090         	movff	?___awdiv,efgtoa@e
  3972  001394  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3973  001398                     
  3974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3975  001398  0100               	movlb	0	; () banked
  3976  00139A  077C               	decf	efgtoa@p& (0+255),f,b
  3977  00139C  A0D8               	btfss	status,0,c
  3978  00139E  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3979  0013A0                     
  3980                           ; BSR set to: 0
  3981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3982  0013A0  077E               	decf	efgtoa@w& (0+255),f,b
  3983  0013A2  A0D8               	btfss	status,0,c
  3984  0013A4  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3985  0013A6                     l3996:
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3989  0013A6  5190               	movf	efgtoa@e& (0+255),w,b
  3990  0013A8  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3991  0013AA  A4D8               	btfss	status,2,c
  3992  0013AC  EFDA  F009         	goto	u4581
  3993  0013B0  EFDC  F009         	goto	u4580
  3994  0013B4                     u4581:
  3995  0013B4  EFA8  F009         	goto	l3986
  3996  0013B8                     u4580:
  3997  0013B8                     
  3998                           ; BSR set to: 0
  3999  0013B8  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4000  0013BA  EFE9  F009         	goto	u4590
  4001  0013BE  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4002  0013C0  E106               	bnz	u4591
  4003  0013C2  057C               	decf	efgtoa@p& (0+255),w,b
  4004  0013C4  B0D8               	btfsc	status,0,c
  4005  0013C6  EFE7  F009         	goto	u4591
  4006  0013CA  EFE9  F009         	goto	u4590
  4007  0013CE                     u4591:
  4008  0013CE  EFA8  F009         	goto	l3986
  4009  0013D2                     u4590:
  4010  0013D2                     
  4011                           ; BSR set to: 0
  4012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4013  0013D2  078A               	decf	efgtoa@i& (0+255),f,b
  4014  0013D4  A0D8               	btfss	status,0,c
  4015  0013D6  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4016  0013D8                     
  4017                           ; BSR set to: 0
  4018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4019  0013D8  517A               	movf	efgtoa@sign& (0+255),w,b
  4020  0013DA  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4021  0013DC  A4D8               	btfss	status,2,c
  4022  0013DE  EFF3  F009         	goto	u4601
  4023  0013E2  EFF5  F009         	goto	u4600
  4024  0013E6                     u4601:
  4025  0013E6  EFFB  F009         	goto	l4006
  4026  0013EA                     u4600:
  4027  0013EA                     
  4028                           ; BSR set to: 0
  4029  0013EA  0E00               	movlw	0
  4030  0013EC  6F67               	movwf	(_efgtoa$980+1)& (0+255),b
  4031  0013EE  0E2B               	movlw	43
  4032  0013F0  6F66               	movwf	_efgtoa$980& (0+255),b
  4033  0013F2  EFFF  F009         	goto	l4008
  4034  0013F6                     l4006:
  4035                           
  4036                           ; BSR set to: 0
  4037  0013F6  0E00               	movlw	0
  4038  0013F8  6F67               	movwf	(_efgtoa$980+1)& (0+255),b
  4039  0013FA  0E2D               	movlw	45
  4040  0013FC  6F66               	movwf	_efgtoa$980& (0+255),b
  4041  0013FE                     l4008:
  4042                           
  4043                           ; BSR set to: 0
  4044  0013FE  0E00               	movlw	low _dbuf
  4045  001400  258A               	addwf	efgtoa@i& (0+255),w,b
  4046  001402  6ED9               	movwf	fsr2l,c
  4047  001404  0E01               	movlw	high _dbuf
  4048  001406  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4049  001408  6EDA               	movwf	fsr2h,c
  4050  00140A  C066  FFDF         	movff	_efgtoa$980,indf2
  4051  00140E                     
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4054  00140E  077E               	decf	efgtoa@w& (0+255),f,b
  4055  001410  A0D8               	btfss	status,0,c
  4056  001412  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4057  001414                     
  4058                           ; BSR set to: 0
  4059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4060  001414  078A               	decf	efgtoa@i& (0+255),f,b
  4061  001416  A0D8               	btfss	status,0,c
  4062  001418  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4063  00141A                     
  4064                           ; BSR set to: 0
  4065  00141A  0EBF               	movlw	191
  4066  00141C  6E4E               	movwf	??_efgtoa^0,c
  4067  00141E  0EFF               	movlw	255
  4068  001420  6E4F               	movwf	(??_efgtoa+1)^0,c
  4069  001422  504D               	movf	efgtoa@c^0,w,c
  4070  001424  6E50               	movwf	(??_efgtoa+2)^0,c
  4071  001426  6A51               	clrf	(??_efgtoa+3)^0,c
  4072  001428  504E               	movf	??_efgtoa^0,w,c
  4073  00142A  2650               	addwf	(??_efgtoa+2)^0,f,c
  4074  00142C  504F               	movf	(??_efgtoa+1)^0,w,c
  4075  00142E  2251               	addwfc	(??_efgtoa+3)^0,f,c
  4076  001430  5051               	movf	(??_efgtoa+3)^0,w,c
  4077  001432  E10A               	bnz	u4610
  4078  001434  0E1A               	movlw	26
  4079  001436  5C50               	subwf	(??_efgtoa+2)^0,w,c
  4080  001438  A0D8               	btfss	status,0,c
  4081  00143A  EF21  F00A         	goto	u4611
  4082  00143E  EF24  F00A         	goto	u4610
  4083  001442                     u4611:
  4084  001442  0E01               	movlw	1
  4085  001444  EF25  F00A         	goto	u4620
  4086  001448                     u4610:
  4087  001448  0E00               	movlw	0
  4088  00144A                     u4620:
  4089  00144A  6F6A               	movwf	_efgtoa$982& (0+255),b
  4090  00144C  6B6B               	clrf	(_efgtoa$982+1)& (0+255),b
  4091  00144E                     
  4092                           ; BSR set to: 0
  4093  00144E  516A               	movf	_efgtoa$982& (0+255),w,b
  4094  001450  116B               	iorwf	(_efgtoa$982+1)& (0+255),w,b
  4095  001452  A4D8               	btfss	status,2,c
  4096  001454  EF2E  F00A         	goto	u4631
  4097  001458  EF30  F00A         	goto	u4630
  4098  00145C                     u4631:
  4099  00145C  EF36  F00A         	goto	l4022
  4100  001460                     u4630:
  4101  001460                     
  4102                           ; BSR set to: 0
  4103  001460  0E00               	movlw	0
  4104  001462  6F69               	movwf	(_efgtoa$981+1)& (0+255),b
  4105  001464  0E65               	movlw	101
  4106  001466  6F68               	movwf	_efgtoa$981& (0+255),b
  4107  001468  EF3A  F00A         	goto	l4024
  4108  00146C                     l4022:
  4109                           
  4110                           ; BSR set to: 0
  4111  00146C  0E00               	movlw	0
  4112  00146E  6F69               	movwf	(_efgtoa$981+1)& (0+255),b
  4113  001470  0E45               	movlw	69
  4114  001472  6F68               	movwf	_efgtoa$981& (0+255),b
  4115  001474                     l4024:
  4116                           
  4117                           ; BSR set to: 0
  4118  001474  0E00               	movlw	low _dbuf
  4119  001476  258A               	addwf	efgtoa@i& (0+255),w,b
  4120  001478  6ED9               	movwf	fsr2l,c
  4121  00147A  0E01               	movlw	high _dbuf
  4122  00147C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4123  00147E  6EDA               	movwf	fsr2h,c
  4124  001480  C068  FFDF         	movff	_efgtoa$981,indf2
  4125  001484                     
  4126                           ; BSR set to: 0
  4127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4128  001484  077E               	decf	efgtoa@w& (0+255),f,b
  4129  001486  A0D8               	btfss	status,0,c
  4130  001488  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4131  00148A                     
  4132                           ; BSR set to: 0
  4133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4134  00148A  0E00               	movlw	low _dbuf
  4135  00148C  2592               	addwf	efgtoa@n& (0+255),w,b
  4136  00148E  6E01               	movwf	strcpy@dest^0,c
  4137  001490  0E01               	movlw	high _dbuf
  4138  001492  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4139  001494  6E02               	movwf	(strcpy@dest+1)^0,c
  4140  001496  0E00               	movlw	low _dbuf
  4141  001498  258A               	addwf	efgtoa@i& (0+255),w,b
  4142  00149A  6E03               	movwf	strcpy@src^0,c
  4143  00149C  0E01               	movlw	high _dbuf
  4144  00149E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4145  0014A0  6E04               	movwf	(strcpy@src+1)^0,c
  4146  0014A2  EC79  F01D         	call	_strcpy	;wreg free
  4147  0014A6  EFDD  F004         	goto	l3770
  4148  0014AA                     l974:
  4149  0014AA  0012               	return		;funcret
  4150  0014AC                     __end_of_efgtoa:
  4151                           	callstack 0
  4152                           
  4153 ;; *************** function _tolower *****************
  4154 ;; Defined at:
  4155 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  c               2    6[COMRAM] int 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  2    6[COMRAM] int 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2, status,0
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4169 ;;      Params:         2       0       0       0       0       0       0       0       0
  4170 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4171 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4172 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4173 ;;Total ram usage:        8 bytes
  4174 ;; Hardware stack levels used: 1
  4175 ;; Hardware stack levels required when called: 1
  4176 ;; This function calls:
  4177 ;;		_isupper
  4178 ;; This function is called by:
  4179 ;;		_efgtoa
  4180 ;;		_vfpfcnvrt
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text6
  4185  003A92                     __ptext6:
  4186                           	callstack 0
  4187  003A92                     _tolower:
  4188                           	callstack 26
  4189  003A92  0EBF               	movlw	191
  4190  003A94  6E09               	movwf	??_tolower^0,c
  4191  003A96  0EFF               	movlw	255
  4192  003A98  6E0A               	movwf	(??_tolower+1)^0,c
  4193  003A9A  C007  F00B         	movff	tolower@c,??_tolower+2
  4194  003A9E  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4195  003AA2  5009               	movf	??_tolower^0,w,c
  4196  003AA4  260B               	addwf	(??_tolower+2)^0,f,c
  4197  003AA6  500A               	movf	(??_tolower+1)^0,w,c
  4198  003AA8  220C               	addwfc	(??_tolower+3)^0,f,c
  4199  003AAA  500C               	movf	(??_tolower+3)^0,w,c
  4200  003AAC  E10A               	bnz	u3890
  4201  003AAE  0E1A               	movlw	26
  4202  003AB0  5C0B               	subwf	(??_tolower+2)^0,w,c
  4203  003AB2  A0D8               	btfss	status,0,c
  4204  003AB4  EF5E  F01D         	goto	u3891
  4205  003AB8  EF61  F01D         	goto	u3890
  4206  003ABC                     u3891:
  4207  003ABC  0E01               	movlw	1
  4208  003ABE  EF62  F01D         	goto	u3900
  4209  003AC2                     u3890:
  4210  003AC2  0E00               	movlw	0
  4211  003AC4                     u3900:
  4212  003AC4  6E0D               	movwf	_tolower$1129^0,c
  4213  003AC6  6A0E               	clrf	(_tolower$1129+1)^0,c
  4214  003AC8  500D               	movf	_tolower$1129^0,w,c
  4215  003ACA  100E               	iorwf	(_tolower$1129+1)^0,w,c
  4216  003ACC  B4D8               	btfsc	status,2,c
  4217  003ACE  EF6B  F01D         	goto	u3911
  4218  003AD2  EF6D  F01D         	goto	u3910
  4219  003AD6                     u3911:
  4220  003AD6  EF74  F01D         	goto	l1216
  4221  003ADA                     u3910:
  4222  003ADA  0E20               	movlw	32
  4223  003ADC  1007               	iorwf	tolower@c^0,w,c
  4224  003ADE  6E07               	movwf	?_tolower^0,c
  4225  003AE0  5008               	movf	(tolower@c+1)^0,w,c
  4226  003AE2  6E08               	movwf	(?_tolower+1)^0,c
  4227  003AE4  EF78  F01D         	goto	l1221
  4228  003AE8                     l1216:
  4229  003AE8  C007  F007         	movff	tolower@c,?_tolower
  4230  003AEC  C008  F008         	movff	tolower@c+1,?_tolower+1
  4231  003AF0                     l1221:
  4232  003AF0  0012               	return		;funcret
  4233  003AF2                     __end_of_tolower:
  4234                           	callstack 0
  4235                           
  4236 ;; *************** function _isupper *****************
  4237 ;; Defined at:
  4238 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  c               2    0[COMRAM] int 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  2    0[COMRAM] int 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4252 ;;      Params:         2       0       0       0       0       0       0       0       0
  4253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4254 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4255 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4256 ;;Total ram usage:        6 bytes
  4257 ;; Hardware stack levels used: 1
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_efgtoa
  4262 ;;		_vfpfcnvrt
  4263 ;;		_tolower
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text7
  4268  003DEE                     __ptext7:
  4269                           	callstack 0
  4270  003DEE                     _isupper:
  4271                           	callstack 26
  4272  003DEE  0EBF               	movlw	191
  4273  003DF0  6E03               	movwf	??_isupper^0,c
  4274  003DF2  0EFF               	movlw	255
  4275  003DF4  6E04               	movwf	(??_isupper+1)^0,c
  4276  003DF6  C001  F005         	movff	isupper@c,??_isupper+2
  4277  003DFA  C002  F006         	movff	isupper@c+1,??_isupper+3
  4278  003DFE  5003               	movf	??_isupper^0,w,c
  4279  003E00  2605               	addwf	(??_isupper+2)^0,f,c
  4280  003E02  5004               	movf	(??_isupper+1)^0,w,c
  4281  003E04  2206               	addwfc	(??_isupper+3)^0,f,c
  4282  003E06  5006               	movf	(??_isupper+3)^0,w,c
  4283  003E08  E10A               	bnz	u3040
  4284  003E0A  0E1A               	movlw	26
  4285  003E0C  5C05               	subwf	(??_isupper+2)^0,w,c
  4286  003E0E  A0D8               	btfss	status,0,c
  4287  003E10  EF0C  F01F         	goto	u3041
  4288  003E14  EF0F  F01F         	goto	u3040
  4289  003E18                     u3041:
  4290  003E18  0E01               	movlw	1
  4291  003E1A  EF10  F01F         	goto	u3050
  4292  003E1E                     u3040:
  4293  003E1E  0E00               	movlw	0
  4294  003E20                     u3050:
  4295  003E20  6E01               	movwf	?_isupper^0,c
  4296  003E22  6A02               	clrf	(?_isupper+1)^0,c
  4297  003E24  0012               	return		;funcret
  4298  003E26                     __end_of_isupper:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function _strcpy *****************
  4302 ;; Defined at:
  4303 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4306 ;;		 -> dbuf(80), 
  4307 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4308 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  4309 ;;		 -> dbuf(80), 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  d               2    8[COMRAM] PTR unsigned char 
  4312 ;;		 -> dbuf(80), 
  4313 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4314 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  4315 ;;		 -> dbuf(80), 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  2    0[COMRAM] PTR unsigned char 
  4318 ;; Registers used:
  4319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4325 ;;      Params:         4       0       0       0       0       0       0       0       0
  4326 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4327 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4328 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4329 ;;Total ram usage:       10 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_efgtoa
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text8
  4339  003AF2                     __ptext8:
  4340                           	callstack 0
  4341  003AF2                     _strcpy:
  4342                           	callstack 26
  4343  003AF2  C003  F007         	movff	strcpy@src,strcpy@s
  4344  003AF6  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4345  003AFA  C001  F009         	movff	strcpy@dest,strcpy@d
  4346  003AFE  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4347  003B02                     l3654:
  4348  003B02  5007               	movf	strcpy@s^0,w,c
  4349  003B04  6E05               	movwf	??_strcpy^0,c
  4350  003B06  5008               	movf	(strcpy@s+1)^0,w,c
  4351  003B08  6E06               	movwf	(??_strcpy+1)^0,c
  4352  003B0A  4A07               	infsnz	strcpy@s^0,f,c
  4353  003B0C  2A08               	incf	(strcpy@s+1)^0,f,c
  4354  003B0E  C005  FFF6         	movff	??_strcpy,tblptrl
  4355  003B12  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4356  003B16  6AF8               	clrf	tblptru,c
  4357  003B18  C009  FFD9         	movff	strcpy@d,fsr2l
  4358  003B1C  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4359  003B20  4A09               	infsnz	strcpy@d^0,f,c
  4360  003B22  2A0A               	incf	(strcpy@d+1)^0,f,c
  4361  003B24  0E07               	movlw	(high __ramtop+-1)
  4362  003B26  64F7               	cpfsgt	tblptrh,c
  4363  003B28  D003               	bra	u3877
  4364  003B2A  0008               	tblrd		*
  4365  003B2C  50F5               	movf	tablat,w,c
  4366  003B2E  D005               	bra	u3870
  4367  003B30                     u3877:
  4368  003B30  CFF6 FFE1          	movff	tblptrl,fsr1l
  4369  003B34  CFF7 FFE2          	movff	tblptrh,fsr1h
  4370  003B38  50E7               	movf	indf1,w,c
  4371  003B3A                     u3870:
  4372  003B3A  6EDF               	movwf	indf2,c
  4373  003B3C  50DF               	movf	indf2,w,c
  4374  003B3E  A4D8               	btfss	status,2,c
  4375  003B40  EFA4  F01D         	goto	u3881
  4376  003B44  EFA6  F01D         	goto	u3880
  4377  003B48                     u3881:
  4378  003B48  EF81  F01D         	goto	l3654
  4379  003B4C                     u3880:
  4380  003B4C  0012               	return		;funcret
  4381  003B4E                     __end_of_strcpy:
  4382                           	callstack 0
  4383                           
  4384 ;; *************** function _pad *****************
  4385 ;; Defined at:
  4386 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4389 ;;		 -> sprintf@f(6), 
  4390 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4391 ;;		 -> dbuf(80), 
  4392 ;;  p               2   20[COMRAM] int 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  w               2   25[COMRAM] int 
  4395 ;;  i               2   23[COMRAM] int 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  2   16[COMRAM] int 
  4398 ;; Registers used:
  4399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4405 ;;      Params:         6       0       0       0       0       0       0       0       0
  4406 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4407 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4408 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4409 ;;Total ram usage:       11 bytes
  4410 ;; Hardware stack levels used: 1
  4411 ;; Hardware stack levels required when called: 3
  4412 ;; This function calls:
  4413 ;;		_fputc
  4414 ;;		_fputs
  4415 ;;		_strlen
  4416 ;; This function is called by:
  4417 ;;		_efgtoa
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text9
  4422  00338C                     __ptext9:
  4423                           	callstack 0
  4424  00338C                     _pad:
  4425                           	callstack 23
  4426  00338C                     
  4427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4428  00338C  0100               	movlb	0	; () banked
  4429  00338E  A1E8               	btfss	_flags& (0+255),0,b
  4430  003390  EFCC  F019         	goto	u3761
  4431  003394  EFCE  F019         	goto	u3760
  4432  003398                     u3761:
  4433  003398  EFD8  F019         	goto	l3612
  4434  00339C                     u3760:
  4435  00339C                     
  4436                           ; BSR set to: 0
  4437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4438  00339C  C013  F00A         	movff	pad@buf,fputs@s
  4439  0033A0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4440  0033A4  C011  F00C         	movff	pad@fp,fputs@fp
  4441  0033A8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4442  0033AC  EC77  F01E         	call	_fputs	;wreg free
  4443  0033B0                     l3612:
  4444                           
  4445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4446  0033B0  BE16               	btfsc	(pad@p+1)^0,7,c
  4447  0033B2  EFDD  F019         	goto	u3771
  4448  0033B6  EFDF  F019         	goto	u3770
  4449  0033BA                     u3771:
  4450  0033BA  EFE5  F019         	goto	l3616
  4451  0033BE                     u3770:
  4452  0033BE  C015  F01A         	movff	pad@p,pad@w
  4453  0033C2  C016  F01B         	movff	pad@p+1,pad@w+1
  4454  0033C6  EFE9  F019         	goto	l951
  4455  0033CA                     l3616:
  4456  0033CA  0E00               	movlw	0
  4457  0033CC  6E1B               	movwf	(pad@w+1)^0,c
  4458  0033CE  0E00               	movlw	0
  4459  0033D0  6E1A               	movwf	pad@w^0,c
  4460  0033D2                     l951:
  4461                           
  4462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4463  0033D2  0E00               	movlw	0
  4464  0033D4  6E19               	movwf	(pad@i+1)^0,c
  4465  0033D6  0E00               	movlw	0
  4466  0033D8  6E18               	movwf	pad@i^0,c
  4467                           
  4468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4469  0033DA  EFFB  F019         	goto	l3622
  4470  0033DE                     l3618:
  4471                           
  4472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4473  0033DE  0E00               	movlw	0
  4474  0033E0  6E02               	movwf	(fputc@c+1)^0,c
  4475  0033E2  0E20               	movlw	32
  4476  0033E4  6E01               	movwf	fputc@c^0,c
  4477  0033E6  C011  F003         	movff	pad@fp,fputc@fp
  4478  0033EA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4479  0033EE  EC61  F019         	call	_fputc	;wreg free
  4480  0033F2                     
  4481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4482  0033F2  4A18               	infsnz	pad@i^0,f,c
  4483  0033F4  2A19               	incf	(pad@i+1)^0,f,c
  4484  0033F6                     l3622:
  4485                           
  4486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4487  0033F6  501A               	movf	pad@w^0,w,c
  4488  0033F8  5C18               	subwf	pad@i^0,w,c
  4489  0033FA  5019               	movf	(pad@i+1)^0,w,c
  4490  0033FC  0A80               	xorlw	128
  4491  0033FE  6E17               	movwf	??_pad^0,c
  4492  003400  501B               	movf	(pad@w+1)^0,w,c
  4493  003402  0A80               	xorlw	128
  4494  003404  5817               	subwfb	??_pad^0,w,c
  4495  003406  A0D8               	btfss	status,0,c
  4496  003408  EF08  F01A         	goto	u3781
  4497  00340C  EF0A  F01A         	goto	u3780
  4498  003410                     u3781:
  4499  003410  EFEF  F019         	goto	l3618
  4500  003414                     u3780:
  4501  003414                     
  4502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4503  003414  0100               	movlb	0	; () banked
  4504  003416  B1E8               	btfsc	_flags& (0+255),0,b
  4505  003418  EF10  F01A         	goto	u3791
  4506  00341C  EF12  F01A         	goto	u3790
  4507  003420                     u3791:
  4508  003420  EF1C  F01A         	goto	l3626
  4509  003424                     u3790:
  4510  003424                     
  4511                           ; BSR set to: 0
  4512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4513  003424  C013  F00A         	movff	pad@buf,fputs@s
  4514  003428  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4515  00342C  C011  F00C         	movff	pad@fp,fputs@fp
  4516  003430  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4517  003434  EC77  F01E         	call	_fputs	;wreg free
  4518  003438                     l3626:
  4519                           
  4520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4521  003438  C013  F001         	movff	pad@buf,strlen@s
  4522  00343C  C014  F002         	movff	pad@buf+1,strlen@s+1
  4523  003440  EC4B  F01F         	call	_strlen	;wreg free
  4524  003444  501A               	movf	pad@w^0,w,c
  4525  003446  2401               	addwf	?_strlen^0,w,c
  4526  003448  6E11               	movwf	?_pad^0,c
  4527  00344A  501B               	movf	(pad@w+1)^0,w,c
  4528  00344C  2002               	addwfc	(?_strlen+1)^0,w,c
  4529  00344E  6E12               	movwf	(?_pad+1)^0,c
  4530  003450  0012               	return		;funcret
  4531  003452                     __end_of_pad:
  4532                           	callstack 0
  4533                           
  4534 ;; *************** function _strlen *****************
  4535 ;; Defined at:
  4536 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4539 ;;		 -> dbuf(80), 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4542 ;;		 -> dbuf(80), 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  2    0[COMRAM] unsigned int 
  4545 ;; Registers used:
  4546 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4552 ;;      Params:         2       0       0       0       0       0       0       0       0
  4553 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4555 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4556 ;;Total ram usage:        4 bytes
  4557 ;; Hardware stack levels used: 1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_pad
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text10
  4566  003E96                     __ptext10:
  4567                           	callstack 0
  4568  003E96                     _strlen:
  4569                           	callstack 25
  4570  003E96  C001  F003         	movff	strlen@s,strlen@a
  4571  003E9A  C002  F004         	movff	strlen@s+1,strlen@a+1
  4572  003E9E  EF53  F01F         	goto	l3148
  4573  003EA2                     l3146:
  4574  003EA2  4A01               	infsnz	strlen@s^0,f,c
  4575  003EA4  2A02               	incf	(strlen@s+1)^0,f,c
  4576  003EA6                     l3148:
  4577  003EA6  C001  FFD9         	movff	strlen@s,fsr2l
  4578  003EAA  C002  FFDA         	movff	strlen@s+1,fsr2h
  4579  003EAE  50DF               	movf	indf2,w,c
  4580  003EB0  A4D8               	btfss	status,2,c
  4581  003EB2  EF5D  F01F         	goto	u3031
  4582  003EB6  EF5F  F01F         	goto	u3030
  4583  003EBA                     u3031:
  4584  003EBA  EF51  F01F         	goto	l3146
  4585  003EBE                     u3030:
  4586  003EBE  5003               	movf	strlen@a^0,w,c
  4587  003EC0  5C01               	subwf	strlen@s^0,w,c
  4588  003EC2  6E01               	movwf	?_strlen^0,c
  4589  003EC4  5004               	movf	(strlen@a+1)^0,w,c
  4590  003EC6  5802               	subwfb	(strlen@s+1)^0,w,c
  4591  003EC8  6E02               	movwf	(?_strlen+1)^0,c
  4592  003ECA  0012               	return		;funcret
  4593  003ECC                     __end_of_strlen:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function _fputs *****************
  4597 ;; Defined at:
  4598 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4601 ;;		 -> dbuf(80), 
  4602 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4603 ;;		 -> sprintf@f(6), 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  i               2   14[COMRAM] int 
  4606 ;;  c               1   13[COMRAM] unsigned char 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  2    9[COMRAM] int 
  4609 ;; Registers used:
  4610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4616 ;;      Params:         4       0       0       0       0       0       0       0       0
  4617 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4619 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4620 ;;Total ram usage:        7 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; Hardware stack levels required when called: 2
  4623 ;; This function calls:
  4624 ;;		_fputc
  4625 ;; This function is called by:
  4626 ;;		_pad
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text11
  4631  003CEE                     __ptext11:
  4632                           	callstack 0
  4633  003CEE                     _fputs:
  4634                           	callstack 23
  4635  003CEE  0E00               	movlw	0
  4636  003CF0  6E10               	movwf	(fputs@i+1)^0,c
  4637  003CF2  0E00               	movlw	0
  4638  003CF4  6E0F               	movwf	fputs@i^0,c
  4639  003CF6  EF88  F01E         	goto	l3142
  4640  003CFA                     l3138:
  4641  003CFA  C00E  F001         	movff	fputs@c,fputc@c
  4642  003CFE  6A02               	clrf	(fputc@c+1)^0,c
  4643  003D00  C00C  F003         	movff	fputs@fp,fputc@fp
  4644  003D04  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4645  003D08  EC61  F019         	call	_fputc	;wreg free
  4646  003D0C  4A0F               	infsnz	fputs@i^0,f,c
  4647  003D0E  2A10               	incf	(fputs@i+1)^0,f,c
  4648  003D10                     l3142:
  4649  003D10  500F               	movf	fputs@i^0,w,c
  4650  003D12  240A               	addwf	fputs@s^0,w,c
  4651  003D14  6ED9               	movwf	fsr2l,c
  4652  003D16  5010               	movf	(fputs@i+1)^0,w,c
  4653  003D18  200B               	addwfc	(fputs@s+1)^0,w,c
  4654  003D1A  6EDA               	movwf	fsr2h,c
  4655  003D1C  50DF               	movf	indf2,w,c
  4656  003D1E  6E0E               	movwf	fputs@c^0,c
  4657  003D20  500E               	movf	fputs@c^0,w,c
  4658  003D22  A4D8               	btfss	status,2,c
  4659  003D24  EF96  F01E         	goto	u3021
  4660  003D28  EF98  F01E         	goto	u3020
  4661  003D2C                     u3021:
  4662  003D2C  EF7D  F01E         	goto	l3138
  4663  003D30                     u3020:
  4664  003D30  0012               	return		;funcret
  4665  003D32                     __end_of_fputs:
  4666                           	callstack 0
  4667                           
  4668 ;; *************** function _fputc *****************
  4669 ;; Defined at:
  4670 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  c               2    0[COMRAM] int 
  4673 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4674 ;;		 -> sprintf@f(6), 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  2    0[COMRAM] int 
  4679 ;; Registers used:
  4680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4686 ;;      Params:         4       0       0       0       0       0       0       0       0
  4687 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4688 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4689 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4690 ;;Total ram usage:        9 bytes
  4691 ;; Hardware stack levels used: 1
  4692 ;; Hardware stack levels required when called: 1
  4693 ;; This function calls:
  4694 ;;		_putch
  4695 ;; This function is called by:
  4696 ;;		_pad
  4697 ;;		_vfpfcnvrt
  4698 ;;		_fputs
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text12
  4703  0032C2                     __ptext12:
  4704                           	callstack 0
  4705  0032C2                     _fputc:
  4706                           	callstack 26
  4707  0032C2  5003               	movf	fputc@fp^0,w,c
  4708  0032C4  1004               	iorwf	(fputc@fp+1)^0,w,c
  4709  0032C6  B4D8               	btfsc	status,2,c
  4710  0032C8  EF68  F019         	goto	u2591
  4711  0032CC  EF6A  F019         	goto	u2590
  4712  0032D0                     u2591:
  4713  0032D0  EF73  F019         	goto	l2924
  4714  0032D4                     u2590:
  4715  0032D4  5003               	movf	fputc@fp^0,w,c
  4716  0032D6  1004               	iorwf	(fputc@fp+1)^0,w,c
  4717  0032D8  A4D8               	btfss	status,2,c
  4718  0032DA  EF71  F019         	goto	u2601
  4719  0032DE  EF73  F019         	goto	u2600
  4720  0032E2                     u2601:
  4721  0032E2  EF78  F019         	goto	l2926
  4722  0032E6                     u2600:
  4723  0032E6                     l2924:
  4724  0032E6  5001               	movf	fputc@c^0,w,c
  4725  0032E8  EC0B  F020         	call	_putch
  4726  0032EC  EFC5  F019         	goto	l1179
  4727  0032F0                     l2926:
  4728  0032F0  EE20 F004          	lfsr	2,4
  4729  0032F4  5003               	movf	fputc@fp^0,w,c
  4730  0032F6  26D9               	addwf	fsr2l,f,c
  4731  0032F8  5004               	movf	(fputc@fp+1)^0,w,c
  4732  0032FA  22DA               	addwfc	fsr2h,f,c
  4733  0032FC  50DE               	movf	postinc2,w,c
  4734  0032FE  10DE               	iorwf	postinc2,w,c
  4735  003300  B4D8               	btfsc	status,2,c
  4736  003302  EF85  F019         	goto	u2611
  4737  003306  EF87  F019         	goto	u2610
  4738  00330A                     u2611:
  4739  00330A  EFA2  F019         	goto	l2930
  4740  00330E                     u2610:
  4741  00330E  EE20 F004          	lfsr	2,4
  4742  003312  5003               	movf	fputc@fp^0,w,c
  4743  003314  26D9               	addwf	fsr2l,f,c
  4744  003316  5004               	movf	(fputc@fp+1)^0,w,c
  4745  003318  22DA               	addwfc	fsr2h,f,c
  4746  00331A  EE10 F002          	lfsr	1,2
  4747  00331E  5003               	movf	fputc@fp^0,w,c
  4748  003320  26E1               	addwf	fsr1l,f,c
  4749  003322  5004               	movf	(fputc@fp+1)^0,w,c
  4750  003324  22E2               	addwfc	fsr1h,f,c
  4751  003326  50DE               	movf	postinc2,w,c
  4752  003328  5CE6               	subwf	postinc1,w,c
  4753  00332A  50E6               	movf	postinc1,w,c
  4754  00332C  0A80               	xorlw	128
  4755  00332E  6E09               	movwf	(??_fputc+4)^0,c
  4756  003330  50DE               	movf	postinc2,w,c
  4757  003332  0A80               	xorlw	128
  4758  003334  5809               	subwfb	(??_fputc+4)^0,w,c
  4759  003336  B0D8               	btfsc	status,0,c
  4760  003338  EFA0  F019         	goto	u2621
  4761  00333C  EFA2  F019         	goto	u2620
  4762  003340                     u2621:
  4763  003340  EFC5  F019         	goto	l1179
  4764  003344                     u2620:
  4765  003344                     l2930:
  4766  003344  EE20 F002          	lfsr	2,2
  4767  003348  5003               	movf	fputc@fp^0,w,c
  4768  00334A  26D9               	addwf	fsr2l,f,c
  4769  00334C  5004               	movf	(fputc@fp+1)^0,w,c
  4770  00334E  22DA               	addwfc	fsr2h,f,c
  4771  003350  CFDE F005          	movff	postinc2,??_fputc
  4772  003354  CFDD F006          	movff	postdec2,??_fputc+1
  4773  003358  C003  FFD9         	movff	fputc@fp,fsr2l
  4774  00335C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4775  003360  CFDE F007          	movff	postinc2,??_fputc+2
  4776  003364  CFDD F008          	movff	postdec2,??_fputc+3
  4777  003368  5005               	movf	??_fputc^0,w,c
  4778  00336A  2407               	addwf	(??_fputc+2)^0,w,c
  4779  00336C  6ED9               	movwf	fsr2l,c
  4780  00336E  5006               	movf	(??_fputc+1)^0,w,c
  4781  003370  2008               	addwfc	(??_fputc+3)^0,w,c
  4782  003372  6EDA               	movwf	fsr2h,c
  4783  003374  C001  FFDF         	movff	fputc@c,indf2
  4784  003378  EE20 F002          	lfsr	2,2
  4785  00337C  5003               	movf	fputc@fp^0,w,c
  4786  00337E  26D9               	addwf	fsr2l,f,c
  4787  003380  5004               	movf	(fputc@fp+1)^0,w,c
  4788  003382  22DA               	addwfc	fsr2h,f,c
  4789  003384  2ADE               	incf	postinc2,f,c
  4790  003386  0E00               	movlw	0
  4791  003388  22DD               	addwfc	postdec2,f,c
  4792  00338A                     l1179:
  4793  00338A  0012               	return		;funcret
  4794  00338C                     __end_of_fputc:
  4795                           	callstack 0
  4796                           
  4797 ;; *************** function _putch *****************
  4798 ;; Defined at:
  4799 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  c               1    wreg     unsigned char 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  c               1    0[COMRAM] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4813 ;;      Params:         0       0       0       0       0       0       0       0       0
  4814 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4816 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4817 ;;Total ram usage:        0 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_fputc
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text13
  4827  004016                     __ptext13:
  4828                           	callstack 0
  4829  004016                     _putch:
  4830                           	callstack 26
  4831  004016  0012               	return		;funcret
  4832  004018                     __end_of_putch:
  4833                           	callstack 0
  4834                           
  4835 ;; *************** function _floorf *****************
  4836 ;; Defined at:
  4837 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  x               4   46[COMRAM] float 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;  u               4   62[COMRAM] struct .
  4842 ;;  m               4   56[COMRAM] unsigned long 
  4843 ;;  e               2   60[COMRAM] int 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  4   46[COMRAM] float 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4853 ;;      Params:         4       0       0       0       0       0       0       0       0
  4854 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4855 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4856 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4857 ;;Total ram usage:       20 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		_efgtoa
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text14
  4867  0028BC                     __ptext14:
  4868                           	callstack 0
  4869  0028BC                     _floorf:
  4870                           	callstack 26
  4871  0028BC  C0BE  F03F         	movff	floorf@F527,floorf@u
  4872  0028C0  C0BF  F040         	movff	floorf@F527+1,floorf@u+1
  4873  0028C4  C0C0  F041         	movff	floorf@F527+2,floorf@u+2
  4874  0028C8  C0C1  F042         	movff	floorf@F527+3,floorf@u+3
  4875  0028CC  C02F  F03F         	movff	floorf@x,floorf@u
  4876  0028D0  C030  F040         	movff	floorf@x+1,floorf@u+1
  4877  0028D4  C031  F041         	movff	floorf@x+2,floorf@u+2
  4878  0028D8  C032  F042         	movff	floorf@x+3,floorf@u+3
  4879  0028DC  0E81               	movlw	129
  4880  0028DE  6E33               	movwf	??_floorf^0,c
  4881  0028E0  0EFF               	movlw	255
  4882  0028E2  6E34               	movwf	(??_floorf+1)^0,c
  4883  0028E4  C03F  F035         	movff	floorf@u,??_floorf+2
  4884  0028E8  C040  F036         	movff	floorf@u+1,??_floorf+3
  4885  0028EC  C041  F037         	movff	floorf@u+2,??_floorf+4
  4886  0028F0  C042  F038         	movff	floorf@u+3,??_floorf+5
  4887  0028F4  0E18               	movlw	24
  4888  0028F6  EF82  F014         	goto	u3920
  4889  0028FA                     u3925:
  4890  0028FA  90D8               	bcf	status,0,c
  4891  0028FC  3238               	rrcf	(??_floorf+5)^0,f,c
  4892  0028FE  3237               	rrcf	(??_floorf+4)^0,f,c
  4893  002900  3236               	rrcf	(??_floorf+3)^0,f,c
  4894  002902  3235               	rrcf	(??_floorf+2)^0,f,c
  4895  002904                     u3920:
  4896  002904  2EE8               	decfsz	wreg,f,c
  4897  002906  EF7D  F014         	goto	u3925
  4898  00290A  5035               	movf	(??_floorf+2)^0,w,c
  4899  00290C  2433               	addwf	??_floorf^0,w,c
  4900  00290E  6E3D               	movwf	floorf@e^0,c
  4901  002910  0E00               	movlw	0
  4902  002912  2034               	addwfc	(??_floorf+1)^0,w,c
  4903  002914  6E3E               	movwf	(floorf@e+1)^0,c
  4904  002916  BE3E               	btfsc	(floorf@e+1)^0,7,c
  4905  002918  EF97  F014         	goto	u3931
  4906  00291C  503E               	movf	(floorf@e+1)^0,w,c
  4907  00291E  E109               	bnz	u3930
  4908  002920  0E17               	movlw	23
  4909  002922  5C3D               	subwf	floorf@e^0,w,c
  4910  002924  A0D8               	btfss	status,0,c
  4911  002926  EF97  F014         	goto	u3931
  4912  00292A  EF99  F014         	goto	u3930
  4913  00292E                     u3931:
  4914  00292E  EFA3  F014         	goto	l3672
  4915  002932                     u3930:
  4916  002932                     l3670:
  4917  002932  C02F  F02F         	movff	floorf@x,?_floorf
  4918  002936  C030  F030         	movff	floorf@x+1,?_floorf+1
  4919  00293A  C031  F031         	movff	floorf@x+2,?_floorf+2
  4920  00293E  C032  F032         	movff	floorf@x+3,?_floorf+3
  4921  002942  EF66  F015         	goto	l1140
  4922  002946                     l3672:
  4923  002946  BE3E               	btfsc	(floorf@e+1)^0,7,c
  4924  002948  EFA8  F014         	goto	u3941
  4925  00294C  EFAA  F014         	goto	u3940
  4926  002950                     u3941:
  4927  002950  EF1A  F015         	goto	l3682
  4928  002954                     u3940:
  4929  002954  C03D  F033         	movff	floorf@e,??_floorf
  4930  002958  0EFF               	movlw	255
  4931  00295A  6E34               	movwf	(??_floorf+1)^0,c
  4932  00295C  0EFF               	movlw	255
  4933  00295E  6E35               	movwf	(??_floorf+2)^0,c
  4934  002960  0E7F               	movlw	127
  4935  002962  6E36               	movwf	(??_floorf+3)^0,c
  4936  002964  0E00               	movlw	0
  4937  002966  6E37               	movwf	(??_floorf+4)^0,c
  4938  002968                     u3955:
  4939  002968  6633               	tstfsz	??_floorf^0,c
  4940  00296A  EFB9  F014         	goto	u3956
  4941  00296E  EFC1  F014         	goto	u3957
  4942  002972                     u3956:
  4943  002972  3437               	rlcf	(??_floorf+4)^0,w,c
  4944  002974  3237               	rrcf	(??_floorf+4)^0,f,c
  4945  002976  3236               	rrcf	(??_floorf+3)^0,f,c
  4946  002978  3235               	rrcf	(??_floorf+2)^0,f,c
  4947  00297A  3234               	rrcf	(??_floorf+1)^0,f,c
  4948  00297C  2E33               	decfsz	??_floorf^0,f,c
  4949  00297E  EFB4  F014         	goto	u3955
  4950  002982                     u3957:
  4951  002982  C034  F039         	movff	??_floorf+1,floorf@m
  4952  002986  C035  F03A         	movff	??_floorf+2,floorf@m+1
  4953  00298A  C036  F03B         	movff	??_floorf+3,floorf@m+2
  4954  00298E  C037  F03C         	movff	??_floorf+4,floorf@m+3
  4955  002992  5039               	movf	floorf@m^0,w,c
  4956  002994  143F               	andwf	floorf@u^0,w,c
  4957  002996  6E33               	movwf	??_floorf^0,c
  4958  002998  503A               	movf	(floorf@m+1)^0,w,c
  4959  00299A  1440               	andwf	(floorf@u+1)^0,w,c
  4960  00299C  6E34               	movwf	(??_floorf+1)^0,c
  4961  00299E  503B               	movf	(floorf@m+2)^0,w,c
  4962  0029A0  1441               	andwf	(floorf@u+2)^0,w,c
  4963  0029A2  6E35               	movwf	(??_floorf+2)^0,c
  4964  0029A4  503C               	movf	(floorf@m+3)^0,w,c
  4965  0029A6  1442               	andwf	(floorf@u+3)^0,w,c
  4966  0029A8  6E36               	movwf	(??_floorf+3)^0,c
  4967  0029AA  5033               	movf	??_floorf^0,w,c
  4968  0029AC  1034               	iorwf	(??_floorf+1)^0,w,c
  4969  0029AE  1035               	iorwf	(??_floorf+2)^0,w,c
  4970  0029B0  1036               	iorwf	(??_floorf+3)^0,w,c
  4971  0029B2  A4D8               	btfss	status,2,c
  4972  0029B4  EFDE  F014         	goto	u3961
  4973  0029B8  EFE0  F014         	goto	u3960
  4974  0029BC                     u3961:
  4975  0029BC  EFE2  F014         	goto	l3678
  4976  0029C0                     u3960:
  4977  0029C0  EF99  F014         	goto	l3670
  4978  0029C4                     l3678:
  4979  0029C4  C03F  F033         	movff	floorf@u,??_floorf
  4980  0029C8  C040  F034         	movff	floorf@u+1,??_floorf+1
  4981  0029CC  C041  F035         	movff	floorf@u+2,??_floorf+2
  4982  0029D0  C042  F036         	movff	floorf@u+3,??_floorf+3
  4983  0029D4  0E20               	movlw	32
  4984  0029D6  EFF2  F014         	goto	u3970
  4985  0029DA                     u3975:
  4986  0029DA  90D8               	bcf	status,0,c
  4987  0029DC  3236               	rrcf	(??_floorf+3)^0,f,c
  4988  0029DE  3235               	rrcf	(??_floorf+2)^0,f,c
  4989  0029E0  3234               	rrcf	(??_floorf+1)^0,f,c
  4990  0029E2  3233               	rrcf	??_floorf^0,f,c
  4991  0029E4                     u3970:
  4992  0029E4  2EE8               	decfsz	wreg,f,c
  4993  0029E6  EFED  F014         	goto	u3975
  4994  0029EA  5033               	movf	??_floorf^0,w,c
  4995  0029EC  1034               	iorwf	(??_floorf+1)^0,w,c
  4996  0029EE  1035               	iorwf	(??_floorf+2)^0,w,c
  4997  0029F0  1036               	iorwf	(??_floorf+3)^0,w,c
  4998  0029F2  B4D8               	btfsc	status,2,c
  4999  0029F4  EFFE  F014         	goto	u3981
  5000  0029F8  EF00  F015         	goto	u3980
  5001  0029FC                     u3981:
  5002  0029FC  EF08  F015         	goto	l1143
  5003  002A00                     u3980:
  5004  002A00  5039               	movf	floorf@m^0,w,c
  5005  002A02  263F               	addwf	floorf@u^0,f,c
  5006  002A04  503A               	movf	(floorf@m+1)^0,w,c
  5007  002A06  2240               	addwfc	(floorf@u+1)^0,f,c
  5008  002A08  503B               	movf	(floorf@m+2)^0,w,c
  5009  002A0A  2241               	addwfc	(floorf@u+2)^0,f,c
  5010  002A0C  503C               	movf	(floorf@m+3)^0,w,c
  5011  002A0E  2242               	addwfc	(floorf@u+3)^0,f,c
  5012  002A10                     l1143:
  5013  002A10  1C39               	comf	floorf@m^0,w,c
  5014  002A12  6E33               	movwf	??_floorf^0,c
  5015  002A14  1C3A               	comf	(floorf@m+1)^0,w,c
  5016  002A16  6E34               	movwf	(??_floorf+1)^0,c
  5017  002A18  1C3B               	comf	(floorf@m+2)^0,w,c
  5018  002A1A  6E35               	movwf	(??_floorf+2)^0,c
  5019  002A1C  1C3C               	comf	(floorf@m+3)^0,w,c
  5020  002A1E  6E36               	movwf	(??_floorf+3)^0,c
  5021  002A20  5033               	movf	??_floorf^0,w,c
  5022  002A22  163F               	andwf	floorf@u^0,f,c
  5023  002A24  5034               	movf	(??_floorf+1)^0,w,c
  5024  002A26  1640               	andwf	(floorf@u+1)^0,f,c
  5025  002A28  5035               	movf	(??_floorf+2)^0,w,c
  5026  002A2A  1641               	andwf	(floorf@u+2)^0,f,c
  5027  002A2C  5036               	movf	(??_floorf+3)^0,w,c
  5028  002A2E  1642               	andwf	(floorf@u+3)^0,f,c
  5029  002A30  EF5E  F015         	goto	l3690
  5030  002A34                     l3682:
  5031  002A34  C03F  F033         	movff	floorf@u,??_floorf
  5032  002A38  C040  F034         	movff	floorf@u+1,??_floorf+1
  5033  002A3C  C041  F035         	movff	floorf@u+2,??_floorf+2
  5034  002A40  C042  F036         	movff	floorf@u+3,??_floorf+3
  5035  002A44  0E20               	movlw	32
  5036  002A46  EF2A  F015         	goto	u3990
  5037  002A4A                     u3995:
  5038  002A4A  90D8               	bcf	status,0,c
  5039  002A4C  3236               	rrcf	(??_floorf+3)^0,f,c
  5040  002A4E  3235               	rrcf	(??_floorf+2)^0,f,c
  5041  002A50  3234               	rrcf	(??_floorf+1)^0,f,c
  5042  002A52  3233               	rrcf	??_floorf^0,f,c
  5043  002A54                     u3990:
  5044  002A54  2EE8               	decfsz	wreg,f,c
  5045  002A56  EF25  F015         	goto	u3995
  5046  002A5A  5033               	movf	??_floorf^0,w,c
  5047  002A5C  1034               	iorwf	(??_floorf+1)^0,w,c
  5048  002A5E  1035               	iorwf	(??_floorf+2)^0,w,c
  5049  002A60  1036               	iorwf	(??_floorf+3)^0,w,c
  5050  002A62  A4D8               	btfss	status,2,c
  5051  002A64  EF36  F015         	goto	u4001
  5052  002A68  EF38  F015         	goto	u4000
  5053  002A6C                     u4001:
  5054  002A6C  EF42  F015         	goto	l3686
  5055  002A70                     u4000:
  5056  002A70  0E00               	movlw	0
  5057  002A72  6E3F               	movwf	floorf@u^0,c
  5058  002A74  0E00               	movlw	0
  5059  002A76  6E40               	movwf	(floorf@u+1)^0,c
  5060  002A78  0E00               	movlw	0
  5061  002A7A  6E41               	movwf	(floorf@u+2)^0,c
  5062  002A7C  0E00               	movlw	0
  5063  002A7E  6E42               	movwf	(floorf@u+3)^0,c
  5064  002A80  EF5E  F015         	goto	l3690
  5065  002A84                     l3686:
  5066  002A84  90D8               	bcf	status,0,c
  5067  002A86  343F               	rlcf	floorf@u^0,w,c
  5068  002A88  6E33               	movwf	??_floorf^0,c
  5069  002A8A  3440               	rlcf	(floorf@u+1)^0,w,c
  5070  002A8C  6E34               	movwf	(??_floorf+1)^0,c
  5071  002A8E  3441               	rlcf	(floorf@u+2)^0,w,c
  5072  002A90  6E35               	movwf	(??_floorf+2)^0,c
  5073  002A92  3442               	rlcf	(floorf@u+3)^0,w,c
  5074  002A94  6E36               	movwf	(??_floorf+3)^0,c
  5075  002A96  5033               	movf	??_floorf^0,w,c
  5076  002A98  1034               	iorwf	(??_floorf+1)^0,w,c
  5077  002A9A  1035               	iorwf	(??_floorf+2)^0,w,c
  5078  002A9C  1036               	iorwf	(??_floorf+3)^0,w,c
  5079  002A9E  B4D8               	btfsc	status,2,c
  5080  002AA0  EF54  F015         	goto	u4011
  5081  002AA4  EF56  F015         	goto	u4010
  5082  002AA8                     u4011:
  5083  002AA8  EF5E  F015         	goto	l3690
  5084  002AAC                     u4010:
  5085  002AAC  0E00               	movlw	0
  5086  002AAE  6E3F               	movwf	floorf@u^0,c
  5087  002AB0  0E00               	movlw	0
  5088  002AB2  6E40               	movwf	(floorf@u+1)^0,c
  5089  002AB4  0E80               	movlw	128
  5090  002AB6  6E41               	movwf	(floorf@u+2)^0,c
  5091  002AB8  0EBF               	movlw	191
  5092  002ABA  6E42               	movwf	(floorf@u+3)^0,c
  5093  002ABC                     l3690:
  5094  002ABC  C03F  F02F         	movff	floorf@u,?_floorf
  5095  002AC0  C040  F030         	movff	floorf@u+1,?_floorf+1
  5096  002AC4  C041  F031         	movff	floorf@u+2,?_floorf+2
  5097  002AC8  C042  F032         	movff	floorf@u+3,?_floorf+3
  5098  002ACC                     l1140:
  5099  002ACC  0012               	return		;funcret
  5100  002ACE                     __end_of_floorf:
  5101                           	callstack 0
  5102                           
  5103 ;; *************** function ___fpclassifyf *****************
  5104 ;; Defined at:
  5105 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;  x               4    0[COMRAM] float 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  u               4   10[COMRAM] struct .
  5110 ;;  e               2    8[COMRAM] int 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  2    0[COMRAM] int 
  5113 ;; Registers used:
  5114 ;;		wreg, status,2, status,0
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5120 ;;      Params:         4       0       0       0       0       0       0       0       0
  5121 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5122 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5123 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5124 ;;Total ram usage:       14 bytes
  5125 ;; Hardware stack levels used: 1
  5126 ;; This function calls:
  5127 ;;		Nothing
  5128 ;; This function is called by:
  5129 ;;		_efgtoa
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text15
  5134  00301C                     __ptext15:
  5135                           	callstack 0
  5136  00301C                     ___fpclassifyf:
  5137                           	callstack 26
  5138  00301C  C0C2  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5139  003020  C0C3  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5140  003024  C0C4  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5141  003028  C0C5  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5142  00302C  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5143  003030  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5144  003034  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5145  003038  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5146  00303C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5147  003040  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5148  003044  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5149  003048  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5150  00304C  0E18               	movlw	24
  5151  00304E  EF2E  F018         	goto	u3800
  5152  003052                     u3805:
  5153  003052  90D8               	bcf	status,0,c
  5154  003054  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5155  003056  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5156  003058  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5157  00305A  3205               	rrcf	??___fpclassifyf^0,f,c
  5158  00305C                     u3800:
  5159  00305C  2EE8               	decfsz	wreg,f,c
  5160  00305E  EF29  F018         	goto	u3805
  5161  003062  5005               	movf	??___fpclassifyf^0,w,c
  5162  003064  6E09               	movwf	___fpclassifyf@e^0,c
  5163  003066  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5164  003068  5009               	movf	___fpclassifyf@e^0,w,c
  5165  00306A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5166  00306C  A4D8               	btfss	status,2,c
  5167  00306E  EF3B  F018         	goto	u3811
  5168  003072  EF3D  F018         	goto	u3810
  5169  003076                     u3811:
  5170  003076  EF5D  F018         	goto	l3642
  5171  00307A                     u3810:
  5172  00307A  90D8               	bcf	status,0,c
  5173  00307C  340B               	rlcf	___fpclassifyf@u^0,w,c
  5174  00307E  6E05               	movwf	??___fpclassifyf^0,c
  5175  003080  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5176  003082  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5177  003084  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5178  003086  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5179  003088  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5180  00308A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5181  00308C  5005               	movf	??___fpclassifyf^0,w,c
  5182  00308E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5183  003090  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5184  003092  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5185  003094  A4D8               	btfss	status,2,c
  5186  003096  EF4F  F018         	goto	u3821
  5187  00309A  EF51  F018         	goto	u3820
  5188  00309E                     u3821:
  5189  00309E  EF57  F018         	goto	l3638
  5190  0030A2                     u3820:
  5191  0030A2  0E00               	movlw	0
  5192  0030A4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5193  0030A6  0E02               	movlw	2
  5194  0030A8  6E01               	movwf	?___fpclassifyf^0,c
  5195  0030AA  EF8C  F018         	goto	l1102
  5196  0030AE                     l3638:
  5197  0030AE  0E00               	movlw	0
  5198  0030B0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5199  0030B2  0E03               	movlw	3
  5200  0030B4  6E01               	movwf	?___fpclassifyf^0,c
  5201  0030B6  EF8C  F018         	goto	l1102
  5202  0030BA                     l3642:
  5203  0030BA  2809               	incf	___fpclassifyf@e^0,w,c
  5204  0030BC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5205  0030BE  A4D8               	btfss	status,2,c
  5206  0030C0  EF64  F018         	goto	u3831
  5207  0030C4  EF66  F018         	goto	u3830
  5208  0030C8                     u3831:
  5209  0030C8  EF88  F018         	goto	l3648
  5210  0030CC                     u3830:
  5211  0030CC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5212  0030D0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5213  0030D4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5214  0030D8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5215  0030DC  0E09               	movlw	9
  5216  0030DE                     u3845:
  5217  0030DE  90D8               	bcf	status,0,c
  5218  0030E0  3605               	rlcf	??___fpclassifyf^0,f,c
  5219  0030E2  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5220  0030E4  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5221  0030E6  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5222  0030E8  2EE8               	decfsz	wreg,f,c
  5223  0030EA  EF6F  F018         	goto	u3845
  5224  0030EE  5005               	movf	??___fpclassifyf^0,w,c
  5225  0030F0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5226  0030F2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5227  0030F4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5228  0030F6  B4D8               	btfsc	status,2,c
  5229  0030F8  EF80  F018         	goto	u3851
  5230  0030FC  EF83  F018         	goto	u3850
  5231  003100                     u3851:
  5232  003100  0E01               	movlw	1
  5233  003102  EF84  F018         	goto	u3860
  5234  003106                     u3850:
  5235  003106  0E00               	movlw	0
  5236  003108                     u3860:
  5237  003108  6E01               	movwf	?___fpclassifyf^0,c
  5238  00310A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5239  00310C  EF8C  F018         	goto	l1102
  5240  003110                     l3648:
  5241  003110  0E00               	movlw	0
  5242  003112  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5243  003114  0E04               	movlw	4
  5244  003116  6E01               	movwf	?___fpclassifyf^0,c
  5245  003118                     l1102:
  5246  003118  0012               	return		;funcret
  5247  00311A                     __end_of___fpclassifyf:
  5248                           	callstack 0
  5249                           
  5250 ;; *************** function ___fltol *****************
  5251 ;; Defined at:
  5252 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;  f1              4    0[COMRAM] int 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  exp1            1    9[COMRAM] unsigned char 
  5257 ;;  sign1           1    8[COMRAM] unsigned char 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  4    0[COMRAM] long 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2, status,0
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5267 ;;      Params:         4       0       0       0       0       0       0       0       0
  5268 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5269 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5270 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5271 ;;Total ram usage:       10 bytes
  5272 ;; Hardware stack levels used: 1
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_efgtoa
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text16
  5281  002E12                     __ptext16:
  5282                           	callstack 0
  5283  002E12                     ___fltol:
  5284                           	callstack 26
  5285  002E12  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5286  002E14  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5287  002E16  6E0A               	movwf	___fltol@exp1^0,c
  5288  002E18  500A               	movf	___fltol@exp1^0,w,c
  5289  002E1A  A4D8               	btfss	status,2,c
  5290  002E1C  EF12  F017         	goto	u3691
  5291  002E20  EF14  F017         	goto	u3690
  5292  002E24                     u3691:
  5293  002E24  EF1E  F017         	goto	l3570
  5294  002E28                     u3690:
  5295  002E28                     l3566:
  5296  002E28  0E00               	movlw	0
  5297  002E2A  6E01               	movwf	?___fltol^0,c
  5298  002E2C  0E00               	movlw	0
  5299  002E2E  6E02               	movwf	(?___fltol+1)^0,c
  5300  002E30  0E00               	movlw	0
  5301  002E32  6E03               	movwf	(?___fltol+2)^0,c
  5302  002E34  0E00               	movlw	0
  5303  002E36  6E04               	movwf	(?___fltol+3)^0,c
  5304  002E38  EF8B  F017         	goto	l529
  5305  002E3C                     l3570:
  5306  002E3C  C001  F005         	movff	___fltol@f1,??___fltol
  5307  002E40  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5308  002E44  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5309  002E48  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5310  002E4C  0E20               	movlw	32
  5311  002E4E  EF2E  F017         	goto	u3700
  5312  002E52                     u3705:
  5313  002E52  90D8               	bcf	status,0,c
  5314  002E54  3208               	rrcf	(??___fltol+3)^0,f,c
  5315  002E56  3207               	rrcf	(??___fltol+2)^0,f,c
  5316  002E58  3206               	rrcf	(??___fltol+1)^0,f,c
  5317  002E5A  3205               	rrcf	??___fltol^0,f,c
  5318  002E5C                     u3700:
  5319  002E5C  2EE8               	decfsz	wreg,f,c
  5320  002E5E  EF29  F017         	goto	u3705
  5321  002E62  5005               	movf	??___fltol^0,w,c
  5322  002E64  6E09               	movwf	___fltol@sign1^0,c
  5323  002E66  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5324  002E68  0EFF               	movlw	255
  5325  002E6A  1601               	andwf	___fltol@f1^0,f,c
  5326  002E6C  0EFF               	movlw	255
  5327  002E6E  1602               	andwf	(___fltol@f1+1)^0,f,c
  5328  002E70  0EFF               	movlw	255
  5329  002E72  1603               	andwf	(___fltol@f1+2)^0,f,c
  5330  002E74  0E00               	movlw	0
  5331  002E76  1604               	andwf	(___fltol@f1+3)^0,f,c
  5332  002E78  0E96               	movlw	150
  5333  002E7A  5E0A               	subwf	___fltol@exp1^0,f,c
  5334  002E7C  BE0A               	btfsc	___fltol@exp1^0,7,c
  5335  002E7E  EF45  F017         	goto	u3710
  5336  002E82  EF43  F017         	goto	u3711
  5337  002E86                     u3711:
  5338  002E86  EF5B  F017         	goto	l3590
  5339  002E8A                     u3710:
  5340  002E8A  500A               	movf	___fltol@exp1^0,w,c
  5341  002E8C  0A80               	xorlw	128
  5342  002E8E  0F97               	addlw	151
  5343  002E90  B0D8               	btfsc	status,0,c
  5344  002E92  EF4D  F017         	goto	u3721
  5345  002E96  EF4F  F017         	goto	u3720
  5346  002E9A                     u3721:
  5347  002E9A  EF51  F017         	goto	l3586
  5348  002E9E                     u3720:
  5349  002E9E  EF14  F017         	goto	l3566
  5350  002EA2                     l3586:
  5351  002EA2  90D8               	bcf	status,0,c
  5352  002EA4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5353  002EA6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5354  002EA8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5355  002EAA  3201               	rrcf	___fltol@f1^0,f,c
  5356  002EAC  3E0A               	incfsz	___fltol@exp1^0,f,c
  5357  002EAE  EF51  F017         	goto	l3586
  5358  002EB2  EF73  F017         	goto	l3600
  5359  002EB6                     l3590:
  5360  002EB6  0E1F               	movlw	31
  5361  002EB8  640A               	cpfsgt	___fltol@exp1^0,c
  5362  002EBA  EF61  F017         	goto	u3731
  5363  002EBE  EF63  F017         	goto	u3730
  5364  002EC2                     u3731:
  5365  002EC2  EF6B  F017         	goto	l3598
  5366  002EC6                     u3730:
  5367  002EC6  EF14  F017         	goto	l3566
  5368  002ECA                     l3596:
  5369  002ECA  90D8               	bcf	status,0,c
  5370  002ECC  3601               	rlcf	___fltol@f1^0,f,c
  5371  002ECE  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5372  002ED0  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5373  002ED2  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5374  002ED4  060A               	decf	___fltol@exp1^0,f,c
  5375  002ED6                     l3598:
  5376  002ED6  500A               	movf	___fltol@exp1^0,w,c
  5377  002ED8  A4D8               	btfss	status,2,c
  5378  002EDA  EF71  F017         	goto	u3741
  5379  002EDE  EF73  F017         	goto	u3740
  5380  002EE2                     u3741:
  5381  002EE2  EF65  F017         	goto	l3596
  5382  002EE6                     u3740:
  5383  002EE6                     l3600:
  5384  002EE6  5009               	movf	___fltol@sign1^0,w,c
  5385  002EE8  B4D8               	btfsc	status,2,c
  5386  002EEA  EF79  F017         	goto	u3751
  5387  002EEE  EF7B  F017         	goto	u3750
  5388  002EF2                     u3751:
  5389  002EF2  EF83  F017         	goto	l3604
  5390  002EF6                     u3750:
  5391  002EF6  1E04               	comf	(___fltol@f1+3)^0,f,c
  5392  002EF8  1E03               	comf	(___fltol@f1+2)^0,f,c
  5393  002EFA  1E02               	comf	(___fltol@f1+1)^0,f,c
  5394  002EFC  6C01               	negf	___fltol@f1^0,c
  5395  002EFE  0E00               	movlw	0
  5396  002F00  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5397  002F02  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5398  002F04  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5399  002F06                     l3604:
  5400  002F06  C001  F001         	movff	___fltol@f1,?___fltol
  5401  002F0A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5402  002F0E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5403  002F12  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5404  002F16                     l529:
  5405  002F16  0012               	return		;funcret
  5406  002F18                     __end_of___fltol:
  5407                           	callstack 0
  5408                           
  5409 ;; *************** function ___flsub *****************
  5410 ;; Defined at:
  5411 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  b               4   62[COMRAM] long 
  5414 ;;  a               4   66[COMRAM] long 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;		None
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  4   62[COMRAM] long 
  5419 ;; Registers used:
  5420 ;;		wreg, status,2, status,0, cstack
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5426 ;;      Params:         8       0       0       0       0       0       0       0       0
  5427 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5429 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5430 ;;Total ram usage:        8 bytes
  5431 ;; Hardware stack levels used: 1
  5432 ;; Hardware stack levels required when called: 1
  5433 ;; This function calls:
  5434 ;;		___fladd
  5435 ;; This function is called by:
  5436 ;;		_efgtoa
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text17
  5441  003CA8                     __ptext17:
  5442                           	callstack 0
  5443  003CA8                     ___flsub:
  5444                           	callstack 25
  5445  003CA8  0E00               	movlw	0
  5446  003CAA  1A43               	xorwf	___flsub@a^0,f,c
  5447  003CAC  0E00               	movlw	0
  5448  003CAE  1A44               	xorwf	(___flsub@a+1)^0,f,c
  5449  003CB0  0E00               	movlw	0
  5450  003CB2  1A45               	xorwf	(___flsub@a+2)^0,f,c
  5451  003CB4  0E80               	movlw	128
  5452  003CB6  1A46               	xorwf	(___flsub@a+3)^0,f,c
  5453  003CB8  C03F  F02F         	movff	___flsub@b,___fladd@b
  5454  003CBC  C040  F030         	movff	___flsub@b+1,___fladd@b+1
  5455  003CC0  C041  F031         	movff	___flsub@b+2,___fladd@b+2
  5456  003CC4  C042  F032         	movff	___flsub@b+3,___fladd@b+3
  5457  003CC8  C043  F033         	movff	___flsub@a,___fladd@a
  5458  003CCC  C044  F034         	movff	___flsub@a+1,___fladd@a+1
  5459  003CD0  C045  F035         	movff	___flsub@a+2,___fladd@a+2
  5460  003CD4  C046  F036         	movff	___flsub@a+3,___fladd@a+3
  5461  003CD8  ECE8  F00C         	call	___fladd	;wreg free
  5462  003CDC  C02F  F03F         	movff	?___fladd,?___flsub
  5463  003CE0  C030  F040         	movff	?___fladd+1,?___flsub+1
  5464  003CE4  C031  F041         	movff	?___fladd+2,?___flsub+2
  5465  003CE8  C032  F042         	movff	?___fladd+3,?___flsub+3
  5466  003CEC  0012               	return		;funcret
  5467  003CEE                     __end_of___flsub:
  5468                           	callstack 0
  5469                           
  5470 ;; *************** function ___flneg *****************
  5471 ;; Defined at:
  5472 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  f1              4    0[COMRAM] long 
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  4    0[COMRAM] long 
  5479 ;; Registers used:
  5480 ;;		wreg, status,2, status,0
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5486 ;;      Params:         4       0       0       0       0       0       0       0       0
  5487 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5488 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5489 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5490 ;;Total ram usage:        4 bytes
  5491 ;; Hardware stack levels used: 1
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_efgtoa
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text18
  5500  003E26                     __ptext18:
  5501                           	callstack 0
  5502  003E26                     ___flneg:
  5503                           	callstack 26
  5504  003E26  5001               	movf	___flneg@f1^0,w,c
  5505  003E28  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5506  003E2A  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5507  003E2C  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5508  003E2E  B4D8               	btfsc	status,2,c
  5509  003E30  EF1C  F01F         	goto	u3681
  5510  003E34  EF1E  F01F         	goto	u3680
  5511  003E38                     u3681:
  5512  003E38  EF26  F01F         	goto	l3560
  5513  003E3C                     u3680:
  5514  003E3C  0E00               	movlw	0
  5515  003E3E  1A01               	xorwf	___flneg@f1^0,f,c
  5516  003E40  0E00               	movlw	0
  5517  003E42  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5518  003E44  0E00               	movlw	0
  5519  003E46  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5520  003E48  0E80               	movlw	128
  5521  003E4A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5522  003E4C                     l3560:
  5523  003E4C  C001  F001         	movff	___flneg@f1,?___flneg
  5524  003E50  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5525  003E54  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5526  003E58  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5527  003E5C  0012               	return		;funcret
  5528  003E5E                     __end_of___flneg:
  5529                           	callstack 0
  5530                           
  5531 ;; *************** function ___flmul *****************
  5532 ;; Defined at:
  5533 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  b               4    0[COMRAM] long 
  5536 ;;  a               4    4[COMRAM] long 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  prod            4   19[COMRAM] struct .
  5539 ;;  grs             4   13[COMRAM] unsigned long 
  5540 ;;  temp            2   23[COMRAM] struct .
  5541 ;;  bexp            1   18[COMRAM] unsigned char 
  5542 ;;  aexp            1   17[COMRAM] unsigned char 
  5543 ;;  sign            1   12[COMRAM] unsigned char 
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  4    0[COMRAM] unsigned char 
  5546 ;; Registers used:
  5547 ;;		wreg, status,2, status,0, prodl, prodh
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5553 ;;      Params:         8       0       0       0       0       0       0       0       0
  5554 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5555 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5556 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5557 ;;Total ram usage:       25 bytes
  5558 ;; Hardware stack levels used: 1
  5559 ;; This function calls:
  5560 ;;		Nothing
  5561 ;; This function is called by:
  5562 ;;		_efgtoa
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566                           	psect	text19
  5567  001E90                     __ptext19:
  5568                           	callstack 0
  5569  001E90                     ___flmul:
  5570                           	callstack 26
  5571  001E90  5004               	movf	(___flmul@b+3)^0,w,c
  5572  001E92  0B80               	andlw	128
  5573  001E94  6E0D               	movwf	___flmul@sign^0,c
  5574  001E96  5004               	movf	(___flmul@b+3)^0,w,c
  5575  001E98  2404               	addwf	(___flmul@b+3)^0,w,c
  5576  001E9A  6E13               	movwf	___flmul@bexp^0,c
  5577  001E9C  AE03               	btfss	(___flmul@b+2)^0,7,c
  5578  001E9E  EF53  F00F         	goto	u3291
  5579  001EA2  EF55  F00F         	goto	u3290
  5580  001EA6                     u3291:
  5581  001EA6  EF56  F00F         	goto	l3308
  5582  001EAA                     u3290:
  5583  001EAA  8013               	bsf	___flmul@bexp^0,0,c
  5584  001EAC                     l3308:
  5585  001EAC  5013               	movf	___flmul@bexp^0,w,c
  5586  001EAE  B4D8               	btfsc	status,2,c
  5587  001EB0  EF5C  F00F         	goto	u3301
  5588  001EB4  EF5E  F00F         	goto	u3300
  5589  001EB8                     u3301:
  5590  001EB8  EF71  F00F         	goto	l3316
  5591  001EBC                     u3300:
  5592  001EBC  2813               	incf	___flmul@bexp^0,w,c
  5593  001EBE  A4D8               	btfss	status,2,c
  5594  001EC0  EF64  F00F         	goto	u3311
  5595  001EC4  EF66  F00F         	goto	u3310
  5596  001EC8                     u3311:
  5597  001EC8  EF6E  F00F         	goto	l3314
  5598  001ECC                     u3310:
  5599  001ECC  0E00               	movlw	0
  5600  001ECE  6E01               	movwf	___flmul@b^0,c
  5601  001ED0  0E00               	movlw	0
  5602  001ED2  6E02               	movwf	(___flmul@b+1)^0,c
  5603  001ED4  0E00               	movlw	0
  5604  001ED6  6E03               	movwf	(___flmul@b+2)^0,c
  5605  001ED8  0E00               	movlw	0
  5606  001EDA  6E04               	movwf	(___flmul@b+3)^0,c
  5607  001EDC                     l3314:
  5608  001EDC  8E03               	bsf	(___flmul@b+2)^0,7,c
  5609  001EDE  EF79  F00F         	goto	l3318
  5610  001EE2                     l3316:
  5611  001EE2  0E00               	movlw	0
  5612  001EE4  6E01               	movwf	___flmul@b^0,c
  5613  001EE6  0E00               	movlw	0
  5614  001EE8  6E02               	movwf	(___flmul@b+1)^0,c
  5615  001EEA  0E00               	movlw	0
  5616  001EEC  6E03               	movwf	(___flmul@b+2)^0,c
  5617  001EEE  0E00               	movlw	0
  5618  001EF0  6E04               	movwf	(___flmul@b+3)^0,c
  5619  001EF2                     l3318:
  5620  001EF2  5008               	movf	(___flmul@a+3)^0,w,c
  5621  001EF4  0B80               	andlw	128
  5622  001EF6  1A0D               	xorwf	___flmul@sign^0,f,c
  5623  001EF8  5008               	movf	(___flmul@a+3)^0,w,c
  5624  001EFA  2408               	addwf	(___flmul@a+3)^0,w,c
  5625  001EFC  6E12               	movwf	___flmul@aexp^0,c
  5626  001EFE  AE07               	btfss	(___flmul@a+2)^0,7,c
  5627  001F00  EF84  F00F         	goto	u3321
  5628  001F04  EF86  F00F         	goto	u3320
  5629  001F08                     u3321:
  5630  001F08  EF87  F00F         	goto	l3326
  5631  001F0C                     u3320:
  5632  001F0C  8012               	bsf	___flmul@aexp^0,0,c
  5633  001F0E                     l3326:
  5634  001F0E  5012               	movf	___flmul@aexp^0,w,c
  5635  001F10  B4D8               	btfsc	status,2,c
  5636  001F12  EF8D  F00F         	goto	u3331
  5637  001F16  EF8F  F00F         	goto	u3330
  5638  001F1A                     u3331:
  5639  001F1A  EFA2  F00F         	goto	l3334
  5640  001F1E                     u3330:
  5641  001F1E  2812               	incf	___flmul@aexp^0,w,c
  5642  001F20  A4D8               	btfss	status,2,c
  5643  001F22  EF95  F00F         	goto	u3341
  5644  001F26  EF97  F00F         	goto	u3340
  5645  001F2A                     u3341:
  5646  001F2A  EF9F  F00F         	goto	l3332
  5647  001F2E                     u3340:
  5648  001F2E  0E00               	movlw	0
  5649  001F30  6E05               	movwf	___flmul@a^0,c
  5650  001F32  0E00               	movlw	0
  5651  001F34  6E06               	movwf	(___flmul@a+1)^0,c
  5652  001F36  0E00               	movlw	0
  5653  001F38  6E07               	movwf	(___flmul@a+2)^0,c
  5654  001F3A  0E00               	movlw	0
  5655  001F3C  6E08               	movwf	(___flmul@a+3)^0,c
  5656  001F3E                     l3332:
  5657  001F3E  8E07               	bsf	(___flmul@a+2)^0,7,c
  5658  001F40  EFAA  F00F         	goto	l846
  5659  001F44                     l3334:
  5660  001F44  0E00               	movlw	0
  5661  001F46  6E05               	movwf	___flmul@a^0,c
  5662  001F48  0E00               	movlw	0
  5663  001F4A  6E06               	movwf	(___flmul@a+1)^0,c
  5664  001F4C  0E00               	movlw	0
  5665  001F4E  6E07               	movwf	(___flmul@a+2)^0,c
  5666  001F50  0E00               	movlw	0
  5667  001F52  6E08               	movwf	(___flmul@a+3)^0,c
  5668  001F54                     l846:
  5669  001F54  5012               	movf	___flmul@aexp^0,w,c
  5670  001F56  B4D8               	btfsc	status,2,c
  5671  001F58  EFB0  F00F         	goto	u3351
  5672  001F5C  EFB2  F00F         	goto	u3350
  5673  001F60                     u3351:
  5674  001F60  EFBA  F00F         	goto	l3338
  5675  001F64                     u3350:
  5676  001F64  5013               	movf	___flmul@bexp^0,w,c
  5677  001F66  A4D8               	btfss	status,2,c
  5678  001F68  EFB8  F00F         	goto	u3361
  5679  001F6C  EFBA  F00F         	goto	u3360
  5680  001F70                     u3361:
  5681  001F70  EFC4  F00F         	goto	l3342
  5682  001F74                     u3360:
  5683  001F74                     l3338:
  5684  001F74  0E00               	movlw	0
  5685  001F76  6E01               	movwf	?___flmul^0,c
  5686  001F78  0E00               	movlw	0
  5687  001F7A  6E02               	movwf	(?___flmul+1)^0,c
  5688  001F7C  0E00               	movlw	0
  5689  001F7E  6E03               	movwf	(?___flmul+2)^0,c
  5690  001F80  0E00               	movlw	0
  5691  001F82  6E04               	movwf	(?___flmul+3)^0,c
  5692  001F84  EF5C  F011         	goto	l850
  5693  001F88                     l3342:
  5694  001F88  5007               	movf	(___flmul@a+2)^0,w,c
  5695  001F8A  0201               	mulwf	___flmul@b^0,c
  5696  001F8C  CFF3 F018          	movff	prodl,___flmul@temp
  5697  001F90  CFF4 F019          	movff	prodh,___flmul@temp+1
  5698  001F94  5018               	movf	___flmul@temp^0,w,c
  5699  001F96  6E0E               	movwf	___flmul@grs^0,c
  5700  001F98  6A0F               	clrf	(___flmul@grs+1)^0,c
  5701  001F9A  6A10               	clrf	(___flmul@grs+2)^0,c
  5702  001F9C  6A11               	clrf	(___flmul@grs+3)^0,c
  5703  001F9E  5019               	movf	(___flmul@temp+1)^0,w,c
  5704  001FA0  6E14               	movwf	___flmul@prod^0,c
  5705  001FA2  6A15               	clrf	(___flmul@prod+1)^0,c
  5706  001FA4  6A16               	clrf	(___flmul@prod+2)^0,c
  5707  001FA6  6A17               	clrf	(___flmul@prod+3)^0,c
  5708  001FA8  5006               	movf	(___flmul@a+1)^0,w,c
  5709  001FAA  0202               	mulwf	(___flmul@b+1)^0,c
  5710  001FAC  CFF3 F018          	movff	prodl,___flmul@temp
  5711  001FB0  CFF4 F019          	movff	prodh,___flmul@temp+1
  5712  001FB4  5018               	movf	___flmul@temp^0,w,c
  5713  001FB6  260E               	addwf	___flmul@grs^0,f,c
  5714  001FB8  0E00               	movlw	0
  5715  001FBA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5716  001FBC  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5717  001FBE  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5718  001FC0  5019               	movf	(___flmul@temp+1)^0,w,c
  5719  001FC2  2614               	addwf	___flmul@prod^0,f,c
  5720  001FC4  0E00               	movlw	0
  5721  001FC6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5722  001FC8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5723  001FCA  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5724  001FCC  5005               	movf	___flmul@a^0,w,c
  5725  001FCE  0203               	mulwf	(___flmul@b+2)^0,c
  5726  001FD0  CFF3 F018          	movff	prodl,___flmul@temp
  5727  001FD4  CFF4 F019          	movff	prodh,___flmul@temp+1
  5728  001FD8  5018               	movf	___flmul@temp^0,w,c
  5729  001FDA  260E               	addwf	___flmul@grs^0,f,c
  5730  001FDC  0E00               	movlw	0
  5731  001FDE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5732  001FE0  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5733  001FE2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5734  001FE4  5019               	movf	(___flmul@temp+1)^0,w,c
  5735  001FE6  2614               	addwf	___flmul@prod^0,f,c
  5736  001FE8  0E00               	movlw	0
  5737  001FEA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5738  001FEC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5739  001FEE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5740  001FF0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5741  001FF4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5742  001FF8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5743  001FFC  6A0E               	clrf	___flmul@grs^0,c
  5744  001FFE  5005               	movf	___flmul@a^0,w,c
  5745  002000  0202               	mulwf	(___flmul@b+1)^0,c
  5746  002002  CFF3 F018          	movff	prodl,___flmul@temp
  5747  002006  CFF4 F019          	movff	prodh,___flmul@temp+1
  5748  00200A  5018               	movf	___flmul@temp^0,w,c
  5749  00200C  260E               	addwf	___flmul@grs^0,f,c
  5750  00200E  5019               	movf	(___flmul@temp+1)^0,w,c
  5751  002010  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5752  002012  0E00               	movlw	0
  5753  002014  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5754  002016  0E00               	movlw	0
  5755  002018  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5756  00201A  5006               	movf	(___flmul@a+1)^0,w,c
  5757  00201C  0201               	mulwf	___flmul@b^0,c
  5758  00201E  CFF3 F018          	movff	prodl,___flmul@temp
  5759  002022  CFF4 F019          	movff	prodh,___flmul@temp+1
  5760  002026  5018               	movf	___flmul@temp^0,w,c
  5761  002028  260E               	addwf	___flmul@grs^0,f,c
  5762  00202A  5019               	movf	(___flmul@temp+1)^0,w,c
  5763  00202C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5764  00202E  0E00               	movlw	0
  5765  002030  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5766  002032  0E00               	movlw	0
  5767  002034  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5768  002036  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5769  00203A  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5770  00203E  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5771  002042  6A0E               	clrf	___flmul@grs^0,c
  5772  002044  5005               	movf	___flmul@a^0,w,c
  5773  002046  0201               	mulwf	___flmul@b^0,c
  5774  002048  CFF3 F018          	movff	prodl,___flmul@temp
  5775  00204C  CFF4 F019          	movff	prodh,___flmul@temp+1
  5776  002050  5018               	movf	___flmul@temp^0,w,c
  5777  002052  260E               	addwf	___flmul@grs^0,f,c
  5778  002054  5019               	movf	(___flmul@temp+1)^0,w,c
  5779  002056  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5780  002058  0E00               	movlw	0
  5781  00205A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5782  00205C  0E00               	movlw	0
  5783  00205E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5784  002060  5007               	movf	(___flmul@a+2)^0,w,c
  5785  002062  0202               	mulwf	(___flmul@b+1)^0,c
  5786  002064  CFF3 F018          	movff	prodl,___flmul@temp
  5787  002068  CFF4 F019          	movff	prodh,___flmul@temp+1
  5788  00206C  5018               	movf	___flmul@temp^0,w,c
  5789  00206E  2614               	addwf	___flmul@prod^0,f,c
  5790  002070  5019               	movf	(___flmul@temp+1)^0,w,c
  5791  002072  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5792  002074  0E00               	movlw	0
  5793  002076  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5794  002078  0E00               	movlw	0
  5795  00207A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5796  00207C  5006               	movf	(___flmul@a+1)^0,w,c
  5797  00207E  0203               	mulwf	(___flmul@b+2)^0,c
  5798  002080  CFF3 F018          	movff	prodl,___flmul@temp
  5799  002084  CFF4 F019          	movff	prodh,___flmul@temp+1
  5800  002088  5018               	movf	___flmul@temp^0,w,c
  5801  00208A  2614               	addwf	___flmul@prod^0,f,c
  5802  00208C  5019               	movf	(___flmul@temp+1)^0,w,c
  5803  00208E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5804  002090  0E00               	movlw	0
  5805  002092  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5806  002094  0E00               	movlw	0
  5807  002096  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5808  002098  5007               	movf	(___flmul@a+2)^0,w,c
  5809  00209A  0203               	mulwf	(___flmul@b+2)^0,c
  5810  00209C  CFF3 F018          	movff	prodl,___flmul@temp
  5811  0020A0  CFF4 F019          	movff	prodh,___flmul@temp+1
  5812  0020A4  5018               	movf	___flmul@temp^0,w,c
  5813  0020A6  6E09               	movwf	??___flmul^0,c
  5814  0020A8  5019               	movf	(___flmul@temp+1)^0,w,c
  5815  0020AA  6E0A               	movwf	(??___flmul+1)^0,c
  5816  0020AC  6A0B               	clrf	(??___flmul+2)^0,c
  5817  0020AE  6A0C               	clrf	(??___flmul+3)^0,c
  5818  0020B0  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5819  0020B4  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5820  0020B8  C009  F00A         	movff	??___flmul,??___flmul+1
  5821  0020BC  6A09               	clrf	??___flmul^0,c
  5822  0020BE  5009               	movf	??___flmul^0,w,c
  5823  0020C0  2614               	addwf	___flmul@prod^0,f,c
  5824  0020C2  500A               	movf	(??___flmul+1)^0,w,c
  5825  0020C4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5826  0020C6  500B               	movf	(??___flmul+2)^0,w,c
  5827  0020C8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5828  0020CA  500C               	movf	(??___flmul+3)^0,w,c
  5829  0020CC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5830  0020CE  C00E  F009         	movff	___flmul@grs,??___flmul
  5831  0020D2  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5832  0020D6  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5833  0020DA  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5834  0020DE  0E19               	movlw	25
  5835  0020E0  EF77  F010         	goto	u3370
  5836  0020E4                     u3375:
  5837  0020E4  90D8               	bcf	status,0,c
  5838  0020E6  320C               	rrcf	(??___flmul+3)^0,f,c
  5839  0020E8  320B               	rrcf	(??___flmul+2)^0,f,c
  5840  0020EA  320A               	rrcf	(??___flmul+1)^0,f,c
  5841  0020EC  3209               	rrcf	??___flmul^0,f,c
  5842  0020EE                     u3370:
  5843  0020EE  2EE8               	decfsz	wreg,f,c
  5844  0020F0  EF72  F010         	goto	u3375
  5845  0020F4  5009               	movf	??___flmul^0,w,c
  5846  0020F6  2614               	addwf	___flmul@prod^0,f,c
  5847  0020F8  500A               	movf	(??___flmul+1)^0,w,c
  5848  0020FA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5849  0020FC  500B               	movf	(??___flmul+2)^0,w,c
  5850  0020FE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5851  002100  500C               	movf	(??___flmul+3)^0,w,c
  5852  002102  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5853  002104  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5854  002108  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5855  00210C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5856  002110  6A0E               	clrf	___flmul@grs^0,c
  5857  002112  5012               	movf	___flmul@aexp^0,w,c
  5858  002114  C013  F009         	movff	___flmul@bexp,??___flmul
  5859  002118  6A0A               	clrf	(??___flmul+1)^0,c
  5860  00211A  2609               	addwf	??___flmul^0,f,c
  5861  00211C  0E00               	movlw	0
  5862  00211E  220A               	addwfc	(??___flmul+1)^0,f,c
  5863  002120  0E82               	movlw	130
  5864  002122  2409               	addwf	??___flmul^0,w,c
  5865  002124  6E18               	movwf	___flmul@temp^0,c
  5866  002126  0EFF               	movlw	255
  5867  002128  200A               	addwfc	(??___flmul+1)^0,w,c
  5868  00212A  6E19               	movwf	(___flmul@temp+1)^0,c
  5869  00212C  EFAD  F010         	goto	l3390
  5870  002130                     l3384:
  5871  002130  90D8               	bcf	status,0,c
  5872  002132  3614               	rlcf	___flmul@prod^0,f,c
  5873  002134  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5874  002136  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5875  002138  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5876  00213A  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5877  00213C  EFA2  F010         	goto	u3381
  5878  002140  EFA4  F010         	goto	u3380
  5879  002144                     u3381:
  5880  002144  EFA5  F010         	goto	l853
  5881  002148                     u3380:
  5882  002148  8014               	bsf	___flmul@prod^0,0,c
  5883  00214A                     l853:
  5884  00214A  90D8               	bcf	status,0,c
  5885  00214C  360E               	rlcf	___flmul@grs^0,f,c
  5886  00214E  360F               	rlcf	(___flmul@grs+1)^0,f,c
  5887  002150  3610               	rlcf	(___flmul@grs+2)^0,f,c
  5888  002152  3611               	rlcf	(___flmul@grs+3)^0,f,c
  5889  002154  0618               	decf	___flmul@temp^0,f,c
  5890  002156  A0D8               	btfss	status,0,c
  5891  002158  0619               	decf	(___flmul@temp+1)^0,f,c
  5892  00215A                     l3390:
  5893  00215A  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5894  00215C  EFB2  F010         	goto	u3391
  5895  002160  EFB4  F010         	goto	u3390
  5896  002164                     u3391:
  5897  002164  EF98  F010         	goto	l3384
  5898  002168                     u3390:
  5899  002168  0E00               	movlw	0
  5900  00216A  6E12               	movwf	___flmul@aexp^0,c
  5901  00216C  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5902  00216E  EFBB  F010         	goto	u3401
  5903  002172  EFBD  F010         	goto	u3400
  5904  002176                     u3401:
  5905  002176  EFE1  F010         	goto	l855
  5906  00217A                     u3400:
  5907  00217A  0EFF               	movlw	255
  5908  00217C  140E               	andwf	___flmul@grs^0,w,c
  5909  00217E  6E09               	movwf	??___flmul^0,c
  5910  002180  0EFF               	movlw	255
  5911  002182  140F               	andwf	(___flmul@grs+1)^0,w,c
  5912  002184  6E0A               	movwf	(??___flmul+1)^0,c
  5913  002186  0EFF               	movlw	255
  5914  002188  1410               	andwf	(___flmul@grs+2)^0,w,c
  5915  00218A  6E0B               	movwf	(??___flmul+2)^0,c
  5916  00218C  0E7F               	movlw	127
  5917  00218E  1411               	andwf	(___flmul@grs+3)^0,w,c
  5918  002190  6E0C               	movwf	(??___flmul+3)^0,c
  5919  002192  5009               	movf	??___flmul^0,w,c
  5920  002194  100A               	iorwf	(??___flmul+1)^0,w,c
  5921  002196  100B               	iorwf	(??___flmul+2)^0,w,c
  5922  002198  100C               	iorwf	(??___flmul+3)^0,w,c
  5923  00219A  B4D8               	btfsc	status,2,c
  5924  00219C  EFD2  F010         	goto	u3411
  5925  0021A0  EFD4  F010         	goto	u3410
  5926  0021A4                     u3411:
  5927  0021A4  EFD8  F010         	goto	l856
  5928  0021A8                     u3410:
  5929  0021A8                     l3398:
  5930  0021A8  0E01               	movlw	1
  5931  0021AA  6E12               	movwf	___flmul@aexp^0,c
  5932  0021AC  EFE1  F010         	goto	l855
  5933  0021B0                     l856:
  5934  0021B0  A014               	btfss	___flmul@prod^0,0,c
  5935  0021B2  EFDD  F010         	goto	u3421
  5936  0021B6  EFDF  F010         	goto	u3420
  5937  0021BA                     u3421:
  5938  0021BA  EFE1  F010         	goto	l855
  5939  0021BE                     u3420:
  5940  0021BE  EFD4  F010         	goto	l3398
  5941  0021C2                     l855:
  5942  0021C2  5012               	movf	___flmul@aexp^0,w,c
  5943  0021C4  B4D8               	btfsc	status,2,c
  5944  0021C6  EFE7  F010         	goto	u3431
  5945  0021CA  EFE9  F010         	goto	u3430
  5946  0021CE                     u3431:
  5947  0021CE  EF0D  F011         	goto	l3410
  5948  0021D2                     u3430:
  5949  0021D2  0E01               	movlw	1
  5950  0021D4  2614               	addwf	___flmul@prod^0,f,c
  5951  0021D6  0E00               	movlw	0
  5952  0021D8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5953  0021DA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5954  0021DC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5955  0021DE  A017               	btfss	(___flmul@prod+3)^0,0,c
  5956  0021E0  EFF4  F010         	goto	u3441
  5957  0021E4  EFF6  F010         	goto	u3440
  5958  0021E8                     u3441:
  5959  0021E8  EF0D  F011         	goto	l3410
  5960  0021EC                     u3440:
  5961  0021EC  C014  F009         	movff	___flmul@prod,??___flmul
  5962  0021F0  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  5963  0021F4  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  5964  0021F8  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  5965  0021FC  340C               	rlcf	(??___flmul+3)^0,w,c
  5966  0021FE  320C               	rrcf	(??___flmul+3)^0,f,c
  5967  002200  320B               	rrcf	(??___flmul+2)^0,f,c
  5968  002202  320A               	rrcf	(??___flmul+1)^0,f,c
  5969  002204  3209               	rrcf	??___flmul^0,f,c
  5970  002206  C009  F014         	movff	??___flmul,___flmul@prod
  5971  00220A  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  5972  00220E  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  5973  002212  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  5974  002216  4A18               	infsnz	___flmul@temp^0,f,c
  5975  002218  2A19               	incf	(___flmul@temp+1)^0,f,c
  5976  00221A                     l3410:
  5977  00221A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5978  00221C  EF18  F011         	goto	u3451
  5979  002220  5019               	movf	(___flmul@temp+1)^0,w,c
  5980  002222  E108               	bnz	u3450
  5981  002224  2818               	incf	___flmul@temp^0,w,c
  5982  002226  A0D8               	btfss	status,0,c
  5983  002228  EF18  F011         	goto	u3451
  5984  00222C  EF1A  F011         	goto	u3450
  5985  002230                     u3451:
  5986  002230  EF24  F011         	goto	l3414
  5987  002234                     u3450:
  5988  002234  0E00               	movlw	0
  5989  002236  6E14               	movwf	___flmul@prod^0,c
  5990  002238  0E00               	movlw	0
  5991  00223A  6E15               	movwf	(___flmul@prod+1)^0,c
  5992  00223C  0E80               	movlw	128
  5993  00223E  6E16               	movwf	(___flmul@prod+2)^0,c
  5994  002240  0E7F               	movlw	127
  5995  002242  6E17               	movwf	(___flmul@prod+3)^0,c
  5996  002244  EF52  F011         	goto	l3426
  5997  002248                     l3414:
  5998  002248  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5999  00224A  EF31  F011         	goto	u3460
  6000  00224E  5019               	movf	(___flmul@temp+1)^0,w,c
  6001  002250  E106               	bnz	u3461
  6002  002252  0418               	decf	___flmul@temp^0,w,c
  6003  002254  B0D8               	btfsc	status,0,c
  6004  002256  EF2F  F011         	goto	u3461
  6005  00225A  EF31  F011         	goto	u3460
  6006  00225E                     u3461:
  6007  00225E  EF3D  F011         	goto	l863
  6008  002262                     u3460:
  6009  002262  0E00               	movlw	0
  6010  002264  6E14               	movwf	___flmul@prod^0,c
  6011  002266  0E00               	movlw	0
  6012  002268  6E15               	movwf	(___flmul@prod+1)^0,c
  6013  00226A  0E00               	movlw	0
  6014  00226C  6E16               	movwf	(___flmul@prod+2)^0,c
  6015  00226E  0E00               	movlw	0
  6016  002270  6E17               	movwf	(___flmul@prod+3)^0,c
  6017  002272  0E00               	movlw	0
  6018  002274  6E0D               	movwf	___flmul@sign^0,c
  6019  002276  EF52  F011         	goto	l3426
  6020  00227A                     l863:
  6021  00227A  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6022  00227E  0EFF               	movlw	255
  6023  002280  1614               	andwf	___flmul@prod^0,f,c
  6024  002282  0EFF               	movlw	255
  6025  002284  1615               	andwf	(___flmul@prod+1)^0,f,c
  6026  002286  0E7F               	movlw	127
  6027  002288  1616               	andwf	(___flmul@prod+2)^0,f,c
  6028  00228A  0E00               	movlw	0
  6029  00228C  1617               	andwf	(___flmul@prod+3)^0,f,c
  6030  00228E  A013               	btfss	___flmul@bexp^0,0,c
  6031  002290  EF4C  F011         	goto	u3471
  6032  002294  EF4E  F011         	goto	u3470
  6033  002298                     u3471:
  6034  002298  EF4F  F011         	goto	l3424
  6035  00229C                     u3470:
  6036  00229C  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6037  00229E                     l3424:
  6038  00229E  90D8               	bcf	status,0,c
  6039  0022A0  3013               	rrcf	___flmul@bexp^0,w,c
  6040  0022A2  6E17               	movwf	(___flmul@prod+3)^0,c
  6041  0022A4                     l3426:
  6042  0022A4  500D               	movf	___flmul@sign^0,w,c
  6043  0022A6  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6044  0022A8  C014  F001         	movff	___flmul@prod,?___flmul
  6045  0022AC  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6046  0022B0  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6047  0022B4  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6048  0022B8                     l850:
  6049  0022B8  0012               	return		;funcret
  6050  0022BA                     __end_of___flmul:
  6051                           	callstack 0
  6052                           
  6053 ;; *************** function ___flge *****************
  6054 ;; Defined at:
  6055 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  ff1             4   25[COMRAM] unsigned char 
  6058 ;;  ff2             4   29[COMRAM] unsigned char 
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;		None
  6061 ;; Return value:  Size  Location     Type
  6062 ;;		None               void
  6063 ;; Registers used:
  6064 ;;		wreg, status,2, status,0
  6065 ;; Tracked objects:
  6066 ;;		On entry : 0/0
  6067 ;;		On exit  : 0/0
  6068 ;;		Unchanged: 0/0
  6069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6070 ;;      Params:         8       0       0       0       0       0       0       0       0
  6071 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6072 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6073 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6074 ;;Total ram usage:       12 bytes
  6075 ;; Hardware stack levels used: 1
  6076 ;; This function calls:
  6077 ;;		Nothing
  6078 ;; This function is called by:
  6079 ;;		_efgtoa
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           	psect	text20
  6084  002F18                     __ptext20:
  6085                           	callstack 0
  6086  002F18                     ___flge:
  6087                           	callstack 26
  6088  002F18  0E00               	movlw	0
  6089  002F1A  141A               	andwf	___flge@ff1^0,w,c
  6090  002F1C  6E22               	movwf	??___flge^0,c
  6091  002F1E  0E00               	movlw	0
  6092  002F20  141B               	andwf	(___flge@ff1+1)^0,w,c
  6093  002F22  6E23               	movwf	(??___flge+1)^0,c
  6094  002F24  0E80               	movlw	128
  6095  002F26  141C               	andwf	(___flge@ff1+2)^0,w,c
  6096  002F28  6E24               	movwf	(??___flge+2)^0,c
  6097  002F2A  0E7F               	movlw	127
  6098  002F2C  141D               	andwf	(___flge@ff1+3)^0,w,c
  6099  002F2E  6E25               	movwf	(??___flge+3)^0,c
  6100  002F30  5022               	movf	??___flge^0,w,c
  6101  002F32  1023               	iorwf	(??___flge+1)^0,w,c
  6102  002F34  1024               	iorwf	(??___flge+2)^0,w,c
  6103  002F36  1025               	iorwf	(??___flge+3)^0,w,c
  6104  002F38  A4D8               	btfss	status,2,c
  6105  002F3A  EFA1  F017         	goto	u3631
  6106  002F3E  EFA3  F017         	goto	u3630
  6107  002F42                     u3631:
  6108  002F42  EFAB  F017         	goto	l3538
  6109  002F46                     u3630:
  6110  002F46  0E00               	movlw	0
  6111  002F48  6E1A               	movwf	___flge@ff1^0,c
  6112  002F4A  0E00               	movlw	0
  6113  002F4C  6E1B               	movwf	(___flge@ff1+1)^0,c
  6114  002F4E  0E00               	movlw	0
  6115  002F50  6E1C               	movwf	(___flge@ff1+2)^0,c
  6116  002F52  0E00               	movlw	0
  6117  002F54  6E1D               	movwf	(___flge@ff1+3)^0,c
  6118  002F56                     l3538:
  6119  002F56  0E00               	movlw	0
  6120  002F58  141E               	andwf	___flge@ff2^0,w,c
  6121  002F5A  6E22               	movwf	??___flge^0,c
  6122  002F5C  0E00               	movlw	0
  6123  002F5E  141F               	andwf	(___flge@ff2+1)^0,w,c
  6124  002F60  6E23               	movwf	(??___flge+1)^0,c
  6125  002F62  0E80               	movlw	128
  6126  002F64  1420               	andwf	(___flge@ff2+2)^0,w,c
  6127  002F66  6E24               	movwf	(??___flge+2)^0,c
  6128  002F68  0E7F               	movlw	127
  6129  002F6A  1421               	andwf	(___flge@ff2+3)^0,w,c
  6130  002F6C  6E25               	movwf	(??___flge+3)^0,c
  6131  002F6E  5022               	movf	??___flge^0,w,c
  6132  002F70  1023               	iorwf	(??___flge+1)^0,w,c
  6133  002F72  1024               	iorwf	(??___flge+2)^0,w,c
  6134  002F74  1025               	iorwf	(??___flge+3)^0,w,c
  6135  002F76  A4D8               	btfss	status,2,c
  6136  002F78  EFC0  F017         	goto	u3641
  6137  002F7C  EFC2  F017         	goto	u3640
  6138  002F80                     u3641:
  6139  002F80  EFCA  F017         	goto	l3542
  6140  002F84                     u3640:
  6141  002F84  0E00               	movlw	0
  6142  002F86  6E1E               	movwf	___flge@ff2^0,c
  6143  002F88  0E00               	movlw	0
  6144  002F8A  6E1F               	movwf	(___flge@ff2+1)^0,c
  6145  002F8C  0E00               	movlw	0
  6146  002F8E  6E20               	movwf	(___flge@ff2+2)^0,c
  6147  002F90  0E00               	movlw	0
  6148  002F92  6E21               	movwf	(___flge@ff2+3)^0,c
  6149  002F94                     l3542:
  6150  002F94  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6151  002F96  EFCF  F017         	goto	u3651
  6152  002F9A  EFD1  F017         	goto	u3650
  6153  002F9E                     u3651:
  6154  002F9E  EFDA  F017         	goto	l3546
  6155  002FA2                     u3650:
  6156  002FA2  6C1A               	negf	___flge@ff1^0,c
  6157  002FA4  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6158  002FA6  B0D8               	btfsc	status,0,c
  6159  002FA8  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6160  002FAA  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6161  002FAC  B0D8               	btfsc	status,0,c
  6162  002FAE  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6163  002FB0  0E80               	movlw	128
  6164  002FB2  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6165  002FB4                     l3546:
  6166  002FB4  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6167  002FB6  EFDF  F017         	goto	u3661
  6168  002FBA  EFE1  F017         	goto	u3660
  6169  002FBE                     u3661:
  6170  002FBE  EFEA  F017         	goto	l497
  6171  002FC2                     u3660:
  6172  002FC2  6C1E               	negf	___flge@ff2^0,c
  6173  002FC4  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6174  002FC6  B0D8               	btfsc	status,0,c
  6175  002FC8  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6176  002FCA  1E20               	comf	(___flge@ff2+2)^0,f,c
  6177  002FCC  B0D8               	btfsc	status,0,c
  6178  002FCE  2A20               	incf	(___flge@ff2+2)^0,f,c
  6179  002FD0  0E80               	movlw	128
  6180  002FD2  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6181  002FD4                     l497:
  6182  002FD4  0E00               	movlw	0
  6183  002FD6  1A1A               	xorwf	___flge@ff1^0,f,c
  6184  002FD8  0E00               	movlw	0
  6185  002FDA  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6186  002FDC  0E00               	movlw	0
  6187  002FDE  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6188  002FE0  0E80               	movlw	128
  6189  002FE2  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6190  002FE4  0E00               	movlw	0
  6191  002FE6  1A1E               	xorwf	___flge@ff2^0,f,c
  6192  002FE8  0E00               	movlw	0
  6193  002FEA  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6194  002FEC  0E00               	movlw	0
  6195  002FEE  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6196  002FF0  0E80               	movlw	128
  6197  002FF2  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6198  002FF4  501E               	movf	___flge@ff2^0,w,c
  6199  002FF6  5C1A               	subwf	___flge@ff1^0,w,c
  6200  002FF8  501F               	movf	(___flge@ff2+1)^0,w,c
  6201  002FFA  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6202  002FFC  5020               	movf	(___flge@ff2+2)^0,w,c
  6203  002FFE  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6204  003000  5021               	movf	(___flge@ff2+3)^0,w,c
  6205  003002  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6206  003004  B0D8               	btfsc	status,0,c
  6207  003006  EF07  F018         	goto	u3671
  6208  00300A  EF09  F018         	goto	u3670
  6209  00300E                     u3671:
  6210  00300E  EF0C  F018         	goto	l3552
  6211  003012                     u3670:
  6212  003012  90D8               	bcf	status,0,c
  6213  003014  EF0D  F018         	goto	l502
  6214  003018                     l3552:
  6215  003018  80D8               	bsf	status,0,c
  6216  00301A                     l502:
  6217  00301A  0012               	return		;funcret
  6218  00301C                     __end_of___flge:
  6219                           	callstack 0
  6220                           
  6221 ;; *************** function ___fleq *****************
  6222 ;; Defined at:
  6223 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  ff1             4    0[COMRAM] unsigned char 
  6226 ;;  ff2             4    4[COMRAM] unsigned char 
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;		None               void
  6231 ;; Registers used:
  6232 ;;		wreg, status,2, status,0
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6238 ;;      Params:         8       0       0       0       0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6240 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6241 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6242 ;;Total ram usage:       12 bytes
  6243 ;; Hardware stack levels used: 1
  6244 ;; This function calls:
  6245 ;;		Nothing
  6246 ;; This function is called by:
  6247 ;;		_efgtoa
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text21
  6252  0035C6                     __ptext21:
  6253                           	callstack 0
  6254  0035C6                     ___fleq:
  6255                           	callstack 26
  6256  0035C6  0E00               	movlw	0
  6257  0035C8  1401               	andwf	___fleq@ff1^0,w,c
  6258  0035CA  6E09               	movwf	??___fleq^0,c
  6259  0035CC  0E00               	movlw	0
  6260  0035CE  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6261  0035D0  6E0A               	movwf	(??___fleq+1)^0,c
  6262  0035D2  0E80               	movlw	128
  6263  0035D4  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6264  0035D6  6E0B               	movwf	(??___fleq+2)^0,c
  6265  0035D8  0E7F               	movlw	127
  6266  0035DA  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6267  0035DC  6E0C               	movwf	(??___fleq+3)^0,c
  6268  0035DE  5009               	movf	??___fleq^0,w,c
  6269  0035E0  100A               	iorwf	(??___fleq+1)^0,w,c
  6270  0035E2  100B               	iorwf	(??___fleq+2)^0,w,c
  6271  0035E4  100C               	iorwf	(??___fleq+3)^0,w,c
  6272  0035E6  A4D8               	btfss	status,2,c
  6273  0035E8  EFF8  F01A         	goto	u3601
  6274  0035EC  EFFA  F01A         	goto	u3600
  6275  0035F0                     u3601:
  6276  0035F0  EF02  F01B         	goto	l3522
  6277  0035F4                     u3600:
  6278  0035F4  0E00               	movlw	0
  6279  0035F6  6E01               	movwf	___fleq@ff1^0,c
  6280  0035F8  0E00               	movlw	0
  6281  0035FA  6E02               	movwf	(___fleq@ff1+1)^0,c
  6282  0035FC  0E00               	movlw	0
  6283  0035FE  6E03               	movwf	(___fleq@ff1+2)^0,c
  6284  003600  0E00               	movlw	0
  6285  003602  6E04               	movwf	(___fleq@ff1+3)^0,c
  6286  003604                     l3522:
  6287  003604  0E00               	movlw	0
  6288  003606  1405               	andwf	___fleq@ff2^0,w,c
  6289  003608  6E09               	movwf	??___fleq^0,c
  6290  00360A  0E00               	movlw	0
  6291  00360C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6292  00360E  6E0A               	movwf	(??___fleq+1)^0,c
  6293  003610  0E80               	movlw	128
  6294  003612  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6295  003614  6E0B               	movwf	(??___fleq+2)^0,c
  6296  003616  0E7F               	movlw	127
  6297  003618  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6298  00361A  6E0C               	movwf	(??___fleq+3)^0,c
  6299  00361C  5009               	movf	??___fleq^0,w,c
  6300  00361E  100A               	iorwf	(??___fleq+1)^0,w,c
  6301  003620  100B               	iorwf	(??___fleq+2)^0,w,c
  6302  003622  100C               	iorwf	(??___fleq+3)^0,w,c
  6303  003624  A4D8               	btfss	status,2,c
  6304  003626  EF17  F01B         	goto	u3611
  6305  00362A  EF19  F01B         	goto	u3610
  6306  00362E                     u3611:
  6307  00362E  EF21  F01B         	goto	l3526
  6308  003632                     u3610:
  6309  003632  0E00               	movlw	0
  6310  003634  6E05               	movwf	___fleq@ff2^0,c
  6311  003636  0E00               	movlw	0
  6312  003638  6E06               	movwf	(___fleq@ff2+1)^0,c
  6313  00363A  0E00               	movlw	0
  6314  00363C  6E07               	movwf	(___fleq@ff2+2)^0,c
  6315  00363E  0E00               	movlw	0
  6316  003640  6E08               	movwf	(___fleq@ff2+3)^0,c
  6317  003642                     l3526:
  6318  003642  5005               	movf	___fleq@ff2^0,w,c
  6319  003644  1801               	xorwf	___fleq@ff1^0,w,c
  6320  003646  E10F               	bnz	u3620
  6321  003648  5006               	movf	(___fleq@ff2+1)^0,w,c
  6322  00364A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6323  00364C  E10C               	bnz	u3620
  6324  00364E  5007               	movf	(___fleq@ff2+2)^0,w,c
  6325  003650  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6326  003652  E109               	bnz	u3620
  6327  003654  5008               	movf	(___fleq@ff2+3)^0,w,c
  6328  003656  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6329  003658  B4D8               	btfsc	status,2,c
  6330  00365A  EF31  F01B         	goto	u3621
  6331  00365E  EF33  F01B         	goto	u3620
  6332  003662                     u3621:
  6333  003662  EF36  F01B         	goto	l3530
  6334  003666                     u3620:
  6335  003666  90D8               	bcf	status,0,c
  6336  003668  EF37  F01B         	goto	l491
  6337  00366C                     l3530:
  6338  00366C  80D8               	bsf	status,0,c
  6339  00366E                     l491:
  6340  00366E  0012               	return		;funcret
  6341  003670                     __end_of___fleq:
  6342                           	callstack 0
  6343                           
  6344 ;; *************** function ___awmod *****************
  6345 ;; Defined at:
  6346 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  dividend        2    0[COMRAM] int 
  6349 ;;  divisor         2    2[COMRAM] int 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  sign            1    5[COMRAM] unsigned char 
  6352 ;;  counter         1    4[COMRAM] unsigned char 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  2    0[COMRAM] int 
  6355 ;; Registers used:
  6356 ;;		wreg, status,2, status,0
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6362 ;;      Params:         4       0       0       0       0       0       0       0       0
  6363 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6365 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6366 ;;Total ram usage:        6 bytes
  6367 ;; Hardware stack levels used: 1
  6368 ;; This function calls:
  6369 ;;		Nothing
  6370 ;; This function is called by:
  6371 ;;		_efgtoa
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text22
  6376  003516                     __ptext22:
  6377                           	callstack 0
  6378  003516                     ___awmod:
  6379                           	callstack 26
  6380  003516  0E00               	movlw	0
  6381  003518  6E06               	movwf	___awmod@sign^0,c
  6382  00351A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6383  00351C  EF94  F01A         	goto	u3540
  6384  003520  EF92  F01A         	goto	u3541
  6385  003524                     u3541:
  6386  003524  EF9A  F01A         	goto	l3490
  6387  003528                     u3540:
  6388  003528  6C01               	negf	___awmod@dividend^0,c
  6389  00352A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6390  00352C  B0D8               	btfsc	status,0,c
  6391  00352E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6392  003530  0E01               	movlw	1
  6393  003532  6E06               	movwf	___awmod@sign^0,c
  6394  003534                     l3490:
  6395  003534  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6396  003536  EFA1  F01A         	goto	u3550
  6397  00353A  EF9F  F01A         	goto	u3551
  6398  00353E                     u3551:
  6399  00353E  EFA5  F01A         	goto	l3494
  6400  003542                     u3550:
  6401  003542  6C03               	negf	___awmod@divisor^0,c
  6402  003544  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6403  003546  B0D8               	btfsc	status,0,c
  6404  003548  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6405  00354A                     l3494:
  6406  00354A  5003               	movf	___awmod@divisor^0,w,c
  6407  00354C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6408  00354E  B4D8               	btfsc	status,2,c
  6409  003550  EFAC  F01A         	goto	u3561
  6410  003554  EFAE  F01A         	goto	u3560
  6411  003558                     u3561:
  6412  003558  EFD2  F01A         	goto	l3510
  6413  00355C                     u3560:
  6414  00355C  0E01               	movlw	1
  6415  00355E  6E05               	movwf	___awmod@counter^0,c
  6416  003560  EFB6  F01A         	goto	l3500
  6417  003564                     l3498:
  6418  003564  90D8               	bcf	status,0,c
  6419  003566  3603               	rlcf	___awmod@divisor^0,f,c
  6420  003568  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6421  00356A  2A05               	incf	___awmod@counter^0,f,c
  6422  00356C                     l3500:
  6423  00356C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6424  00356E  EFBB  F01A         	goto	u3571
  6425  003572  EFBD  F01A         	goto	u3570
  6426  003576                     u3571:
  6427  003576  EFB2  F01A         	goto	l3498
  6428  00357A                     u3570:
  6429  00357A                     l3502:
  6430  00357A  5003               	movf	___awmod@divisor^0,w,c
  6431  00357C  5C01               	subwf	___awmod@dividend^0,w,c
  6432  00357E  5004               	movf	(___awmod@divisor+1)^0,w,c
  6433  003580  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6434  003582  A0D8               	btfss	status,0,c
  6435  003584  EFC6  F01A         	goto	u3581
  6436  003588  EFC8  F01A         	goto	u3580
  6437  00358C                     u3581:
  6438  00358C  EFCC  F01A         	goto	l3506
  6439  003590                     u3580:
  6440  003590  5003               	movf	___awmod@divisor^0,w,c
  6441  003592  5E01               	subwf	___awmod@dividend^0,f,c
  6442  003594  5004               	movf	(___awmod@divisor+1)^0,w,c
  6443  003596  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6444  003598                     l3506:
  6445  003598  90D8               	bcf	status,0,c
  6446  00359A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6447  00359C  3203               	rrcf	___awmod@divisor^0,f,c
  6448  00359E  2E05               	decfsz	___awmod@counter^0,f,c
  6449  0035A0  EFBD  F01A         	goto	l3502
  6450  0035A4                     l3510:
  6451  0035A4  5006               	movf	___awmod@sign^0,w,c
  6452  0035A6  B4D8               	btfsc	status,2,c
  6453  0035A8  EFD8  F01A         	goto	u3591
  6454  0035AC  EFDA  F01A         	goto	u3590
  6455  0035B0                     u3591:
  6456  0035B0  EFDE  F01A         	goto	l3514
  6457  0035B4                     u3590:
  6458  0035B4  6C01               	negf	___awmod@dividend^0,c
  6459  0035B6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6460  0035B8  B0D8               	btfsc	status,0,c
  6461  0035BA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6462  0035BC                     l3514:
  6463  0035BC  C001  F001         	movff	___awmod@dividend,?___awmod
  6464  0035C0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6465  0035C4  0012               	return		;funcret
  6466  0035C6                     __end_of___awmod:
  6467                           	callstack 0
  6468                           
  6469 ;; *************** function ___awdiv *****************
  6470 ;; Defined at:
  6471 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;  dividend        2    0[COMRAM] int 
  6474 ;;  divisor         2    2[COMRAM] int 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  quotient        2    6[COMRAM] int 
  6477 ;;  sign            1    5[COMRAM] unsigned char 
  6478 ;;  counter         1    4[COMRAM] unsigned char 
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  2    0[COMRAM] int 
  6481 ;; Registers used:
  6482 ;;		wreg, status,2, status,0
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6488 ;;      Params:         4       0       0       0       0       0       0       0       0
  6489 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6491 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6492 ;;Total ram usage:        8 bytes
  6493 ;; Hardware stack levels used: 1
  6494 ;; This function calls:
  6495 ;;		Nothing
  6496 ;; This function is called by:
  6497 ;;		_efgtoa
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text23
  6502  003452                     __ptext23:
  6503                           	callstack 0
  6504  003452                     ___awdiv:
  6505                           	callstack 26
  6506  003452  0E00               	movlw	0
  6507  003454  6E06               	movwf	___awdiv@sign^0,c
  6508  003456  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6509  003458  EF32  F01A         	goto	u3480
  6510  00345C  EF30  F01A         	goto	u3481
  6511  003460                     u3481:
  6512  003460  EF38  F01A         	goto	l3446
  6513  003464                     u3480:
  6514  003464  6C03               	negf	___awdiv@divisor^0,c
  6515  003466  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6516  003468  B0D8               	btfsc	status,0,c
  6517  00346A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6518  00346C  0E01               	movlw	1
  6519  00346E  6E06               	movwf	___awdiv@sign^0,c
  6520  003470                     l3446:
  6521  003470  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6522  003472  EF3F  F01A         	goto	u3490
  6523  003476  EF3D  F01A         	goto	u3491
  6524  00347A                     u3491:
  6525  00347A  EF45  F01A         	goto	l3452
  6526  00347E                     u3490:
  6527  00347E  6C01               	negf	___awdiv@dividend^0,c
  6528  003480  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6529  003482  B0D8               	btfsc	status,0,c
  6530  003484  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6531  003486  0E01               	movlw	1
  6532  003488  1A06               	xorwf	___awdiv@sign^0,f,c
  6533  00348A                     l3452:
  6534  00348A  0E00               	movlw	0
  6535  00348C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6536  00348E  0E00               	movlw	0
  6537  003490  6E07               	movwf	___awdiv@quotient^0,c
  6538  003492  5003               	movf	___awdiv@divisor^0,w,c
  6539  003494  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6540  003496  B4D8               	btfsc	status,2,c
  6541  003498  EF50  F01A         	goto	u3501
  6542  00349C  EF52  F01A         	goto	u3500
  6543  0034A0                     u3501:
  6544  0034A0  EF7A  F01A         	goto	l3474
  6545  0034A4                     u3500:
  6546  0034A4  0E01               	movlw	1
  6547  0034A6  6E05               	movwf	___awdiv@counter^0,c
  6548  0034A8  EF5A  F01A         	goto	l3460
  6549  0034AC                     l3458:
  6550  0034AC  90D8               	bcf	status,0,c
  6551  0034AE  3603               	rlcf	___awdiv@divisor^0,f,c
  6552  0034B0  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6553  0034B2  2A05               	incf	___awdiv@counter^0,f,c
  6554  0034B4                     l3460:
  6555  0034B4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6556  0034B6  EF5F  F01A         	goto	u3511
  6557  0034BA  EF61  F01A         	goto	u3510
  6558  0034BE                     u3511:
  6559  0034BE  EF56  F01A         	goto	l3458
  6560  0034C2                     u3510:
  6561  0034C2                     l3462:
  6562  0034C2  90D8               	bcf	status,0,c
  6563  0034C4  3607               	rlcf	___awdiv@quotient^0,f,c
  6564  0034C6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6565  0034C8  5003               	movf	___awdiv@divisor^0,w,c
  6566  0034CA  5C01               	subwf	___awdiv@dividend^0,w,c
  6567  0034CC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6568  0034CE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6569  0034D0  A0D8               	btfss	status,0,c
  6570  0034D2  EF6D  F01A         	goto	u3521
  6571  0034D6  EF6F  F01A         	goto	u3520
  6572  0034DA                     u3521:
  6573  0034DA  EF74  F01A         	goto	l3470
  6574  0034DE                     u3520:
  6575  0034DE  5003               	movf	___awdiv@divisor^0,w,c
  6576  0034E0  5E01               	subwf	___awdiv@dividend^0,f,c
  6577  0034E2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6578  0034E4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6579  0034E6  8007               	bsf	___awdiv@quotient^0,0,c
  6580  0034E8                     l3470:
  6581  0034E8  90D8               	bcf	status,0,c
  6582  0034EA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6583  0034EC  3203               	rrcf	___awdiv@divisor^0,f,c
  6584  0034EE  2E05               	decfsz	___awdiv@counter^0,f,c
  6585  0034F0  EF61  F01A         	goto	l3462
  6586  0034F4                     l3474:
  6587  0034F4  5006               	movf	___awdiv@sign^0,w,c
  6588  0034F6  B4D8               	btfsc	status,2,c
  6589  0034F8  EF80  F01A         	goto	u3531
  6590  0034FC  EF82  F01A         	goto	u3530
  6591  003500                     u3531:
  6592  003500  EF86  F01A         	goto	l3478
  6593  003504                     u3530:
  6594  003504  6C07               	negf	___awdiv@quotient^0,c
  6595  003506  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6596  003508  B0D8               	btfsc	status,0,c
  6597  00350A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6598  00350C                     l3478:
  6599  00350C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6600  003510  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6601  003514  0012               	return		;funcret
  6602  003516                     __end_of___awdiv:
  6603                           	callstack 0
  6604                           
  6605 ;; *************** function _atoi *****************
  6606 ;; Defined at:
  6607 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6610 ;;		 -> STR_7(9), STR_6(9), STR_5(9), STR_4(8), 
  6611 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  n               2   20[COMRAM] int 
  6614 ;;  neg             2   13[COMRAM] int 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  2    7[COMRAM] int 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6624 ;;      Params:         2       0       0       0       0       0       0       0       0
  6625 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6626 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6627 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6628 ;;Total ram usage:       15 bytes
  6629 ;; Hardware stack levels used: 1
  6630 ;; Hardware stack levels required when called: 1
  6631 ;; This function calls:
  6632 ;;		___wmul
  6633 ;;		_isdigit
  6634 ;;		_isspace
  6635 ;; This function is called by:
  6636 ;;		_vfpfcnvrt
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           	psect	text24
  6641  002C82                     __ptext24:
  6642                           	callstack 0
  6643  002C82                     _atoi:
  6644                           	callstack 26
  6645  002C82  0E00               	movlw	0
  6646  002C84  6E16               	movwf	(atoi@n+1)^0,c
  6647  002C86  0E00               	movlw	0
  6648  002C88  6E15               	movwf	atoi@n^0,c
  6649  002C8A  0E00               	movlw	0
  6650  002C8C  6E0F               	movwf	(atoi@neg+1)^0,c
  6651  002C8E  0E00               	movlw	0
  6652  002C90  6E0E               	movwf	atoi@neg^0,c
  6653  002C92  EF4D  F016         	goto	l4038
  6654  002C96                     l4036:
  6655  002C96  4A08               	infsnz	atoi@s^0,f,c
  6656  002C98  2A09               	incf	(atoi@s+1)^0,f,c
  6657  002C9A                     l4038:
  6658  002C9A  0E01               	movlw	1
  6659  002C9C  6E14               	movwf	_atoi$1035^0,c
  6660  002C9E  C008  FFF6         	movff	atoi@s,tblptrl
  6661  002CA2  C009  FFF7         	movff	atoi@s+1,tblptrh
  6662  002CA6                     	if	0	;tblptru may be non-zero
  6663  002CA6                     	endif
  6664  002CA6                     	if	0	;tblptru may be non-zero
  6665  002CA6                     	endif
  6666  002CA6  0008               	tblrd		*
  6667  002CA8  50F5               	movf	tablat,w,c
  6668  002CAA  0A20               	xorlw	32
  6669  002CAC  B4D8               	btfsc	status,2,c
  6670  002CAE  EF5B  F016         	goto	u4641
  6671  002CB2  EF5D  F016         	goto	u4640
  6672  002CB6                     u4641:
  6673  002CB6  EF7A  F016         	goto	l4046
  6674  002CBA                     u4640:
  6675  002CBA  0EF7               	movlw	247
  6676  002CBC  6E0A               	movwf	??_atoi^0,c
  6677  002CBE  0EFF               	movlw	255
  6678  002CC0  6E0B               	movwf	(??_atoi+1)^0,c
  6679  002CC2  C008  FFF6         	movff	atoi@s,tblptrl
  6680  002CC6  C009  FFF7         	movff	atoi@s+1,tblptrh
  6681  002CCA                     	if	0	;tblptru may be non-zero
  6682  002CCA                     	endif
  6683  002CCA                     	if	0	;tblptru may be non-zero
  6684  002CCA                     	endif
  6685  002CCA  0008               	tblrd		*
  6686  002CCC  50F5               	movf	tablat,w,c
  6687  002CCE  6E0C               	movwf	(??_atoi+2)^0,c
  6688  002CD0  6A0D               	clrf	(??_atoi+3)^0,c
  6689  002CD2  500A               	movf	??_atoi^0,w,c
  6690  002CD4  260C               	addwf	(??_atoi+2)^0,f,c
  6691  002CD6  500B               	movf	(??_atoi+1)^0,w,c
  6692  002CD8  220D               	addwfc	(??_atoi+3)^0,f,c
  6693  002CDA  500D               	movf	(??_atoi+3)^0,w,c
  6694  002CDC  E109               	bnz	u4650
  6695  002CDE  0E05               	movlw	5
  6696  002CE0  5C0C               	subwf	(??_atoi+2)^0,w,c
  6697  002CE2  A0D8               	btfss	status,0,c
  6698  002CE4  EF76  F016         	goto	u4651
  6699  002CE8  EF78  F016         	goto	u4650
  6700  002CEC                     u4651:
  6701  002CEC  EF7A  F016         	goto	l4046
  6702  002CF0                     u4650:
  6703  002CF0  0E00               	movlw	0
  6704  002CF2  6E14               	movwf	_atoi$1035^0,c
  6705  002CF4                     l4046:
  6706  002CF4  C014  F010         	movff	_atoi$1035,_atoi$1034
  6707  002CF8  6A11               	clrf	(_atoi$1034+1)^0,c
  6708  002CFA  5010               	movf	_atoi$1034^0,w,c
  6709  002CFC  1011               	iorwf	(_atoi$1034+1)^0,w,c
  6710  002CFE  A4D8               	btfss	status,2,c
  6711  002D00  EF84  F016         	goto	u4661
  6712  002D04  EF86  F016         	goto	u4660
  6713  002D08                     u4661:
  6714  002D08  EF4B  F016         	goto	l4036
  6715  002D0C                     u4660:
  6716  002D0C  EF90  F016         	goto	l4056
  6717  002D10                     l4052:
  6718  002D10  0E00               	movlw	0
  6719  002D12  6E0F               	movwf	(atoi@neg+1)^0,c
  6720  002D14  0E01               	movlw	1
  6721  002D16  6E0E               	movwf	atoi@neg^0,c
  6722  002D18                     l4054:
  6723  002D18  4A08               	infsnz	atoi@s^0,f,c
  6724  002D1A  2A09               	incf	(atoi@s+1)^0,f,c
  6725  002D1C  EFC5  F016         	goto	l4062
  6726  002D20                     l4056:
  6727  002D20  C008  FFF6         	movff	atoi@s,tblptrl
  6728  002D24  C009  FFF7         	movff	atoi@s+1,tblptrh
  6729  002D28                     	if	0	;tblptru may be non-zero
  6730  002D28                     	endif
  6731  002D28                     	if	0	;tblptru may be non-zero
  6732  002D28                     	endif
  6733  002D28  0008               	tblrd		*
  6734  002D2A  50F5               	movf	tablat,w,c
  6735  002D2C  6E0A               	movwf	??_atoi^0,c
  6736  002D2E  6A0B               	clrf	(??_atoi+1)^0,c
  6737                           
  6738                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6739                           ; Switch size 1, requested type "simple"
  6740                           ; Number of cases is 1, Range of values is 0 to 0
  6741                           ; switch strategies available:
  6742                           ; Name         Instructions Cycles
  6743                           ; simple_byte            4     3 (average)
  6744                           ;	Chosen strategy is simple_byte
  6745  002D30  500B               	movf	(??_atoi+1)^0,w,c
  6746  002D32  0A00               	xorlw	0	; case 0
  6747  002D34  B4D8               	btfsc	status,2,c
  6748  002D36  EF9F  F016         	goto	l4626
  6749  002D3A  EFC5  F016         	goto	l4062
  6750  002D3E                     l4626:
  6751                           
  6752                           ; Switch size 1, requested type "simple"
  6753                           ; Number of cases is 2, Range of values is 43 to 45
  6754                           ; switch strategies available:
  6755                           ; Name         Instructions Cycles
  6756                           ; simple_byte            7     4 (average)
  6757                           ;	Chosen strategy is simple_byte
  6758  002D3E  500A               	movf	??_atoi^0,w,c
  6759  002D40  0A2B               	xorlw	43	; case 43
  6760  002D42  B4D8               	btfsc	status,2,c
  6761  002D44  EF8C  F016         	goto	l4054
  6762  002D48  0A06               	xorlw	6	; case 45
  6763  002D4A  B4D8               	btfsc	status,2,c
  6764  002D4C  EF88  F016         	goto	l4052
  6765  002D50  EFC5  F016         	goto	l4062
  6766  002D54                     l4058:
  6767  002D54  C015  F001         	movff	atoi@n,___wmul@multiplier
  6768  002D58  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6769  002D5C  0E00               	movlw	0
  6770  002D5E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6771  002D60  0E0A               	movlw	10
  6772  002D62  6E03               	movwf	___wmul@multiplicand^0,c
  6773  002D64  EC80  F01F         	call	___wmul	;wreg free
  6774  002D68  C008  FFF6         	movff	atoi@s,tblptrl
  6775  002D6C  C009  FFF7         	movff	atoi@s+1,tblptrh
  6776  002D70                     	if	0	;tblptru may be non-zero
  6777  002D70                     	endif
  6778  002D70                     	if	0	;tblptru may be non-zero
  6779  002D70                     	endif
  6780  002D70  0008               	tblrd		*
  6781  002D72  50F5               	movf	tablat,w,c
  6782  002D74  5E01               	subwf	?___wmul^0,f,c
  6783  002D76  0E00               	movlw	0
  6784  002D78  5A02               	subwfb	(?___wmul+1)^0,f,c
  6785  002D7A  0E30               	movlw	48
  6786  002D7C  2401               	addwf	?___wmul^0,w,c
  6787  002D7E  6E15               	movwf	atoi@n^0,c
  6788  002D80  0E00               	movlw	0
  6789  002D82  2002               	addwfc	(?___wmul+1)^0,w,c
  6790  002D84  6E16               	movwf	(atoi@n+1)^0,c
  6791  002D86  EF8C  F016         	goto	l4054
  6792  002D8A                     l4062:
  6793  002D8A  0ED0               	movlw	208
  6794  002D8C  6E0A               	movwf	??_atoi^0,c
  6795  002D8E  0EFF               	movlw	255
  6796  002D90  6E0B               	movwf	(??_atoi+1)^0,c
  6797  002D92  C008  FFF6         	movff	atoi@s,tblptrl
  6798  002D96  C009  FFF7         	movff	atoi@s+1,tblptrh
  6799  002D9A                     	if	0	;tblptru may be non-zero
  6800  002D9A                     	endif
  6801  002D9A                     	if	0	;tblptru may be non-zero
  6802  002D9A                     	endif
  6803  002D9A  0008               	tblrd		*
  6804  002D9C  50F5               	movf	tablat,w,c
  6805  002D9E  6E0C               	movwf	(??_atoi+2)^0,c
  6806  002DA0  6A0D               	clrf	(??_atoi+3)^0,c
  6807  002DA2  500A               	movf	??_atoi^0,w,c
  6808  002DA4  260C               	addwf	(??_atoi+2)^0,f,c
  6809  002DA6  500B               	movf	(??_atoi+1)^0,w,c
  6810  002DA8  220D               	addwfc	(??_atoi+3)^0,f,c
  6811  002DAA  500D               	movf	(??_atoi+3)^0,w,c
  6812  002DAC  E10A               	bnz	u4670
  6813  002DAE  0E0A               	movlw	10
  6814  002DB0  5C0C               	subwf	(??_atoi+2)^0,w,c
  6815  002DB2  A0D8               	btfss	status,0,c
  6816  002DB4  EFDE  F016         	goto	u4671
  6817  002DB8  EFE1  F016         	goto	u4670
  6818  002DBC                     u4671:
  6819  002DBC  0E01               	movlw	1
  6820  002DBE  EFE2  F016         	goto	u4680
  6821  002DC2                     u4670:
  6822  002DC2  0E00               	movlw	0
  6823  002DC4                     u4680:
  6824  002DC4  6E12               	movwf	_atoi$1036^0,c
  6825  002DC6  6A13               	clrf	(_atoi$1036+1)^0,c
  6826  002DC8  5012               	movf	_atoi$1036^0,w,c
  6827  002DCA  1013               	iorwf	(_atoi$1036+1)^0,w,c
  6828  002DCC  A4D8               	btfss	status,2,c
  6829  002DCE  EFEB  F016         	goto	u4691
  6830  002DD2  EFED  F016         	goto	u4690
  6831  002DD6                     u4691:
  6832  002DD6  EFAA  F016         	goto	l4058
  6833  002DDA                     u4690:
  6834  002DDA  500E               	movf	atoi@neg^0,w,c
  6835  002DDC  100F               	iorwf	(atoi@neg+1)^0,w,c
  6836  002DDE  A4D8               	btfss	status,2,c
  6837  002DE0  EFF4  F016         	goto	u4701
  6838  002DE4  EFF6  F016         	goto	u4700
  6839  002DE8                     u4701:
  6840  002DE8  EF04  F017         	goto	l1131
  6841  002DEC                     u4700:
  6842  002DEC  C015  F00A         	movff	atoi@n,??_atoi
  6843  002DF0  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6844  002DF4  1E0A               	comf	??_atoi^0,f,c
  6845  002DF6  1E0B               	comf	(??_atoi+1)^0,f,c
  6846  002DF8  4A0A               	infsnz	??_atoi^0,f,c
  6847  002DFA  2A0B               	incf	(??_atoi+1)^0,f,c
  6848  002DFC  C00A  F008         	movff	??_atoi,?_atoi
  6849  002E00  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6850  002E04  EF08  F017         	goto	l1134
  6851  002E08                     l1131:
  6852  002E08  C015  F008         	movff	atoi@n,?_atoi
  6853  002E0C  C016  F009         	movff	atoi@n+1,?_atoi+1
  6854  002E10                     l1134:
  6855  002E10  0012               	return		;funcret
  6856  002E12                     __end_of_atoi:
  6857                           	callstack 0
  6858                           
  6859 ;; *************** function _isspace *****************
  6860 ;; Defined at:
  6861 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  c               2    0[COMRAM] int 
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;		None
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  2    0[COMRAM] int 
  6868 ;; Registers used:
  6869 ;;		wreg, status,2, status,0
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6875 ;;      Params:         2       0       0       0       0       0       0       0       0
  6876 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6877 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6878 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6879 ;;Total ram usage:        7 bytes
  6880 ;; Hardware stack levels used: 1
  6881 ;; This function calls:
  6882 ;;		Nothing
  6883 ;; This function is called by:
  6884 ;;		_atoi
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           	psect	text25
  6889  003C56                     __ptext25:
  6890                           	callstack 0
  6891  003C56                     _isspace:
  6892                           	callstack 26
  6893  003C56  0E01               	movlw	1
  6894  003C58  6E07               	movwf	_isspace$1065^0,c
  6895  003C5A  0E20               	movlw	32
  6896  003C5C  1801               	xorwf	isspace@c^0,w,c
  6897  003C5E  1002               	iorwf	(isspace@c+1)^0,w,c
  6898  003C60  B4D8               	btfsc	status,2,c
  6899  003C62  EF35  F01E         	goto	u4041
  6900  003C66  EF37  F01E         	goto	u4040
  6901  003C6A                     u4041:
  6902  003C6A  EF50  F01E         	goto	l3706
  6903  003C6E                     u4040:
  6904  003C6E  0EF7               	movlw	247
  6905  003C70  6E03               	movwf	??_isspace^0,c
  6906  003C72  0EFF               	movlw	255
  6907  003C74  6E04               	movwf	(??_isspace+1)^0,c
  6908  003C76  C001  F005         	movff	isspace@c,??_isspace+2
  6909  003C7A  C002  F006         	movff	isspace@c+1,??_isspace+3
  6910  003C7E  5003               	movf	??_isspace^0,w,c
  6911  003C80  2605               	addwf	(??_isspace+2)^0,f,c
  6912  003C82  5004               	movf	(??_isspace+1)^0,w,c
  6913  003C84  2206               	addwfc	(??_isspace+3)^0,f,c
  6914  003C86  5006               	movf	(??_isspace+3)^0,w,c
  6915  003C88  E109               	bnz	u4050
  6916  003C8A  0E05               	movlw	5
  6917  003C8C  5C05               	subwf	(??_isspace+2)^0,w,c
  6918  003C8E  A0D8               	btfss	status,0,c
  6919  003C90  EF4C  F01E         	goto	u4051
  6920  003C94  EF4E  F01E         	goto	u4050
  6921  003C98                     u4051:
  6922  003C98  EF50  F01E         	goto	l3706
  6923  003C9C                     u4050:
  6924  003C9C  0E00               	movlw	0
  6925  003C9E  6E07               	movwf	_isspace$1065^0,c
  6926  003CA0                     l3706:
  6927  003CA0  C007  F001         	movff	_isspace$1065,?_isspace
  6928  003CA4  6A02               	clrf	(?_isspace+1)^0,c
  6929  003CA6  0012               	return		;funcret
  6930  003CA8                     __end_of_isspace:
  6931                           	callstack 0
  6932                           
  6933 ;; *************** function _isdigit *****************
  6934 ;; Defined at:
  6935 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  c               2    0[COMRAM] int 
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;		None
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  2    0[COMRAM] int 
  6942 ;; Registers used:
  6943 ;;		wreg, status,2, status,0
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6949 ;;      Params:         2       0       0       0       0       0       0       0       0
  6950 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6951 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6952 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6953 ;;Total ram usage:        6 bytes
  6954 ;; Hardware stack levels used: 1
  6955 ;; This function calls:
  6956 ;;		Nothing
  6957 ;; This function is called by:
  6958 ;;		_vfpfcnvrt
  6959 ;;		_atoi
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           	psect	text26
  6964  003E5E                     __ptext26:
  6965                           	callstack 0
  6966  003E5E                     _isdigit:
  6967                           	callstack 27
  6968  003E5E  0ED0               	movlw	208
  6969  003E60  6E03               	movwf	??_isdigit^0,c
  6970  003E62  0EFF               	movlw	255
  6971  003E64  6E04               	movwf	(??_isdigit+1)^0,c
  6972  003E66  C001  F005         	movff	isdigit@c,??_isdigit+2
  6973  003E6A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6974  003E6E  5003               	movf	??_isdigit^0,w,c
  6975  003E70  2605               	addwf	(??_isdigit+2)^0,f,c
  6976  003E72  5004               	movf	(??_isdigit+1)^0,w,c
  6977  003E74  2206               	addwfc	(??_isdigit+3)^0,f,c
  6978  003E76  5006               	movf	(??_isdigit+3)^0,w,c
  6979  003E78  E10A               	bnz	u4020
  6980  003E7A  0E0A               	movlw	10
  6981  003E7C  5C05               	subwf	(??_isdigit+2)^0,w,c
  6982  003E7E  A0D8               	btfss	status,0,c
  6983  003E80  EF44  F01F         	goto	u4021
  6984  003E84  EF47  F01F         	goto	u4020
  6985  003E88                     u4021:
  6986  003E88  0E01               	movlw	1
  6987  003E8A  EF48  F01F         	goto	u4030
  6988  003E8E                     u4020:
  6989  003E8E  0E00               	movlw	0
  6990  003E90                     u4030:
  6991  003E90  6E01               	movwf	?_isdigit^0,c
  6992  003E92  6A02               	clrf	(?_isdigit+1)^0,c
  6993  003E94  0012               	return		;funcret
  6994  003E96                     __end_of_isdigit:
  6995                           	callstack 0
  6996                           
  6997 ;; *************** function ___wmul *****************
  6998 ;; Defined at:
  6999 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;  multiplier      2    0[COMRAM] unsigned int 
  7002 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  product         2    4[COMRAM] unsigned int 
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  2    0[COMRAM] unsigned int 
  7007 ;; Registers used:
  7008 ;;		wreg, status,2, status,0, prodl, prodh
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7014 ;;      Params:         4       0       0       0       0       0       0       0       0
  7015 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7017 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7018 ;;Total ram usage:        6 bytes
  7019 ;; Hardware stack levels used: 1
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_atoi
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text27
  7028  003F00                     __ptext27:
  7029                           	callstack 0
  7030  003F00                     ___wmul:
  7031                           	callstack 26
  7032  003F00  5001               	movf	___wmul@multiplier^0,w,c
  7033  003F02  0203               	mulwf	___wmul@multiplicand^0,c
  7034  003F04  CFF3 F005          	movff	prodl,___wmul@product
  7035  003F08  CFF4 F006          	movff	prodh,___wmul@product+1
  7036  003F0C  5001               	movf	___wmul@multiplier^0,w,c
  7037  003F0E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7038  003F10  50F3               	movf	243,w,c
  7039  003F12  2606               	addwf	(___wmul@product+1)^0,f,c
  7040  003F14  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7041  003F16  0203               	mulwf	___wmul@multiplicand^0,c
  7042  003F18  50F3               	movf	243,w,c
  7043  003F1A  2606               	addwf	(___wmul@product+1)^0,f,c
  7044  003F1C  C005  F001         	movff	___wmul@product,?___wmul
  7045  003F20  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7046  003F24  0012               	return		;funcret
  7047  003F26                     __end_of___wmul:
  7048                           	callstack 0
  7049                           
  7050 ;; *************** function _MPU6050_Read_Temperature *****************
  7051 ;; Defined at:
  7052 ;;		line 75 in file "mpu6050.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;		None
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  4   62[COMRAM] float 
  7059 ;; Registers used:
  7060 ;;		wreg, status,2, status,0, cstack
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7066 ;;      Params:         4       0       0       0       0       0       0       0       0
  7067 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7068 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7069 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7070 ;;Total ram usage:        6 bytes
  7071 ;; Hardware stack levels used: 1
  7072 ;; Hardware stack levels required when called: 2
  7073 ;; This function calls:
  7074 ;;		_MPU6050_Read
  7075 ;;		___fladd
  7076 ;;		___fldiv
  7077 ;;		___xxtofl
  7078 ;; This function is called by:
  7079 ;;		_main
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083                           	psect	text28
  7084  003670                     __ptext28:
  7085                           	callstack 0
  7086  003670                     _MPU6050_Read_Temperature:
  7087                           	callstack 28
  7088  003670                     
  7089                           ;mpu6050.c: 77:     return (float)(((int)(MPU6050_Read(0x41) << 8 | MPU6050_Read(0x42)))
      +                          /(float)340+(float)36.53);
  7090  003670  0E00               	movlw	0
  7091  003672  6E1A               	movwf	___fldiv@a^0,c
  7092  003674  0E00               	movlw	0
  7093  003676  6E1B               	movwf	(___fldiv@a+1)^0,c
  7094  003678  0EAA               	movlw	170
  7095  00367A  6E1C               	movwf	(___fldiv@a+2)^0,c
  7096  00367C  0E43               	movlw	67
  7097  00367E  6E1D               	movwf	(___fldiv@a+3)^0,c
  7098  003680  0E41               	movlw	65
  7099  003682  ECDA  F01E         	call	_MPU6050_Read
  7100  003686  C002  F043         	movff	?_MPU6050_Read,??_MPU6050_Read_Temperature
  7101  00368A  C003  F044         	movff	?_MPU6050_Read+1,??_MPU6050_Read_Temperature+1
  7102  00368E  C043  F044         	movff	??_MPU6050_Read_Temperature,??_MPU6050_Read_Temperature+1
  7103  003692  6A43               	clrf	??_MPU6050_Read_Temperature^0,c
  7104  003694  0E42               	movlw	66
  7105  003696  ECDA  F01E         	call	_MPU6050_Read
  7106  00369A  5002               	movf	?_MPU6050_Read^0,w,c
  7107  00369C  1243               	iorwf	??_MPU6050_Read_Temperature^0,f,c
  7108  00369E  5003               	movf	(?_MPU6050_Read+1)^0,w,c
  7109  0036A0  1244               	iorwf	(??_MPU6050_Read_Temperature+1)^0,f,c
  7110  0036A2  C043  F008         	movff	??_MPU6050_Read_Temperature,___xxtofl@val
  7111  0036A6  C044  F009         	movff	??_MPU6050_Read_Temperature+1,___xxtofl@val+1
  7112  0036AA  0E00               	movlw	0
  7113  0036AC  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  7114  0036AE  0EFF               	movlw	-1
  7115  0036B0  6E0A               	movwf	(___xxtofl@val+2)^0,c
  7116  0036B2  6E0B               	movwf	(___xxtofl@val+3)^0,c
  7117  0036B4  0E01               	movlw	1
  7118  0036B6  EC67  F015         	call	___xxtofl
  7119  0036BA  C008  F016         	movff	?___xxtofl,___fldiv@b
  7120  0036BE  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  7121  0036C2  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  7122  0036C6  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  7123  0036CA  EC5D  F011         	call	___fldiv	;wreg free
  7124  0036CE  C016  F02F         	movff	?___fldiv,___fladd@b
  7125  0036D2  C017  F030         	movff	?___fldiv+1,___fladd@b+1
  7126  0036D6  C018  F031         	movff	?___fldiv+2,___fladd@b+2
  7127  0036DA  C019  F032         	movff	?___fldiv+3,___fladd@b+3
  7128  0036DE  0EB8               	movlw	184
  7129  0036E0  6E33               	movwf	___fladd@a^0,c
  7130  0036E2  0E1E               	movlw	30
  7131  0036E4  6E34               	movwf	(___fladd@a+1)^0,c
  7132  0036E6  0E12               	movlw	18
  7133  0036E8  6E35               	movwf	(___fladd@a+2)^0,c
  7134  0036EA  0E42               	movlw	66
  7135  0036EC  6E36               	movwf	(___fladd@a+3)^0,c
  7136  0036EE  ECE8  F00C         	call	___fladd	;wreg free
  7137  0036F2  C02F  F03F         	movff	?___fladd,?_MPU6050_Read_Temperature
  7138  0036F6  C030  F040         	movff	?___fladd+1,?_MPU6050_Read_Temperature+1
  7139  0036FA  C031  F041         	movff	?___fladd+2,?_MPU6050_Read_Temperature+2
  7140  0036FE  C032  F042         	movff	?___fladd+3,?_MPU6050_Read_Temperature+3
  7141  003702  0012               	return		;funcret
  7142  003704                     __end_of_MPU6050_Read_Temperature:
  7143                           	callstack 0
  7144                           
  7145 ;; *************** function ___fladd *****************
  7146 ;; Defined at:
  7147 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  b               4   46[COMRAM] float 
  7150 ;;  a               4   50[COMRAM] float 
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  grs             1   61[COMRAM] unsigned char 
  7153 ;;  bexp            1   60[COMRAM] unsigned char 
  7154 ;;  aexp            1   59[COMRAM] unsigned char 
  7155 ;;  signs           1   58[COMRAM] unsigned char 
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  4   46[COMRAM] unsigned char 
  7158 ;; Registers used:
  7159 ;;		wreg, status,2, status,0
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7165 ;;      Params:         8       0       0       0       0       0       0       0       0
  7166 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7167 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7168 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7169 ;;Total ram usage:       16 bytes
  7170 ;; Hardware stack levels used: 1
  7171 ;; This function calls:
  7172 ;;		Nothing
  7173 ;; This function is called by:
  7174 ;;		_MPU6050_Read_Temperature
  7175 ;;		___flsub
  7176 ;;		_efgtoa
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180                           	psect	text29
  7181  0019D0                     __ptext29:
  7182                           	callstack 0
  7183  0019D0                     ___fladd:
  7184                           	callstack 25
  7185  0019D0  5032               	movf	(___fladd@b+3)^0,w,c
  7186  0019D2  0B80               	andlw	128
  7187  0019D4  6E3B               	movwf	___fladd@signs^0,c
  7188  0019D6  5032               	movf	(___fladd@b+3)^0,w,c
  7189  0019D8  2432               	addwf	(___fladd@b+3)^0,w,c
  7190  0019DA  6E3D               	movwf	___fladd@bexp^0,c
  7191  0019DC  AE31               	btfss	(___fladd@b+2)^0,7,c
  7192  0019DE  EFF3  F00C         	goto	u2631
  7193  0019E2  EFF5  F00C         	goto	u2630
  7194  0019E6                     u2631:
  7195  0019E6  EFF6  F00C         	goto	l2940
  7196  0019EA                     u2630:
  7197  0019EA  803D               	bsf	___fladd@bexp^0,0,c
  7198  0019EC                     l2940:
  7199  0019EC  503D               	movf	___fladd@bexp^0,w,c
  7200  0019EE  B4D8               	btfsc	status,2,c
  7201  0019F0  EFFC  F00C         	goto	u2641
  7202  0019F4  EFFE  F00C         	goto	u2640
  7203  0019F8                     u2641:
  7204  0019F8  EF13  F00D         	goto	l2950
  7205  0019FC                     u2640:
  7206  0019FC  283D               	incf	___fladd@bexp^0,w,c
  7207  0019FE  A4D8               	btfss	status,2,c
  7208  001A00  EF04  F00D         	goto	u2651
  7209  001A04  EF06  F00D         	goto	u2650
  7210  001A08                     u2651:
  7211  001A08  EF0E  F00D         	goto	l2946
  7212  001A0C                     u2650:
  7213  001A0C  0E00               	movlw	0
  7214  001A0E  6E2F               	movwf	___fladd@b^0,c
  7215  001A10  0E00               	movlw	0
  7216  001A12  6E30               	movwf	(___fladd@b+1)^0,c
  7217  001A14  0E00               	movlw	0
  7218  001A16  6E31               	movwf	(___fladd@b+2)^0,c
  7219  001A18  0E00               	movlw	0
  7220  001A1A  6E32               	movwf	(___fladd@b+3)^0,c
  7221  001A1C                     l2946:
  7222  001A1C  8E31               	bsf	(___fladd@b+2)^0,7,c
  7223  001A1E  0E00               	movlw	0
  7224  001A20  6E32               	movwf	(___fladd@b+3)^0,c
  7225  001A22  EF1B  F00D         	goto	l2952
  7226  001A26                     l2950:
  7227  001A26  0E00               	movlw	0
  7228  001A28  6E2F               	movwf	___fladd@b^0,c
  7229  001A2A  0E00               	movlw	0
  7230  001A2C  6E30               	movwf	(___fladd@b+1)^0,c
  7231  001A2E  0E00               	movlw	0
  7232  001A30  6E31               	movwf	(___fladd@b+2)^0,c
  7233  001A32  0E00               	movlw	0
  7234  001A34  6E32               	movwf	(___fladd@b+3)^0,c
  7235  001A36                     l2952:
  7236  001A36  5036               	movf	(___fladd@a+3)^0,w,c
  7237  001A38  0B80               	andlw	128
  7238  001A3A  6E3C               	movwf	___fladd@aexp^0,c
  7239  001A3C  503B               	movf	___fladd@signs^0,w,c
  7240  001A3E  183C               	xorwf	___fladd@aexp^0,w,c
  7241  001A40  B4D8               	btfsc	status,2,c
  7242  001A42  EF25  F00D         	goto	u2661
  7243  001A46  EF27  F00D         	goto	u2660
  7244  001A4A                     u2661:
  7245  001A4A  EF28  F00D         	goto	l2958
  7246  001A4E                     u2660:
  7247  001A4E  8C3B               	bsf	___fladd@signs^0,6,c
  7248  001A50                     l2958:
  7249  001A50  5036               	movf	(___fladd@a+3)^0,w,c
  7250  001A52  2436               	addwf	(___fladd@a+3)^0,w,c
  7251  001A54  6E3C               	movwf	___fladd@aexp^0,c
  7252  001A56  AE35               	btfss	(___fladd@a+2)^0,7,c
  7253  001A58  EF30  F00D         	goto	u2671
  7254  001A5C  EF32  F00D         	goto	u2670
  7255  001A60                     u2671:
  7256  001A60  EF33  F00D         	goto	l2964
  7257  001A64                     u2670:
  7258  001A64  803C               	bsf	___fladd@aexp^0,0,c
  7259  001A66                     l2964:
  7260  001A66  503C               	movf	___fladd@aexp^0,w,c
  7261  001A68  B4D8               	btfsc	status,2,c
  7262  001A6A  EF39  F00D         	goto	u2681
  7263  001A6E  EF3B  F00D         	goto	u2680
  7264  001A72                     u2681:
  7265  001A72  EF50  F00D         	goto	l2974
  7266  001A76                     u2680:
  7267  001A76  283C               	incf	___fladd@aexp^0,w,c
  7268  001A78  A4D8               	btfss	status,2,c
  7269  001A7A  EF41  F00D         	goto	u2691
  7270  001A7E  EF43  F00D         	goto	u2690
  7271  001A82                     u2691:
  7272  001A82  EF4B  F00D         	goto	l2970
  7273  001A86                     u2690:
  7274  001A86  0E00               	movlw	0
  7275  001A88  6E33               	movwf	___fladd@a^0,c
  7276  001A8A  0E00               	movlw	0
  7277  001A8C  6E34               	movwf	(___fladd@a+1)^0,c
  7278  001A8E  0E00               	movlw	0
  7279  001A90  6E35               	movwf	(___fladd@a+2)^0,c
  7280  001A92  0E00               	movlw	0
  7281  001A94  6E36               	movwf	(___fladd@a+3)^0,c
  7282  001A96                     l2970:
  7283  001A96  8E35               	bsf	(___fladd@a+2)^0,7,c
  7284  001A98  0E00               	movlw	0
  7285  001A9A  6E36               	movwf	(___fladd@a+3)^0,c
  7286  001A9C  EF58  F00D         	goto	l2976
  7287  001AA0                     l2974:
  7288  001AA0  0E00               	movlw	0
  7289  001AA2  6E33               	movwf	___fladd@a^0,c
  7290  001AA4  0E00               	movlw	0
  7291  001AA6  6E34               	movwf	(___fladd@a+1)^0,c
  7292  001AA8  0E00               	movlw	0
  7293  001AAA  6E35               	movwf	(___fladd@a+2)^0,c
  7294  001AAC  0E00               	movlw	0
  7295  001AAE  6E36               	movwf	(___fladd@a+3)^0,c
  7296  001AB0                     l2976:
  7297  001AB0  503D               	movf	___fladd@bexp^0,w,c
  7298  001AB2  5C3C               	subwf	___fladd@aexp^0,w,c
  7299  001AB4  B0D8               	btfsc	status,0,c
  7300  001AB6  EF5F  F00D         	goto	u2701
  7301  001ABA  EF61  F00D         	goto	u2700
  7302  001ABE                     u2701:
  7303  001ABE  EF88  F00D         	goto	l3012
  7304  001AC2                     u2700:
  7305  001AC2  AC3B               	btfss	___fladd@signs^0,6,c
  7306  001AC4  EF66  F00D         	goto	u2711
  7307  001AC8  EF68  F00D         	goto	u2710
  7308  001ACC                     u2711:
  7309  001ACC  EF6A  F00D         	goto	l2982
  7310  001AD0                     u2710:
  7311  001AD0  0E80               	movlw	128
  7312  001AD2  1A3B               	xorwf	___fladd@signs^0,f,c
  7313  001AD4                     l2982:
  7314  001AD4  C03D  F03E         	movff	___fladd@bexp,___fladd@grs
  7315  001AD8  C03C  F03D         	movff	___fladd@aexp,___fladd@bexp
  7316  001ADC  C03E  F03C         	movff	___fladd@grs,___fladd@aexp
  7317  001AE0  C02F  F03E         	movff	___fladd@b,___fladd@grs
  7318  001AE4  C033  F02F         	movff	___fladd@a,___fladd@b
  7319  001AE8  C03E  F033         	movff	___fladd@grs,___fladd@a
  7320  001AEC  C030  F03E         	movff	___fladd@b+1,___fladd@grs
  7321  001AF0  C034  F030         	movff	___fladd@a+1,___fladd@b+1
  7322  001AF4  C03E  F034         	movff	___fladd@grs,___fladd@a+1
  7323  001AF8  C031  F03E         	movff	___fladd@b+2,___fladd@grs
  7324  001AFC  C035  F031         	movff	___fladd@a+2,___fladd@b+2
  7325  001B00  C03E  F035         	movff	___fladd@grs,___fladd@a+2
  7326  001B04  C032  F03E         	movff	___fladd@b+3,___fladd@grs
  7327  001B08  C036  F032         	movff	___fladd@a+3,___fladd@b+3
  7328  001B0C  C03E  F036         	movff	___fladd@grs,___fladd@a+3
  7329  001B10                     l3012:
  7330  001B10  0E00               	movlw	0
  7331  001B12  6E3E               	movwf	___fladd@grs^0,c
  7332  001B14  503D               	movf	___fladd@bexp^0,w,c
  7333  001B16  C03C  F037         	movff	___fladd@aexp,??___fladd
  7334  001B1A  6A38               	clrf	(??___fladd+1)^0,c
  7335  001B1C  5E37               	subwf	??___fladd^0,f,c
  7336  001B1E  0E00               	movlw	0
  7337  001B20  5A38               	subwfb	(??___fladd+1)^0,f,c
  7338  001B22  BE38               	btfsc	(??___fladd+1)^0,7,c
  7339  001B24  EF9D  F00D         	goto	u2721
  7340  001B28  5038               	movf	(??___fladd+1)^0,w,c
  7341  001B2A  E109               	bnz	u2720
  7342  001B2C  0E1A               	movlw	26
  7343  001B2E  5C37               	subwf	??___fladd^0,w,c
  7344  001B30  A0D8               	btfss	status,0,c
  7345  001B32  EF9D  F00D         	goto	u2721
  7346  001B36  EF9F  F00D         	goto	u2720
  7347  001B3A                     u2721:
  7348  001B3A  EFD6  F00D         	goto	l761
  7349  001B3E                     u2720:
  7350  001B3E  502F               	movf	___fladd@b^0,w,c
  7351  001B40  1030               	iorwf	(___fladd@b+1)^0,w,c
  7352  001B42  1031               	iorwf	(___fladd@b+2)^0,w,c
  7353  001B44  1032               	iorwf	(___fladd@b+3)^0,w,c
  7354  001B46  A4D8               	btfss	status,2,c
  7355  001B48  EFA8  F00D         	goto	u2731
  7356  001B4C  EFAB  F00D         	goto	u2730
  7357  001B50                     u2731:
  7358  001B50  0E01               	movlw	1
  7359  001B52  EFAC  F00D         	goto	u2740
  7360  001B56                     u2730:
  7361  001B56  0E00               	movlw	0
  7362  001B58                     u2740:
  7363  001B58  6E3E               	movwf	___fladd@grs^0,c
  7364  001B5A  0E00               	movlw	0
  7365  001B5C  6E2F               	movwf	___fladd@b^0,c
  7366  001B5E  0E00               	movlw	0
  7367  001B60  6E30               	movwf	(___fladd@b+1)^0,c
  7368  001B62  0E00               	movlw	0
  7369  001B64  6E31               	movwf	(___fladd@b+2)^0,c
  7370  001B66  0E00               	movlw	0
  7371  001B68  6E32               	movwf	(___fladd@b+3)^0,c
  7372  001B6A  C03C  F03D         	movff	___fladd@aexp,___fladd@bexp
  7373  001B6E  EFDF  F00D         	goto	l760
  7374  001B72                     l762:
  7375  001B72  A03E               	btfss	___fladd@grs^0,0,c
  7376  001B74  EFBE  F00D         	goto	u2751
  7377  001B78  EFC0  F00D         	goto	u2750
  7378  001B7C                     u2751:
  7379  001B7C  EFC6  F00D         	goto	l3024
  7380  001B80                     u2750:
  7381  001B80  90D8               	bcf	status,0,c
  7382  001B82  303E               	rrcf	___fladd@grs^0,w,c
  7383  001B84  0901               	iorlw	1
  7384  001B86  6E3E               	movwf	___fladd@grs^0,c
  7385  001B88  EFC8  F00D         	goto	l3026
  7386  001B8C                     l3024:
  7387  001B8C  90D8               	bcf	status,0,c
  7388  001B8E  323E               	rrcf	___fladd@grs^0,f,c
  7389  001B90                     l3026:
  7390  001B90  A02F               	btfss	___fladd@b^0,0,c
  7391  001B92  EFCD  F00D         	goto	u2761
  7392  001B96  EFCF  F00D         	goto	u2760
  7393  001B9A                     u2761:
  7394  001B9A  EFD0  F00D         	goto	l3030
  7395  001B9E                     u2760:
  7396  001B9E  8E3E               	bsf	___fladd@grs^0,7,c
  7397  001BA0                     l3030:
  7398  001BA0  3432               	rlcf	(___fladd@b+3)^0,w,c
  7399  001BA2  3232               	rrcf	(___fladd@b+3)^0,f,c
  7400  001BA4  3231               	rrcf	(___fladd@b+2)^0,f,c
  7401  001BA6  3230               	rrcf	(___fladd@b+1)^0,f,c
  7402  001BA8  322F               	rrcf	___fladd@b^0,f,c
  7403  001BAA  2A3D               	incf	___fladd@bexp^0,f,c
  7404  001BAC                     l761:
  7405  001BAC  503C               	movf	___fladd@aexp^0,w,c
  7406  001BAE  5C3D               	subwf	___fladd@bexp^0,w,c
  7407  001BB0  A0D8               	btfss	status,0,c
  7408  001BB2  EFDD  F00D         	goto	u2771
  7409  001BB6  EFDF  F00D         	goto	u2770
  7410  001BBA                     u2771:
  7411  001BBA  EFB9  F00D         	goto	l762
  7412  001BBE                     u2770:
  7413  001BBE                     l760:
  7414  001BBE  BC3B               	btfsc	___fladd@signs^0,6,c
  7415  001BC0  EFE4  F00D         	goto	u2781
  7416  001BC4  EFE6  F00D         	goto	u2780
  7417  001BC8                     u2781:
  7418  001BC8  EF26  F00E         	goto	l3058
  7419  001BCC                     u2780:
  7420  001BCC  503D               	movf	___fladd@bexp^0,w,c
  7421  001BCE  A4D8               	btfss	status,2,c
  7422  001BD0  EFEC  F00D         	goto	u2791
  7423  001BD4  EFEE  F00D         	goto	u2790
  7424  001BD8                     u2791:
  7425  001BD8  EFF8  F00D         	goto	l3040
  7426  001BDC                     u2790:
  7427  001BDC  0E00               	movlw	0
  7428  001BDE  6E2F               	movwf	?___fladd^0,c
  7429  001BE0  0E00               	movlw	0
  7430  001BE2  6E30               	movwf	(?___fladd+1)^0,c
  7431  001BE4  0E00               	movlw	0
  7432  001BE6  6E31               	movwf	(?___fladd+2)^0,c
  7433  001BE8  0E00               	movlw	0
  7434  001BEA  6E32               	movwf	(?___fladd+3)^0,c
  7435  001BEC  EF47  F00F         	goto	l769
  7436  001BF0                     l3040:
  7437  001BF0  5033               	movf	___fladd@a^0,w,c
  7438  001BF2  262F               	addwf	___fladd@b^0,f,c
  7439  001BF4  5034               	movf	(___fladd@a+1)^0,w,c
  7440  001BF6  2230               	addwfc	(___fladd@b+1)^0,f,c
  7441  001BF8  5035               	movf	(___fladd@a+2)^0,w,c
  7442  001BFA  2231               	addwfc	(___fladd@b+2)^0,f,c
  7443  001BFC  5036               	movf	(___fladd@a+3)^0,w,c
  7444  001BFE  2232               	addwfc	(___fladd@b+3)^0,f,c
  7445  001C00  A032               	btfss	(___fladd@b+3)^0,0,c
  7446  001C02  EF05  F00E         	goto	u2801
  7447  001C06  EF07  F00E         	goto	u2800
  7448  001C0A                     u2801:
  7449  001C0A  EFB3  F00E         	goto	l3094
  7450  001C0E                     u2800:
  7451  001C0E  A03E               	btfss	___fladd@grs^0,0,c
  7452  001C10  EF0C  F00E         	goto	u2811
  7453  001C14  EF0E  F00E         	goto	u2810
  7454  001C18                     u2811:
  7455  001C18  EF14  F00E         	goto	l3048
  7456  001C1C                     u2810:
  7457  001C1C  90D8               	bcf	status,0,c
  7458  001C1E  303E               	rrcf	___fladd@grs^0,w,c
  7459  001C20  0901               	iorlw	1
  7460  001C22  6E3E               	movwf	___fladd@grs^0,c
  7461  001C24  EF16  F00E         	goto	l3050
  7462  001C28                     l3048:
  7463  001C28  90D8               	bcf	status,0,c
  7464  001C2A  323E               	rrcf	___fladd@grs^0,f,c
  7465  001C2C                     l3050:
  7466  001C2C  A02F               	btfss	___fladd@b^0,0,c
  7467  001C2E  EF1B  F00E         	goto	u2821
  7468  001C32  EF1D  F00E         	goto	u2820
  7469  001C36                     u2821:
  7470  001C36  EF1E  F00E         	goto	l3054
  7471  001C3A                     u2820:
  7472  001C3A  8E3E               	bsf	___fladd@grs^0,7,c
  7473  001C3C                     l3054:
  7474  001C3C  3432               	rlcf	(___fladd@b+3)^0,w,c
  7475  001C3E  3232               	rrcf	(___fladd@b+3)^0,f,c
  7476  001C40  3231               	rrcf	(___fladd@b+2)^0,f,c
  7477  001C42  3230               	rrcf	(___fladd@b+1)^0,f,c
  7478  001C44  322F               	rrcf	___fladd@b^0,f,c
  7479  001C46  2A3D               	incf	___fladd@bexp^0,f,c
  7480  001C48  EFB3  F00E         	goto	l3094
  7481  001C4C                     l3058:
  7482  001C4C  5033               	movf	___fladd@a^0,w,c
  7483  001C4E  5C2F               	subwf	___fladd@b^0,w,c
  7484  001C50  5034               	movf	(___fladd@a+1)^0,w,c
  7485  001C52  5830               	subwfb	(___fladd@b+1)^0,w,c
  7486  001C54  5035               	movf	(___fladd@a+2)^0,w,c
  7487  001C56  5831               	subwfb	(___fladd@b+2)^0,w,c
  7488  001C58  5032               	movf	(___fladd@b+3)^0,w,c
  7489  001C5A  0A80               	xorlw	128
  7490  001C5C  6E37               	movwf	??___fladd^0,c
  7491  001C5E  5036               	movf	(___fladd@a+3)^0,w,c
  7492  001C60  0A80               	xorlw	128
  7493  001C62  5837               	subwfb	??___fladd^0,w,c
  7494  001C64  B0D8               	btfsc	status,0,c
  7495  001C66  EF37  F00E         	goto	u2831
  7496  001C6A  EF39  F00E         	goto	u2830
  7497  001C6E                     u2831:
  7498  001C6E  EF64  F00E         	goto	l3068
  7499  001C72                     u2830:
  7500  001C72  502F               	movf	___fladd@b^0,w,c
  7501  001C74  5C33               	subwf	___fladd@a^0,w,c
  7502  001C76  6E37               	movwf	??___fladd^0,c
  7503  001C78  5030               	movf	(___fladd@b+1)^0,w,c
  7504  001C7A  5834               	subwfb	(___fladd@a+1)^0,w,c
  7505  001C7C  6E38               	movwf	(??___fladd+1)^0,c
  7506  001C7E  5031               	movf	(___fladd@b+2)^0,w,c
  7507  001C80  5835               	subwfb	(___fladd@a+2)^0,w,c
  7508  001C82  6E39               	movwf	(??___fladd+2)^0,c
  7509  001C84  5032               	movf	(___fladd@b+3)^0,w,c
  7510  001C86  5836               	subwfb	(___fladd@a+3)^0,w,c
  7511  001C88  6E3A               	movwf	(??___fladd+3)^0,c
  7512  001C8A  0EFF               	movlw	255
  7513  001C8C  2437               	addwf	??___fladd^0,w,c
  7514  001C8E  6E2F               	movwf	___fladd@b^0,c
  7515  001C90  0EFF               	movlw	255
  7516  001C92  2038               	addwfc	(??___fladd+1)^0,w,c
  7517  001C94  6E30               	movwf	(___fladd@b+1)^0,c
  7518  001C96  0EFF               	movlw	255
  7519  001C98  2039               	addwfc	(??___fladd+2)^0,w,c
  7520  001C9A  6E31               	movwf	(___fladd@b+2)^0,c
  7521  001C9C  0EFF               	movlw	255
  7522  001C9E  203A               	addwfc	(??___fladd+3)^0,w,c
  7523  001CA0  6E32               	movwf	(___fladd@b+3)^0,c
  7524  001CA2  0E80               	movlw	128
  7525  001CA4  1A3B               	xorwf	___fladd@signs^0,f,c
  7526  001CA6  6C3E               	negf	___fladd@grs^0,c
  7527  001CA8  503E               	movf	___fladd@grs^0,w,c
  7528  001CAA  A4D8               	btfss	status,2,c
  7529  001CAC  EF5A  F00E         	goto	u2841
  7530  001CB0  EF5C  F00E         	goto	u2840
  7531  001CB4                     u2841:
  7532  001CB4  EF6C  F00E         	goto	l777
  7533  001CB8                     u2840:
  7534  001CB8  0E01               	movlw	1
  7535  001CBA  262F               	addwf	___fladd@b^0,f,c
  7536  001CBC  0E00               	movlw	0
  7537  001CBE  2230               	addwfc	(___fladd@b+1)^0,f,c
  7538  001CC0  2231               	addwfc	(___fladd@b+2)^0,f,c
  7539  001CC2  2232               	addwfc	(___fladd@b+3)^0,f,c
  7540  001CC4  EF6C  F00E         	goto	l777
  7541  001CC8                     l3068:
  7542  001CC8  5033               	movf	___fladd@a^0,w,c
  7543  001CCA  5E2F               	subwf	___fladd@b^0,f,c
  7544  001CCC  5034               	movf	(___fladd@a+1)^0,w,c
  7545  001CCE  5A30               	subwfb	(___fladd@b+1)^0,f,c
  7546  001CD0  5035               	movf	(___fladd@a+2)^0,w,c
  7547  001CD2  5A31               	subwfb	(___fladd@b+2)^0,f,c
  7548  001CD4  5036               	movf	(___fladd@a+3)^0,w,c
  7549  001CD6  5A32               	subwfb	(___fladd@b+3)^0,f,c
  7550  001CD8                     l777:
  7551  001CD8  502F               	movf	___fladd@b^0,w,c
  7552  001CDA  1030               	iorwf	(___fladd@b+1)^0,w,c
  7553  001CDC  1031               	iorwf	(___fladd@b+2)^0,w,c
  7554  001CDE  1032               	iorwf	(___fladd@b+3)^0,w,c
  7555  001CE0  A4D8               	btfss	status,2,c
  7556  001CE2  EF75  F00E         	goto	u2851
  7557  001CE6  EF77  F00E         	goto	u2850
  7558  001CEA                     u2851:
  7559  001CEA  EFAC  F00E         	goto	l3092
  7560  001CEE                     u2850:
  7561  001CEE  503E               	movf	___fladd@grs^0,w,c
  7562  001CF0  A4D8               	btfss	status,2,c
  7563  001CF2  EF7D  F00E         	goto	u2861
  7564  001CF6  EF7F  F00E         	goto	u2860
  7565  001CFA                     u2861:
  7566  001CFA  EFAC  F00E         	goto	l3092
  7567  001CFE                     u2860:
  7568  001CFE  0E00               	movlw	0
  7569  001D00  6E2F               	movwf	?___fladd^0,c
  7570  001D02  0E00               	movlw	0
  7571  001D04  6E30               	movwf	(?___fladd+1)^0,c
  7572  001D06  0E00               	movlw	0
  7573  001D08  6E31               	movwf	(?___fladd+2)^0,c
  7574  001D0A  0E00               	movlw	0
  7575  001D0C  6E32               	movwf	(?___fladd+3)^0,c
  7576  001D0E  EF47  F00F         	goto	l769
  7577  001D12                     l3076:
  7578  001D12  90D8               	bcf	status,0,c
  7579  001D14  362F               	rlcf	___fladd@b^0,f,c
  7580  001D16  3630               	rlcf	(___fladd@b+1)^0,f,c
  7581  001D18  3631               	rlcf	(___fladd@b+2)^0,f,c
  7582  001D1A  3632               	rlcf	(___fladd@b+3)^0,f,c
  7583  001D1C  AE3E               	btfss	___fladd@grs^0,7,c
  7584  001D1E  EF93  F00E         	goto	u2871
  7585  001D22  EF95  F00E         	goto	u2870
  7586  001D26                     u2871:
  7587  001D26  EF96  F00E         	goto	l3082
  7588  001D2A                     u2870:
  7589  001D2A  802F               	bsf	___fladd@b^0,0,c
  7590  001D2C                     l3082:
  7591  001D2C  A03E               	btfss	___fladd@grs^0,0,c
  7592  001D2E  EF9B  F00E         	goto	u2881
  7593  001D32  EF9D  F00E         	goto	u2880
  7594  001D36                     u2881:
  7595  001D36  EFA1  F00E         	goto	l3086
  7596  001D3A                     u2880:
  7597  001D3A  80D8               	bsf	status,0,c
  7598  001D3C  363E               	rlcf	___fladd@grs^0,f,c
  7599  001D3E  EFA3  F00E         	goto	l3088
  7600  001D42                     l3086:
  7601  001D42  90D8               	bcf	status,0,c
  7602  001D44  363E               	rlcf	___fladd@grs^0,f,c
  7603  001D46                     l3088:
  7604  001D46  503D               	movf	___fladd@bexp^0,w,c
  7605  001D48  B4D8               	btfsc	status,2,c
  7606  001D4A  EFA9  F00E         	goto	u2891
  7607  001D4E  EFAB  F00E         	goto	u2890
  7608  001D52                     u2891:
  7609  001D52  EFAC  F00E         	goto	l3092
  7610  001D56                     u2890:
  7611  001D56  063D               	decf	___fladd@bexp^0,f,c
  7612  001D58                     l3092:
  7613  001D58  AE31               	btfss	(___fladd@b+2)^0,7,c
  7614  001D5A  EFB1  F00E         	goto	u2901
  7615  001D5E  EFB3  F00E         	goto	u2900
  7616  001D62                     u2901:
  7617  001D62  EF89  F00E         	goto	l3076
  7618  001D66                     u2900:
  7619  001D66                     l3094:
  7620  001D66  0E00               	movlw	0
  7621  001D68  6E3C               	movwf	___fladd@aexp^0,c
  7622  001D6A  AE3E               	btfss	___fladd@grs^0,7,c
  7623  001D6C  EFBA  F00E         	goto	u2911
  7624  001D70  EFBC  F00E         	goto	u2910
  7625  001D74                     u2911:
  7626  001D74  EFD4  F00E         	goto	l786
  7627  001D78                     u2910:
  7628  001D78  C03E  F037         	movff	___fladd@grs,??___fladd
  7629  001D7C  0E7F               	movlw	127
  7630  001D7E  1637               	andwf	??___fladd^0,f,c
  7631  001D80  B4D8               	btfsc	status,2,c
  7632  001D82  EFC5  F00E         	goto	u2921
  7633  001D86  EFC7  F00E         	goto	u2920
  7634  001D8A                     u2921:
  7635  001D8A  EFCB  F00E         	goto	l787
  7636  001D8E                     u2920:
  7637  001D8E                     l3100:
  7638  001D8E  0E01               	movlw	1
  7639  001D90  6E3C               	movwf	___fladd@aexp^0,c
  7640  001D92  EFD4  F00E         	goto	l786
  7641  001D96                     l787:
  7642  001D96  A02F               	btfss	___fladd@b^0,0,c
  7643  001D98  EFD0  F00E         	goto	u2931
  7644  001D9C  EFD2  F00E         	goto	u2930
  7645  001DA0                     u2931:
  7646  001DA0  EFD4  F00E         	goto	l786
  7647  001DA4                     u2930:
  7648  001DA4  EFC7  F00E         	goto	l3100
  7649  001DA8                     l786:
  7650  001DA8  503C               	movf	___fladd@aexp^0,w,c
  7651  001DAA  B4D8               	btfsc	status,2,c
  7652  001DAC  EFDA  F00E         	goto	u2941
  7653  001DB0  EFDC  F00E         	goto	u2940
  7654  001DB4                     u2941:
  7655  001DB4  EF07  F00F         	goto	l3112
  7656  001DB8                     u2940:
  7657  001DB8  0E01               	movlw	1
  7658  001DBA  262F               	addwf	___fladd@b^0,f,c
  7659  001DBC  0E00               	movlw	0
  7660  001DBE  2230               	addwfc	(___fladd@b+1)^0,f,c
  7661  001DC0  2231               	addwfc	(___fladd@b+2)^0,f,c
  7662  001DC2  2232               	addwfc	(___fladd@b+3)^0,f,c
  7663  001DC4  A032               	btfss	(___fladd@b+3)^0,0,c
  7664  001DC6  EFE7  F00E         	goto	u2951
  7665  001DCA  EFE9  F00E         	goto	u2950
  7666  001DCE                     u2951:
  7667  001DCE  EF07  F00F         	goto	l3112
  7668  001DD2                     u2950:
  7669  001DD2  C02F  F037         	movff	___fladd@b,??___fladd
  7670  001DD6  C030  F038         	movff	___fladd@b+1,??___fladd+1
  7671  001DDA  C031  F039         	movff	___fladd@b+2,??___fladd+2
  7672  001DDE  C032  F03A         	movff	___fladd@b+3,??___fladd+3
  7673  001DE2  343A               	rlcf	(??___fladd+3)^0,w,c
  7674  001DE4  323A               	rrcf	(??___fladd+3)^0,f,c
  7675  001DE6  3239               	rrcf	(??___fladd+2)^0,f,c
  7676  001DE8  3238               	rrcf	(??___fladd+1)^0,f,c
  7677  001DEA  3237               	rrcf	??___fladd^0,f,c
  7678  001DEC  C037  F02F         	movff	??___fladd,___fladd@b
  7679  001DF0  C038  F030         	movff	??___fladd+1,___fladd@b+1
  7680  001DF4  C039  F031         	movff	??___fladd+2,___fladd@b+2
  7681  001DF8  C03A  F032         	movff	??___fladd+3,___fladd@b+3
  7682  001DFC  283D               	incf	___fladd@bexp^0,w,c
  7683  001DFE  B4D8               	btfsc	status,2,c
  7684  001E00  EF04  F00F         	goto	u2961
  7685  001E04  EF06  F00F         	goto	u2960
  7686  001E08                     u2961:
  7687  001E08  EF07  F00F         	goto	l3112
  7688  001E0C                     u2960:
  7689  001E0C  2A3D               	incf	___fladd@bexp^0,f,c
  7690  001E0E                     l3112:
  7691  001E0E  283D               	incf	___fladd@bexp^0,w,c
  7692  001E10  B4D8               	btfsc	status,2,c
  7693  001E12  EF0D  F00F         	goto	u2971
  7694  001E16  EF0F  F00F         	goto	u2970
  7695  001E1A                     u2971:
  7696  001E1A  EF17  F00F         	goto	l3116
  7697  001E1E                     u2970:
  7698  001E1E  503D               	movf	___fladd@bexp^0,w,c
  7699  001E20  A4D8               	btfss	status,2,c
  7700  001E22  EF15  F00F         	goto	u2981
  7701  001E26  EF17  F00F         	goto	u2980
  7702  001E2A                     u2981:
  7703  001E2A  EF29  F00F         	goto	l3120
  7704  001E2E                     u2980:
  7705  001E2E                     l3116:
  7706  001E2E  0E00               	movlw	0
  7707  001E30  6E2F               	movwf	___fladd@b^0,c
  7708  001E32  0E00               	movlw	0
  7709  001E34  6E30               	movwf	(___fladd@b+1)^0,c
  7710  001E36  0E00               	movlw	0
  7711  001E38  6E31               	movwf	(___fladd@b+2)^0,c
  7712  001E3A  0E00               	movlw	0
  7713  001E3C  6E32               	movwf	(___fladd@b+3)^0,c
  7714  001E3E  503D               	movf	___fladd@bexp^0,w,c
  7715  001E40  A4D8               	btfss	status,2,c
  7716  001E42  EF25  F00F         	goto	u2991
  7717  001E46  EF27  F00F         	goto	u2990
  7718  001E4A                     u2991:
  7719  001E4A  EF29  F00F         	goto	l3120
  7720  001E4E                     u2990:
  7721  001E4E  0E00               	movlw	0
  7722  001E50  6E3B               	movwf	___fladd@signs^0,c
  7723  001E52                     l3120:
  7724  001E52  A03D               	btfss	___fladd@bexp^0,0,c
  7725  001E54  EF2E  F00F         	goto	u3001
  7726  001E58  EF30  F00F         	goto	u3000
  7727  001E5C                     u3001:
  7728  001E5C  EF33  F00F         	goto	l3124
  7729  001E60                     u3000:
  7730  001E60  8E31               	bsf	(___fladd@b+2)^0,7,c
  7731  001E62  EF34  F00F         	goto	l3126
  7732  001E66                     l3124:
  7733  001E66  9E31               	bcf	(___fladd@b+2)^0,7,c
  7734  001E68                     l3126:
  7735  001E68  90D8               	bcf	status,0,c
  7736  001E6A  303D               	rrcf	___fladd@bexp^0,w,c
  7737  001E6C  6E32               	movwf	(___fladd@b+3)^0,c
  7738  001E6E  AE3B               	btfss	___fladd@signs^0,7,c
  7739  001E70  EF3C  F00F         	goto	u3011
  7740  001E74  EF3E  F00F         	goto	u3010
  7741  001E78                     u3011:
  7742  001E78  EF3F  F00F         	goto	l3132
  7743  001E7C                     u3010:
  7744  001E7C  8E32               	bsf	(___fladd@b+3)^0,7,c
  7745  001E7E                     l3132:
  7746  001E7E  C02F  F02F         	movff	___fladd@b,?___fladd
  7747  001E82  C030  F030         	movff	___fladd@b+1,?___fladd+1
  7748  001E86  C031  F031         	movff	___fladd@b+2,?___fladd+2
  7749  001E8A  C032  F032         	movff	___fladd@b+3,?___fladd+3
  7750  001E8E                     l769:
  7751  001E8E  0012               	return		;funcret
  7752  001E90                     __end_of___fladd:
  7753                           	callstack 0
  7754                           
  7755 ;; *************** function _MPU6050_Read_Gz *****************
  7756 ;; Defined at:
  7757 ;;		line 70 in file "mpu6050.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;		None
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;		None
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  4   46[COMRAM] float 
  7764 ;; Registers used:
  7765 ;;		wreg, status,2, status,0, cstack
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7771 ;;      Params:         4       0       0       0       0       0       0       0       0
  7772 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7773 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7774 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7775 ;;Total ram usage:        6 bytes
  7776 ;; Hardware stack levels used: 1
  7777 ;; Hardware stack levels required when called: 2
  7778 ;; This function calls:
  7779 ;;		_MPU6050_Read
  7780 ;;		___fldiv
  7781 ;;		___xxtofl
  7782 ;; This function is called by:
  7783 ;;		_main
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text30
  7788  003790                     __ptext30:
  7789                           	callstack 0
  7790  003790                     _MPU6050_Read_Gz:
  7791                           	callstack 28
  7792  003790                     
  7793                           ;mpu6050.c: 72:     return (float)(((int)(MPU6050_Read(0x47) << 8 | MPU6050_Read(0x48)))
      +                          /(float)131);;
  7794  003790  0E47               	movlw	71
  7795  003792  ECDA  F01E         	call	_MPU6050_Read
  7796  003796  C002  F033         	movff	?_MPU6050_Read,??_MPU6050_Read_Gz
  7797  00379A  C003  F034         	movff	?_MPU6050_Read+1,??_MPU6050_Read_Gz+1
  7798  00379E  C033  F034         	movff	??_MPU6050_Read_Gz,??_MPU6050_Read_Gz+1
  7799  0037A2  6A33               	clrf	??_MPU6050_Read_Gz^0,c
  7800  0037A4  0E48               	movlw	72
  7801  0037A6  ECDA  F01E         	call	_MPU6050_Read
  7802  0037AA  5002               	movf	?_MPU6050_Read^0,w,c
  7803  0037AC  1233               	iorwf	??_MPU6050_Read_Gz^0,f,c
  7804  0037AE  5003               	movf	(?_MPU6050_Read+1)^0,w,c
  7805  0037B0  1234               	iorwf	(??_MPU6050_Read_Gz+1)^0,f,c
  7806  0037B2  C033  F008         	movff	??_MPU6050_Read_Gz,___xxtofl@val
  7807  0037B6  C034  F009         	movff	??_MPU6050_Read_Gz+1,___xxtofl@val+1
  7808  0037BA  0E00               	movlw	0
  7809  0037BC  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  7810  0037BE  0EFF               	movlw	-1
  7811  0037C0  6E0A               	movwf	(___xxtofl@val+2)^0,c
  7812  0037C2  6E0B               	movwf	(___xxtofl@val+3)^0,c
  7813  0037C4  0E01               	movlw	1
  7814  0037C6  EC67  F015         	call	___xxtofl
  7815  0037CA  C008  F016         	movff	?___xxtofl,___fldiv@b
  7816  0037CE  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  7817  0037D2  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  7818  0037D6  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  7819  0037DA  0E00               	movlw	0
  7820  0037DC  6E1A               	movwf	___fldiv@a^0,c
  7821  0037DE  0E00               	movlw	0
  7822  0037E0  6E1B               	movwf	(___fldiv@a+1)^0,c
  7823  0037E2  0E03               	movlw	3
  7824  0037E4  6E1C               	movwf	(___fldiv@a+2)^0,c
  7825  0037E6  0E43               	movlw	67
  7826  0037E8  6E1D               	movwf	(___fldiv@a+3)^0,c
  7827  0037EA  EC5D  F011         	call	___fldiv	;wreg free
  7828  0037EE  C016  F02F         	movff	?___fldiv,?_MPU6050_Read_Gz
  7829  0037F2  C017  F030         	movff	?___fldiv+1,?_MPU6050_Read_Gz+1
  7830  0037F6  C018  F031         	movff	?___fldiv+2,?_MPU6050_Read_Gz+2
  7831  0037FA  C019  F032         	movff	?___fldiv+3,?_MPU6050_Read_Gz+3
  7832  0037FE  0012               	return		;funcret
  7833  003800                     __end_of_MPU6050_Read_Gz:
  7834                           	callstack 0
  7835                           
  7836 ;; *************** function _MPU6050_Read_Gy *****************
  7837 ;; Defined at:
  7838 ;;		line 65 in file "mpu6050.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;		None
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;		None
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  4   46[COMRAM] float 
  7845 ;; Registers used:
  7846 ;;		wreg, status,2, status,0, cstack
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7852 ;;      Params:         4       0       0       0       0       0       0       0       0
  7853 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7854 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7855 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7856 ;;Total ram usage:        6 bytes
  7857 ;; Hardware stack levels used: 1
  7858 ;; Hardware stack levels required when called: 2
  7859 ;; This function calls:
  7860 ;;		_MPU6050_Read
  7861 ;;		___fldiv
  7862 ;;		___xxtofl
  7863 ;; This function is called by:
  7864 ;;		_main
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           	psect	text31
  7869  003800                     __ptext31:
  7870                           	callstack 0
  7871  003800                     _MPU6050_Read_Gy:
  7872                           	callstack 28
  7873  003800                     
  7874                           ;mpu6050.c: 67:     return (float)(((int)(MPU6050_Read(0x45) << 8 | MPU6050_Read(0x46)))
      +                          /(float)131);
  7875  003800  0E45               	movlw	69
  7876  003802  ECDA  F01E         	call	_MPU6050_Read
  7877  003806  C002  F033         	movff	?_MPU6050_Read,??_MPU6050_Read_Gy
  7878  00380A  C003  F034         	movff	?_MPU6050_Read+1,??_MPU6050_Read_Gy+1
  7879  00380E  C033  F034         	movff	??_MPU6050_Read_Gy,??_MPU6050_Read_Gy+1
  7880  003812  6A33               	clrf	??_MPU6050_Read_Gy^0,c
  7881  003814  0E46               	movlw	70
  7882  003816  ECDA  F01E         	call	_MPU6050_Read
  7883  00381A  5002               	movf	?_MPU6050_Read^0,w,c
  7884  00381C  1233               	iorwf	??_MPU6050_Read_Gy^0,f,c
  7885  00381E  5003               	movf	(?_MPU6050_Read+1)^0,w,c
  7886  003820  1234               	iorwf	(??_MPU6050_Read_Gy+1)^0,f,c
  7887  003822  C033  F008         	movff	??_MPU6050_Read_Gy,___xxtofl@val
  7888  003826  C034  F009         	movff	??_MPU6050_Read_Gy+1,___xxtofl@val+1
  7889  00382A  0E00               	movlw	0
  7890  00382C  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  7891  00382E  0EFF               	movlw	-1
  7892  003830  6E0A               	movwf	(___xxtofl@val+2)^0,c
  7893  003832  6E0B               	movwf	(___xxtofl@val+3)^0,c
  7894  003834  0E01               	movlw	1
  7895  003836  EC67  F015         	call	___xxtofl
  7896  00383A  C008  F016         	movff	?___xxtofl,___fldiv@b
  7897  00383E  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  7898  003842  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  7899  003846  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  7900  00384A  0E00               	movlw	0
  7901  00384C  6E1A               	movwf	___fldiv@a^0,c
  7902  00384E  0E00               	movlw	0
  7903  003850  6E1B               	movwf	(___fldiv@a+1)^0,c
  7904  003852  0E03               	movlw	3
  7905  003854  6E1C               	movwf	(___fldiv@a+2)^0,c
  7906  003856  0E43               	movlw	67
  7907  003858  6E1D               	movwf	(___fldiv@a+3)^0,c
  7908  00385A  EC5D  F011         	call	___fldiv	;wreg free
  7909  00385E  C016  F02F         	movff	?___fldiv,?_MPU6050_Read_Gy
  7910  003862  C017  F030         	movff	?___fldiv+1,?_MPU6050_Read_Gy+1
  7911  003866  C018  F031         	movff	?___fldiv+2,?_MPU6050_Read_Gy+2
  7912  00386A  C019  F032         	movff	?___fldiv+3,?_MPU6050_Read_Gy+3
  7913  00386E  0012               	return		;funcret
  7914  003870                     __end_of_MPU6050_Read_Gy:
  7915                           	callstack 0
  7916                           
  7917 ;; *************** function _MPU6050_Read_Gx *****************
  7918 ;; Defined at:
  7919 ;;		line 60 in file "mpu6050.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;		None
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;		None
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  4   46[COMRAM] float 
  7926 ;; Registers used:
  7927 ;;		wreg, status,2, status,0, cstack
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7933 ;;      Params:         4       0       0       0       0       0       0       0       0
  7934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7935 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7936 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7937 ;;Total ram usage:        6 bytes
  7938 ;; Hardware stack levels used: 1
  7939 ;; Hardware stack levels required when called: 2
  7940 ;; This function calls:
  7941 ;;		_MPU6050_Read
  7942 ;;		___fldiv
  7943 ;;		___xxtofl
  7944 ;; This function is called by:
  7945 ;;		_main
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           	psect	text32
  7950  003870                     __ptext32:
  7951                           	callstack 0
  7952  003870                     _MPU6050_Read_Gx:
  7953                           	callstack 28
  7954  003870                     
  7955                           ;mpu6050.c: 62:     return (float)(((int)(MPU6050_Read(0x43) << 8 | MPU6050_Read(0x44)))
      +                          /(float)131);
  7956  003870  0E43               	movlw	67
  7957  003872  ECDA  F01E         	call	_MPU6050_Read
  7958  003876  C002  F033         	movff	?_MPU6050_Read,??_MPU6050_Read_Gx
  7959  00387A  C003  F034         	movff	?_MPU6050_Read+1,??_MPU6050_Read_Gx+1
  7960  00387E  C033  F034         	movff	??_MPU6050_Read_Gx,??_MPU6050_Read_Gx+1
  7961  003882  6A33               	clrf	??_MPU6050_Read_Gx^0,c
  7962  003884  0E44               	movlw	68
  7963  003886  ECDA  F01E         	call	_MPU6050_Read
  7964  00388A  5002               	movf	?_MPU6050_Read^0,w,c
  7965  00388C  1233               	iorwf	??_MPU6050_Read_Gx^0,f,c
  7966  00388E  5003               	movf	(?_MPU6050_Read+1)^0,w,c
  7967  003890  1234               	iorwf	(??_MPU6050_Read_Gx+1)^0,f,c
  7968  003892  C033  F008         	movff	??_MPU6050_Read_Gx,___xxtofl@val
  7969  003896  C034  F009         	movff	??_MPU6050_Read_Gx+1,___xxtofl@val+1
  7970  00389A  0E00               	movlw	0
  7971  00389C  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  7972  00389E  0EFF               	movlw	-1
  7973  0038A0  6E0A               	movwf	(___xxtofl@val+2)^0,c
  7974  0038A2  6E0B               	movwf	(___xxtofl@val+3)^0,c
  7975  0038A4  0E01               	movlw	1
  7976  0038A6  EC67  F015         	call	___xxtofl
  7977  0038AA  C008  F016         	movff	?___xxtofl,___fldiv@b
  7978  0038AE  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  7979  0038B2  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  7980  0038B6  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  7981  0038BA  0E00               	movlw	0
  7982  0038BC  6E1A               	movwf	___fldiv@a^0,c
  7983  0038BE  0E00               	movlw	0
  7984  0038C0  6E1B               	movwf	(___fldiv@a+1)^0,c
  7985  0038C2  0E03               	movlw	3
  7986  0038C4  6E1C               	movwf	(___fldiv@a+2)^0,c
  7987  0038C6  0E43               	movlw	67
  7988  0038C8  6E1D               	movwf	(___fldiv@a+3)^0,c
  7989  0038CA  EC5D  F011         	call	___fldiv	;wreg free
  7990  0038CE  C016  F02F         	movff	?___fldiv,?_MPU6050_Read_Gx
  7991  0038D2  C017  F030         	movff	?___fldiv+1,?_MPU6050_Read_Gx+1
  7992  0038D6  C018  F031         	movff	?___fldiv+2,?_MPU6050_Read_Gx+2
  7993  0038DA  C019  F032         	movff	?___fldiv+3,?_MPU6050_Read_Gx+3
  7994  0038DE  0012               	return		;funcret
  7995  0038E0                     __end_of_MPU6050_Read_Gx:
  7996                           	callstack 0
  7997                           
  7998 ;; *************** function _MPU6050_Read_Az *****************
  7999 ;; Defined at:
  8000 ;;		line 55 in file "mpu6050.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;		None
  8003 ;; Auto vars:     Size  Location     Type
  8004 ;;		None
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  4   46[COMRAM] float 
  8007 ;; Registers used:
  8008 ;;		wreg, status,2, status,0, cstack
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/0
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8014 ;;      Params:         4       0       0       0       0       0       0       0       0
  8015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8016 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8017 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8018 ;;Total ram usage:        6 bytes
  8019 ;; Hardware stack levels used: 1
  8020 ;; Hardware stack levels required when called: 2
  8021 ;; This function calls:
  8022 ;;		_MPU6050_Read
  8023 ;;		___fldiv
  8024 ;;		___xxtofl
  8025 ;; This function is called by:
  8026 ;;		_main
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text33
  8031  0038E0                     __ptext33:
  8032                           	callstack 0
  8033  0038E0                     _MPU6050_Read_Az:
  8034                           	callstack 28
  8035  0038E0                     
  8036                           ;mpu6050.c: 57:     return (float)(((int)(MPU6050_Read(0x3F) << 8 | MPU6050_Read(0x40)))
      +                          /(float)16384);
  8037  0038E0  0E3F               	movlw	63
  8038  0038E2  ECDA  F01E         	call	_MPU6050_Read
  8039  0038E6  C002  F033         	movff	?_MPU6050_Read,??_MPU6050_Read_Az
  8040  0038EA  C003  F034         	movff	?_MPU6050_Read+1,??_MPU6050_Read_Az+1
  8041  0038EE  C033  F034         	movff	??_MPU6050_Read_Az,??_MPU6050_Read_Az+1
  8042  0038F2  6A33               	clrf	??_MPU6050_Read_Az^0,c
  8043  0038F4  0E40               	movlw	64
  8044  0038F6  ECDA  F01E         	call	_MPU6050_Read
  8045  0038FA  5002               	movf	?_MPU6050_Read^0,w,c
  8046  0038FC  1233               	iorwf	??_MPU6050_Read_Az^0,f,c
  8047  0038FE  5003               	movf	(?_MPU6050_Read+1)^0,w,c
  8048  003900  1234               	iorwf	(??_MPU6050_Read_Az+1)^0,f,c
  8049  003902  C033  F008         	movff	??_MPU6050_Read_Az,___xxtofl@val
  8050  003906  C034  F009         	movff	??_MPU6050_Read_Az+1,___xxtofl@val+1
  8051  00390A  0E00               	movlw	0
  8052  00390C  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  8053  00390E  0EFF               	movlw	-1
  8054  003910  6E0A               	movwf	(___xxtofl@val+2)^0,c
  8055  003912  6E0B               	movwf	(___xxtofl@val+3)^0,c
  8056  003914  0E01               	movlw	1
  8057  003916  EC67  F015         	call	___xxtofl
  8058  00391A  C008  F016         	movff	?___xxtofl,___fldiv@b
  8059  00391E  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  8060  003922  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  8061  003926  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  8062  00392A  0E00               	movlw	0
  8063  00392C  6E1A               	movwf	___fldiv@a^0,c
  8064  00392E  0E00               	movlw	0
  8065  003930  6E1B               	movwf	(___fldiv@a+1)^0,c
  8066  003932  0E80               	movlw	128
  8067  003934  6E1C               	movwf	(___fldiv@a+2)^0,c
  8068  003936  0E46               	movlw	70
  8069  003938  6E1D               	movwf	(___fldiv@a+3)^0,c
  8070  00393A  EC5D  F011         	call	___fldiv	;wreg free
  8071  00393E  C016  F02F         	movff	?___fldiv,?_MPU6050_Read_Az
  8072  003942  C017  F030         	movff	?___fldiv+1,?_MPU6050_Read_Az+1
  8073  003946  C018  F031         	movff	?___fldiv+2,?_MPU6050_Read_Az+2
  8074  00394A  C019  F032         	movff	?___fldiv+3,?_MPU6050_Read_Az+3
  8075  00394E  0012               	return		;funcret
  8076  003950                     __end_of_MPU6050_Read_Az:
  8077                           	callstack 0
  8078                           
  8079 ;; *************** function _MPU6050_Read_Ay *****************
  8080 ;; Defined at:
  8081 ;;		line 50 in file "mpu6050.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;		None
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;		None
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  4   46[COMRAM] float 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2, status,0, cstack
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8095 ;;      Params:         4       0       0       0       0       0       0       0       0
  8096 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8097 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8098 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8099 ;;Total ram usage:        6 bytes
  8100 ;; Hardware stack levels used: 1
  8101 ;; Hardware stack levels required when called: 2
  8102 ;; This function calls:
  8103 ;;		_MPU6050_Read
  8104 ;;		___fldiv
  8105 ;;		___xxtofl
  8106 ;; This function is called by:
  8107 ;;		_main
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text34
  8112  003950                     __ptext34:
  8113                           	callstack 0
  8114  003950                     _MPU6050_Read_Ay:
  8115                           	callstack 28
  8116  003950                     
  8117                           ;mpu6050.c: 52:     return (float)(((int)(MPU6050_Read(0x3D) << 8 | MPU6050_Read(0x3E)))
      +                          /(float)16384);
  8118  003950  0E3D               	movlw	61
  8119  003952  ECDA  F01E         	call	_MPU6050_Read
  8120  003956  C002  F033         	movff	?_MPU6050_Read,??_MPU6050_Read_Ay
  8121  00395A  C003  F034         	movff	?_MPU6050_Read+1,??_MPU6050_Read_Ay+1
  8122  00395E  C033  F034         	movff	??_MPU6050_Read_Ay,??_MPU6050_Read_Ay+1
  8123  003962  6A33               	clrf	??_MPU6050_Read_Ay^0,c
  8124  003964  0E3E               	movlw	62
  8125  003966  ECDA  F01E         	call	_MPU6050_Read
  8126  00396A  5002               	movf	?_MPU6050_Read^0,w,c
  8127  00396C  1233               	iorwf	??_MPU6050_Read_Ay^0,f,c
  8128  00396E  5003               	movf	(?_MPU6050_Read+1)^0,w,c
  8129  003970  1234               	iorwf	(??_MPU6050_Read_Ay+1)^0,f,c
  8130  003972  C033  F008         	movff	??_MPU6050_Read_Ay,___xxtofl@val
  8131  003976  C034  F009         	movff	??_MPU6050_Read_Ay+1,___xxtofl@val+1
  8132  00397A  0E00               	movlw	0
  8133  00397C  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  8134  00397E  0EFF               	movlw	-1
  8135  003980  6E0A               	movwf	(___xxtofl@val+2)^0,c
  8136  003982  6E0B               	movwf	(___xxtofl@val+3)^0,c
  8137  003984  0E01               	movlw	1
  8138  003986  EC67  F015         	call	___xxtofl
  8139  00398A  C008  F016         	movff	?___xxtofl,___fldiv@b
  8140  00398E  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  8141  003992  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  8142  003996  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  8143  00399A  0E00               	movlw	0
  8144  00399C  6E1A               	movwf	___fldiv@a^0,c
  8145  00399E  0E00               	movlw	0
  8146  0039A0  6E1B               	movwf	(___fldiv@a+1)^0,c
  8147  0039A2  0E80               	movlw	128
  8148  0039A4  6E1C               	movwf	(___fldiv@a+2)^0,c
  8149  0039A6  0E46               	movlw	70
  8150  0039A8  6E1D               	movwf	(___fldiv@a+3)^0,c
  8151  0039AA  EC5D  F011         	call	___fldiv	;wreg free
  8152  0039AE  C016  F02F         	movff	?___fldiv,?_MPU6050_Read_Ay
  8153  0039B2  C017  F030         	movff	?___fldiv+1,?_MPU6050_Read_Ay+1
  8154  0039B6  C018  F031         	movff	?___fldiv+2,?_MPU6050_Read_Ay+2
  8155  0039BA  C019  F032         	movff	?___fldiv+3,?_MPU6050_Read_Ay+3
  8156  0039BE  0012               	return		;funcret
  8157  0039C0                     __end_of_MPU6050_Read_Ay:
  8158                           	callstack 0
  8159                           
  8160 ;; *************** function _MPU6050_Read_Ax *****************
  8161 ;; Defined at:
  8162 ;;		line 45 in file "mpu6050.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;		None
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;		None
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  4   46[COMRAM] float 
  8169 ;; Registers used:
  8170 ;;		wreg, status,2, status,0, cstack
  8171 ;; Tracked objects:
  8172 ;;		On entry : 0/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8176 ;;      Params:         4       0       0       0       0       0       0       0       0
  8177 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8178 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8179 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8180 ;;Total ram usage:        6 bytes
  8181 ;; Hardware stack levels used: 1
  8182 ;; Hardware stack levels required when called: 2
  8183 ;; This function calls:
  8184 ;;		_MPU6050_Read
  8185 ;;		___fldiv
  8186 ;;		___xxtofl
  8187 ;; This function is called by:
  8188 ;;		_main
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text35
  8193  0039C0                     __ptext35:
  8194                           	callstack 0
  8195  0039C0                     _MPU6050_Read_Ax:
  8196                           	callstack 28
  8197  0039C0                     
  8198                           ;mpu6050.c: 47:     return (float)(((int)(MPU6050_Read(0x3B) << 8 | MPU6050_Read(0x3C)))
      +                          /(float)16384);
  8199  0039C0  0E3B               	movlw	59
  8200  0039C2  ECDA  F01E         	call	_MPU6050_Read
  8201  0039C6  C002  F033         	movff	?_MPU6050_Read,??_MPU6050_Read_Ax
  8202  0039CA  C003  F034         	movff	?_MPU6050_Read+1,??_MPU6050_Read_Ax+1
  8203  0039CE  C033  F034         	movff	??_MPU6050_Read_Ax,??_MPU6050_Read_Ax+1
  8204  0039D2  6A33               	clrf	??_MPU6050_Read_Ax^0,c
  8205  0039D4  0E3C               	movlw	60
  8206  0039D6  ECDA  F01E         	call	_MPU6050_Read
  8207  0039DA  5002               	movf	?_MPU6050_Read^0,w,c
  8208  0039DC  1233               	iorwf	??_MPU6050_Read_Ax^0,f,c
  8209  0039DE  5003               	movf	(?_MPU6050_Read+1)^0,w,c
  8210  0039E0  1234               	iorwf	(??_MPU6050_Read_Ax+1)^0,f,c
  8211  0039E2  C033  F008         	movff	??_MPU6050_Read_Ax,___xxtofl@val
  8212  0039E6  C034  F009         	movff	??_MPU6050_Read_Ax+1,___xxtofl@val+1
  8213  0039EA  0E00               	movlw	0
  8214  0039EC  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  8215  0039EE  0EFF               	movlw	-1
  8216  0039F0  6E0A               	movwf	(___xxtofl@val+2)^0,c
  8217  0039F2  6E0B               	movwf	(___xxtofl@val+3)^0,c
  8218  0039F4  0E01               	movlw	1
  8219  0039F6  EC67  F015         	call	___xxtofl
  8220  0039FA  C008  F016         	movff	?___xxtofl,___fldiv@b
  8221  0039FE  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  8222  003A02  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  8223  003A06  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  8224  003A0A  0E00               	movlw	0
  8225  003A0C  6E1A               	movwf	___fldiv@a^0,c
  8226  003A0E  0E00               	movlw	0
  8227  003A10  6E1B               	movwf	(___fldiv@a+1)^0,c
  8228  003A12  0E80               	movlw	128
  8229  003A14  6E1C               	movwf	(___fldiv@a+2)^0,c
  8230  003A16  0E46               	movlw	70
  8231  003A18  6E1D               	movwf	(___fldiv@a+3)^0,c
  8232  003A1A  EC5D  F011         	call	___fldiv	;wreg free
  8233  003A1E  C016  F02F         	movff	?___fldiv,?_MPU6050_Read_Ax
  8234  003A22  C017  F030         	movff	?___fldiv+1,?_MPU6050_Read_Ax+1
  8235  003A26  C018  F031         	movff	?___fldiv+2,?_MPU6050_Read_Ax+2
  8236  003A2A  C019  F032         	movff	?___fldiv+3,?_MPU6050_Read_Ax+3
  8237  003A2E  0012               	return		;funcret
  8238  003A30                     __end_of_MPU6050_Read_Ax:
  8239                           	callstack 0
  8240                           
  8241 ;; *************** function ___xxtofl *****************
  8242 ;; Defined at:
  8243 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;  sign            1    wreg     unsigned char 
  8246 ;;  val             4    7[COMRAM] long 
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;  sign            1   15[COMRAM] unsigned char 
  8249 ;;  arg             4   17[COMRAM] unsigned long 
  8250 ;;  exp             1   16[COMRAM] unsigned char 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  4    7[COMRAM] unsigned char 
  8253 ;; Registers used:
  8254 ;;		wreg, status,2, status,0
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8260 ;;      Params:         4       0       0       0       0       0       0       0       0
  8261 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8262 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8263 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8264 ;;Total ram usage:       14 bytes
  8265 ;; Hardware stack levels used: 1
  8266 ;; This function calls:
  8267 ;;		Nothing
  8268 ;; This function is called by:
  8269 ;;		_MPU6050_Read_Ax
  8270 ;;		_MPU6050_Read_Ay
  8271 ;;		_MPU6050_Read_Az
  8272 ;;		_MPU6050_Read_Gx
  8273 ;;		_MPU6050_Read_Gy
  8274 ;;		_MPU6050_Read_Gz
  8275 ;;		_MPU6050_Read_Temperature
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           	psect	text36
  8280  002ACE                     __ptext36:
  8281                           	callstack 0
  8282  002ACE                     ___xxtofl:
  8283                           	callstack 29
  8284                           
  8285                           ;incstack = 0
  8286                           ;___xxtofl@sign stored from wreg
  8287  002ACE  6E10               	movwf	___xxtofl@sign^0,c
  8288  002AD0  5010               	movf	___xxtofl@sign^0,w,c
  8289  002AD2  B4D8               	btfsc	status,2,c
  8290  002AD4  EF6E  F015         	goto	u4981
  8291  002AD8  EF70  F015         	goto	u4980
  8292  002ADC                     u4981:
  8293  002ADC  EF92  F015         	goto	l887
  8294  002AE0                     u4980:
  8295  002AE0  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  8296  002AE2  EF77  F015         	goto	u4990
  8297  002AE6  EF75  F015         	goto	u4991
  8298  002AEA                     u4991:
  8299  002AEA  EF92  F015         	goto	l887
  8300  002AEE                     u4990:
  8301  002AEE  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  8302  002AF2  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  8303  002AF6  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  8304  002AFA  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  8305  002AFE  1E0C               	comf	??___xxtofl^0,f,c
  8306  002B00  1E0D               	comf	(??___xxtofl+1)^0,f,c
  8307  002B02  1E0E               	comf	(??___xxtofl+2)^0,f,c
  8308  002B04  1E0F               	comf	(??___xxtofl+3)^0,f,c
  8309  002B06  2A0C               	incf	??___xxtofl^0,f,c
  8310  002B08  0E00               	movlw	0
  8311  002B0A  220D               	addwfc	(??___xxtofl+1)^0,f,c
  8312  002B0C  220E               	addwfc	(??___xxtofl+2)^0,f,c
  8313  002B0E  220F               	addwfc	(??___xxtofl+3)^0,f,c
  8314  002B10  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  8315  002B14  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  8316  002B18  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  8317  002B1C  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  8318  002B20  EF9A  F015         	goto	l4312
  8319  002B24                     l887:
  8320  002B24  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  8321  002B28  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8322  002B2C  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8323  002B30  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8324  002B34                     l4312:
  8325  002B34  5008               	movf	___xxtofl@val^0,w,c
  8326  002B36  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  8327  002B38  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  8328  002B3A  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  8329  002B3C  A4D8               	btfss	status,2,c
  8330  002B3E  EFA3  F015         	goto	u5001
  8331  002B42  EFA5  F015         	goto	u5000
  8332  002B46                     u5001:
  8333  002B46  EFAF  F015         	goto	l4318
  8334  002B4A                     u5000:
  8335  002B4A  0E00               	movlw	0
  8336  002B4C  6E08               	movwf	?___xxtofl^0,c
  8337  002B4E  0E00               	movlw	0
  8338  002B50  6E09               	movwf	(?___xxtofl+1)^0,c
  8339  002B52  0E00               	movlw	0
  8340  002B54  6E0A               	movwf	(?___xxtofl+2)^0,c
  8341  002B56  0E00               	movlw	0
  8342  002B58  6E0B               	movwf	(?___xxtofl+3)^0,c
  8343  002B5A  EF40  F016         	goto	l890
  8344  002B5E                     l4318:
  8345  002B5E  0E96               	movlw	150
  8346  002B60  6E11               	movwf	___xxtofl@exp^0,c
  8347  002B62  EFB9  F015         	goto	l4322
  8348  002B66                     l4320:
  8349  002B66  2A11               	incf	___xxtofl@exp^0,f,c
  8350  002B68  90D8               	bcf	status,0,c
  8351  002B6A  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  8352  002B6C  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  8353  002B6E  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  8354  002B70  3212               	rrcf	___xxtofl@arg^0,f,c
  8355  002B72                     l4322:
  8356  002B72  0E00               	movlw	0
  8357  002B74  1412               	andwf	___xxtofl@arg^0,w,c
  8358  002B76  6E0C               	movwf	??___xxtofl^0,c
  8359  002B78  0E00               	movlw	0
  8360  002B7A  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  8361  002B7C  6E0D               	movwf	(??___xxtofl+1)^0,c
  8362  002B7E  0E00               	movlw	0
  8363  002B80  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  8364  002B82  6E0E               	movwf	(??___xxtofl+2)^0,c
  8365  002B84  0EFE               	movlw	254
  8366  002B86  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  8367  002B88  6E0F               	movwf	(??___xxtofl+3)^0,c
  8368  002B8A  500C               	movf	??___xxtofl^0,w,c
  8369  002B8C  100D               	iorwf	(??___xxtofl+1)^0,w,c
  8370  002B8E  100E               	iorwf	(??___xxtofl+2)^0,w,c
  8371  002B90  100F               	iorwf	(??___xxtofl+3)^0,w,c
  8372  002B92  A4D8               	btfss	status,2,c
  8373  002B94  EFCE  F015         	goto	u5011
  8374  002B98  EFD0  F015         	goto	u5010
  8375  002B9C                     u5011:
  8376  002B9C  EFB3  F015         	goto	l4320
  8377  002BA0                     u5010:
  8378  002BA0  EFDE  F015         	goto	l894
  8379  002BA4                     l4324:
  8380  002BA4  2A11               	incf	___xxtofl@exp^0,f,c
  8381  002BA6  0E01               	movlw	1
  8382  002BA8  2612               	addwf	___xxtofl@arg^0,f,c
  8383  002BAA  0E00               	movlw	0
  8384  002BAC  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  8385  002BAE  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  8386  002BB0  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  8387  002BB2  90D8               	bcf	status,0,c
  8388  002BB4  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  8389  002BB6  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  8390  002BB8  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  8391  002BBA  3212               	rrcf	___xxtofl@arg^0,f,c
  8392  002BBC                     l894:
  8393  002BBC  0E00               	movlw	0
  8394  002BBE  1412               	andwf	___xxtofl@arg^0,w,c
  8395  002BC0  6E0C               	movwf	??___xxtofl^0,c
  8396  002BC2  0E00               	movlw	0
  8397  002BC4  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  8398  002BC6  6E0D               	movwf	(??___xxtofl+1)^0,c
  8399  002BC8  0E00               	movlw	0
  8400  002BCA  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  8401  002BCC  6E0E               	movwf	(??___xxtofl+2)^0,c
  8402  002BCE  0EFF               	movlw	255
  8403  002BD0  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  8404  002BD2  6E0F               	movwf	(??___xxtofl+3)^0,c
  8405  002BD4  500C               	movf	??___xxtofl^0,w,c
  8406  002BD6  100D               	iorwf	(??___xxtofl+1)^0,w,c
  8407  002BD8  100E               	iorwf	(??___xxtofl+2)^0,w,c
  8408  002BDA  100F               	iorwf	(??___xxtofl+3)^0,w,c
  8409  002BDC  A4D8               	btfss	status,2,c
  8410  002BDE  EFF3  F015         	goto	u5021
  8411  002BE2  EFF5  F015         	goto	u5020
  8412  002BE6                     u5021:
  8413  002BE6  EFD2  F015         	goto	l4324
  8414  002BEA                     u5020:
  8415  002BEA  EFFD  F015         	goto	l4332
  8416  002BEE                     l4330:
  8417  002BEE  0611               	decf	___xxtofl@exp^0,f,c
  8418  002BF0  90D8               	bcf	status,0,c
  8419  002BF2  3612               	rlcf	___xxtofl@arg^0,f,c
  8420  002BF4  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  8421  002BF6  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  8422  002BF8  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  8423  002BFA                     l4332:
  8424  002BFA  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  8425  002BFC  EF02  F016         	goto	u5031
  8426  002C00  EF04  F016         	goto	u5030
  8427  002C04                     u5031:
  8428  002C04  EF0C  F016         	goto	l901
  8429  002C08                     u5030:
  8430  002C08  0E02               	movlw	2
  8431  002C0A  6011               	cpfslt	___xxtofl@exp^0,c
  8432  002C0C  EF0A  F016         	goto	u5041
  8433  002C10  EF0C  F016         	goto	u5040
  8434  002C14                     u5041:
  8435  002C14  EFF7  F015         	goto	l4330
  8436  002C18                     u5040:
  8437  002C18                     l901:
  8438  002C18  B011               	btfsc	___xxtofl@exp^0,0,c
  8439  002C1A  EF11  F016         	goto	u5051
  8440  002C1E  EF13  F016         	goto	u5050
  8441  002C22                     u5051:
  8442  002C22  EF14  F016         	goto	l4338
  8443  002C26                     u5050:
  8444  002C26  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  8445  002C28                     l4338:
  8446  002C28  90D8               	bcf	status,0,c
  8447  002C2A  3211               	rrcf	___xxtofl@exp^0,f,c
  8448  002C2C  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  8449  002C30  6A0D               	clrf	(??___xxtofl+1)^0,c
  8450  002C32  6A0E               	clrf	(??___xxtofl+2)^0,c
  8451  002C34  6A0F               	clrf	(??___xxtofl+3)^0,c
  8452  002C36  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  8453  002C3A  6A0E               	clrf	(??___xxtofl+2)^0,c
  8454  002C3C  6A0D               	clrf	(??___xxtofl+1)^0,c
  8455  002C3E  6A0C               	clrf	??___xxtofl^0,c
  8456  002C40  500C               	movf	??___xxtofl^0,w,c
  8457  002C42  1212               	iorwf	___xxtofl@arg^0,f,c
  8458  002C44  500D               	movf	(??___xxtofl+1)^0,w,c
  8459  002C46  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  8460  002C48  500E               	movf	(??___xxtofl+2)^0,w,c
  8461  002C4A  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  8462  002C4C  500F               	movf	(??___xxtofl+3)^0,w,c
  8463  002C4E  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  8464  002C50  5010               	movf	___xxtofl@sign^0,w,c
  8465  002C52  B4D8               	btfsc	status,2,c
  8466  002C54  EF2E  F016         	goto	u5061
  8467  002C58  EF30  F016         	goto	u5060
  8468  002C5C                     u5061:
  8469  002C5C  EF38  F016         	goto	l4348
  8470  002C60                     u5060:
  8471  002C60  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  8472  002C62  EF37  F016         	goto	u5070
  8473  002C66  EF35  F016         	goto	u5071
  8474  002C6A                     u5071:
  8475  002C6A  EF38  F016         	goto	l4348
  8476  002C6E                     u5070:
  8477  002C6E  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  8478  002C70                     l4348:
  8479  002C70  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  8480  002C74  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  8481  002C78  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  8482  002C7C  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  8483  002C80                     l890:
  8484  002C80  0012               	return		;funcret
  8485  002C82                     __end_of___xxtofl:
  8486                           	callstack 0
  8487                           
  8488 ;; *************** function ___fldiv *****************
  8489 ;; Defined at:
  8490 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;  b               4   21[COMRAM] unsigned char 
  8493 ;;  a               4   25[COMRAM] unsigned char 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;  grs             4   40[COMRAM] unsigned long 
  8496 ;;  rem             4   33[COMRAM] unsigned long 
  8497 ;;  new_exp         2   38[COMRAM] short 
  8498 ;;  aexp            1   45[COMRAM] unsigned char 
  8499 ;;  bexp            1   44[COMRAM] unsigned char 
  8500 ;;  sign            1   37[COMRAM] unsigned char 
  8501 ;; Return value:  Size  Location     Type
  8502 ;;                  4   21[COMRAM] unsigned char 
  8503 ;; Registers used:
  8504 ;;		wreg, status,2, status,0
  8505 ;; Tracked objects:
  8506 ;;		On entry : 0/0
  8507 ;;		On exit  : 0/0
  8508 ;;		Unchanged: 0/0
  8509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8510 ;;      Params:         8       0       0       0       0       0       0       0       0
  8511 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8512 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8513 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8514 ;;Total ram usage:       25 bytes
  8515 ;; Hardware stack levels used: 1
  8516 ;; This function calls:
  8517 ;;		Nothing
  8518 ;; This function is called by:
  8519 ;;		_MPU6050_Read_Ax
  8520 ;;		_MPU6050_Read_Ay
  8521 ;;		_MPU6050_Read_Az
  8522 ;;		_MPU6050_Read_Gx
  8523 ;;		_MPU6050_Read_Gy
  8524 ;;		_MPU6050_Read_Gz
  8525 ;;		_MPU6050_Read_Temperature
  8526 ;;		_efgtoa
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text37
  8531  0022BA                     __ptext37:
  8532                           	callstack 0
  8533  0022BA                     ___fldiv:
  8534                           	callstack 26
  8535  0022BA  5019               	movf	(___fldiv@b+3)^0,w,c
  8536  0022BC  0B80               	andlw	128
  8537  0022BE  6E26               	movwf	___fldiv@sign^0,c
  8538  0022C0  5019               	movf	(___fldiv@b+3)^0,w,c
  8539  0022C2  2419               	addwf	(___fldiv@b+3)^0,w,c
  8540  0022C4  6E2D               	movwf	___fldiv@bexp^0,c
  8541  0022C6  AE18               	btfss	(___fldiv@b+2)^0,7,c
  8542  0022C8  EF68  F011         	goto	u3061
  8543  0022CC  EF6A  F011         	goto	u3060
  8544  0022D0                     u3061:
  8545  0022D0  EF6B  F011         	goto	l3170
  8546  0022D4                     u3060:
  8547  0022D4  802D               	bsf	___fldiv@bexp^0,0,c
  8548  0022D6                     l3170:
  8549  0022D6  502D               	movf	___fldiv@bexp^0,w,c
  8550  0022D8  B4D8               	btfsc	status,2,c
  8551  0022DA  EF71  F011         	goto	u3071
  8552  0022DE  EF73  F011         	goto	u3070
  8553  0022E2                     u3071:
  8554  0022E2  EF88  F011         	goto	l3180
  8555  0022E6                     u3070:
  8556  0022E6  282D               	incf	___fldiv@bexp^0,w,c
  8557  0022E8  A4D8               	btfss	status,2,c
  8558  0022EA  EF79  F011         	goto	u3081
  8559  0022EE  EF7B  F011         	goto	u3080
  8560  0022F2                     u3081:
  8561  0022F2  EF83  F011         	goto	l3176
  8562  0022F6                     u3080:
  8563  0022F6  0E00               	movlw	0
  8564  0022F8  6E16               	movwf	___fldiv@b^0,c
  8565  0022FA  0E00               	movlw	0
  8566  0022FC  6E17               	movwf	(___fldiv@b+1)^0,c
  8567  0022FE  0E00               	movlw	0
  8568  002300  6E18               	movwf	(___fldiv@b+2)^0,c
  8569  002302  0E00               	movlw	0
  8570  002304  6E19               	movwf	(___fldiv@b+3)^0,c
  8571  002306                     l3176:
  8572  002306  8E18               	bsf	(___fldiv@b+2)^0,7,c
  8573  002308  0E00               	movlw	0
  8574  00230A  6E19               	movwf	(___fldiv@b+3)^0,c
  8575  00230C  EF90  F011         	goto	l3182
  8576  002310                     l3180:
  8577  002310  0E00               	movlw	0
  8578  002312  6E16               	movwf	___fldiv@b^0,c
  8579  002314  0E00               	movlw	0
  8580  002316  6E17               	movwf	(___fldiv@b+1)^0,c
  8581  002318  0E00               	movlw	0
  8582  00231A  6E18               	movwf	(___fldiv@b+2)^0,c
  8583  00231C  0E00               	movlw	0
  8584  00231E  6E19               	movwf	(___fldiv@b+3)^0,c
  8585  002320                     l3182:
  8586  002320  501D               	movf	(___fldiv@a+3)^0,w,c
  8587  002322  0B80               	andlw	128
  8588  002324  1A26               	xorwf	___fldiv@sign^0,f,c
  8589  002326  501D               	movf	(___fldiv@a+3)^0,w,c
  8590  002328  241D               	addwf	(___fldiv@a+3)^0,w,c
  8591  00232A  6E2E               	movwf	___fldiv@aexp^0,c
  8592  00232C  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  8593  00232E  EF9B  F011         	goto	u3091
  8594  002332  EF9D  F011         	goto	u3090
  8595  002336                     u3091:
  8596  002336  EF9E  F011         	goto	l3190
  8597  00233A                     u3090:
  8598  00233A  802E               	bsf	___fldiv@aexp^0,0,c
  8599  00233C                     l3190:
  8600  00233C  502E               	movf	___fldiv@aexp^0,w,c
  8601  00233E  B4D8               	btfsc	status,2,c
  8602  002340  EFA4  F011         	goto	u3101
  8603  002344  EFA6  F011         	goto	u3100
  8604  002348                     u3101:
  8605  002348  EFBB  F011         	goto	l3200
  8606  00234C                     u3100:
  8607  00234C  282E               	incf	___fldiv@aexp^0,w,c
  8608  00234E  A4D8               	btfss	status,2,c
  8609  002350  EFAC  F011         	goto	u3111
  8610  002354  EFAE  F011         	goto	u3110
  8611  002358                     u3111:
  8612  002358  EFB6  F011         	goto	l3196
  8613  00235C                     u3110:
  8614  00235C  0E00               	movlw	0
  8615  00235E  6E1A               	movwf	___fldiv@a^0,c
  8616  002360  0E00               	movlw	0
  8617  002362  6E1B               	movwf	(___fldiv@a+1)^0,c
  8618  002364  0E00               	movlw	0
  8619  002366  6E1C               	movwf	(___fldiv@a+2)^0,c
  8620  002368  0E00               	movlw	0
  8621  00236A  6E1D               	movwf	(___fldiv@a+3)^0,c
  8622  00236C                     l3196:
  8623  00236C  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  8624  00236E  0E00               	movlw	0
  8625  002370  6E1D               	movwf	(___fldiv@a+3)^0,c
  8626  002372  EFC3  F011         	goto	l3202
  8627  002376                     l3200:
  8628  002376  0E00               	movlw	0
  8629  002378  6E1A               	movwf	___fldiv@a^0,c
  8630  00237A  0E00               	movlw	0
  8631  00237C  6E1B               	movwf	(___fldiv@a+1)^0,c
  8632  00237E  0E00               	movlw	0
  8633  002380  6E1C               	movwf	(___fldiv@a+2)^0,c
  8634  002382  0E00               	movlw	0
  8635  002384  6E1D               	movwf	(___fldiv@a+3)^0,c
  8636  002386                     l3202:
  8637  002386  501A               	movf	___fldiv@a^0,w,c
  8638  002388  101B               	iorwf	(___fldiv@a+1)^0,w,c
  8639  00238A  101C               	iorwf	(___fldiv@a+2)^0,w,c
  8640  00238C  101D               	iorwf	(___fldiv@a+3)^0,w,c
  8641  00238E  A4D8               	btfss	status,2,c
  8642  002390  EFCC  F011         	goto	u3121
  8643  002394  EFCE  F011         	goto	u3120
  8644  002398                     u3121:
  8645  002398  EFE6  F011         	goto	l3214
  8646  00239C                     u3120:
  8647  00239C  0E00               	movlw	0
  8648  00239E  6E16               	movwf	___fldiv@b^0,c
  8649  0023A0  0E00               	movlw	0
  8650  0023A2  6E17               	movwf	(___fldiv@b+1)^0,c
  8651  0023A4  0E00               	movlw	0
  8652  0023A6  6E18               	movwf	(___fldiv@b+2)^0,c
  8653  0023A8  0E00               	movlw	0
  8654  0023AA  6E19               	movwf	(___fldiv@b+3)^0,c
  8655  0023AC  0E80               	movlw	128
  8656  0023AE  1218               	iorwf	(___fldiv@b+2)^0,f,c
  8657  0023B0  0E7F               	movlw	127
  8658  0023B2  1219               	iorwf	(___fldiv@b+3)^0,f,c
  8659  0023B4                     l3208:
  8660  0023B4  5026               	movf	___fldiv@sign^0,w,c
  8661  0023B6  1219               	iorwf	(___fldiv@b+3)^0,f,c
  8662  0023B8  C016  F016         	movff	___fldiv@b,?___fldiv
  8663  0023BC  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  8664  0023C0  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  8665  0023C4  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  8666  0023C8  EF29  F013         	goto	l814
  8667  0023CC                     l3214:
  8668  0023CC  502D               	movf	___fldiv@bexp^0,w,c
  8669  0023CE  A4D8               	btfss	status,2,c
  8670  0023D0  EFEC  F011         	goto	u3131
  8671  0023D4  EFEE  F011         	goto	u3130
  8672  0023D8                     u3131:
  8673  0023D8  EFF8  F011         	goto	l3222
  8674  0023DC                     u3130:
  8675  0023DC  0E00               	movlw	0
  8676  0023DE  6E16               	movwf	?___fldiv^0,c
  8677  0023E0  0E00               	movlw	0
  8678  0023E2  6E17               	movwf	(?___fldiv+1)^0,c
  8679  0023E4  0E00               	movlw	0
  8680  0023E6  6E18               	movwf	(?___fldiv+2)^0,c
  8681  0023E8  0E00               	movlw	0
  8682  0023EA  6E19               	movwf	(?___fldiv+3)^0,c
  8683  0023EC  EF29  F013         	goto	l814
  8684  0023F0                     l3222:
  8685  0023F0  502E               	movf	___fldiv@aexp^0,w,c
  8686  0023F2  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  8687  0023F6  6A1F               	clrf	(??___fldiv+1)^0,c
  8688  0023F8  5E1E               	subwf	??___fldiv^0,f,c
  8689  0023FA  0E00               	movlw	0
  8690  0023FC  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  8691  0023FE  0E7F               	movlw	127
  8692  002400  241E               	addwf	??___fldiv^0,w,c
  8693  002402  6E27               	movwf	___fldiv@new_exp^0,c
  8694  002404  0E00               	movlw	0
  8695  002406  201F               	addwfc	(??___fldiv+1)^0,w,c
  8696  002408  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  8697  00240A  C016  F022         	movff	___fldiv@b,___fldiv@rem
  8698  00240E  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  8699  002412  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  8700  002416  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  8701  00241A  0E00               	movlw	0
  8702  00241C  6E16               	movwf	___fldiv@b^0,c
  8703  00241E  0E00               	movlw	0
  8704  002420  6E17               	movwf	(___fldiv@b+1)^0,c
  8705  002422  0E00               	movlw	0
  8706  002424  6E18               	movwf	(___fldiv@b+2)^0,c
  8707  002426  0E00               	movlw	0
  8708  002428  6E19               	movwf	(___fldiv@b+3)^0,c
  8709  00242A  0E00               	movlw	0
  8710  00242C  6E29               	movwf	___fldiv@grs^0,c
  8711  00242E  0E00               	movlw	0
  8712  002430  6E2A               	movwf	(___fldiv@grs+1)^0,c
  8713  002432  0E00               	movlw	0
  8714  002434  6E2B               	movwf	(___fldiv@grs+2)^0,c
  8715  002436  0E00               	movlw	0
  8716  002438  6E2C               	movwf	(___fldiv@grs+3)^0,c
  8717  00243A  0E00               	movlw	0
  8718  00243C  6E2E               	movwf	___fldiv@aexp^0,c
  8719  00243E  EF59  F012         	goto	l816
  8720  002442                     l3232:
  8721  002442  502E               	movf	___fldiv@aexp^0,w,c
  8722  002444  B4D8               	btfsc	status,2,c
  8723  002446  EF27  F012         	goto	u3141
  8724  00244A  EF29  F012         	goto	u3140
  8725  00244E                     u3141:
  8726  00244E  EF40  F012         	goto	l3240
  8727  002452                     u3140:
  8728  002452  90D8               	bcf	status,0,c
  8729  002454  3622               	rlcf	___fldiv@rem^0,f,c
  8730  002456  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  8731  002458  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  8732  00245A  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  8733  00245C  90D8               	bcf	status,0,c
  8734  00245E  3616               	rlcf	___fldiv@b^0,f,c
  8735  002460  3617               	rlcf	(___fldiv@b+1)^0,f,c
  8736  002462  3618               	rlcf	(___fldiv@b+2)^0,f,c
  8737  002464  3619               	rlcf	(___fldiv@b+3)^0,f,c
  8738  002466  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  8739  002468  EF38  F012         	goto	u3151
  8740  00246C  EF3A  F012         	goto	u3150
  8741  002470                     u3151:
  8742  002470  EF3B  F012         	goto	l819
  8743  002474                     u3150:
  8744  002474  8016               	bsf	___fldiv@b^0,0,c
  8745  002476                     l819:
  8746  002476  90D8               	bcf	status,0,c
  8747  002478  3629               	rlcf	___fldiv@grs^0,f,c
  8748  00247A  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  8749  00247C  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  8750  00247E  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  8751  002480                     l3240:
  8752  002480  501A               	movf	___fldiv@a^0,w,c
  8753  002482  5C22               	subwf	___fldiv@rem^0,w,c
  8754  002484  501B               	movf	(___fldiv@a+1)^0,w,c
  8755  002486  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  8756  002488  501C               	movf	(___fldiv@a+2)^0,w,c
  8757  00248A  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  8758  00248C  501D               	movf	(___fldiv@a+3)^0,w,c
  8759  00248E  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  8760  002490  A0D8               	btfss	status,0,c
  8761  002492  EF4D  F012         	goto	u3161
  8762  002496  EF4F  F012         	goto	u3160
  8763  00249A                     u3161:
  8764  00249A  EF58  F012         	goto	l3246
  8765  00249E                     u3160:
  8766  00249E  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  8767  0024A0  501A               	movf	___fldiv@a^0,w,c
  8768  0024A2  5E22               	subwf	___fldiv@rem^0,f,c
  8769  0024A4  501B               	movf	(___fldiv@a+1)^0,w,c
  8770  0024A6  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  8771  0024A8  501C               	movf	(___fldiv@a+2)^0,w,c
  8772  0024AA  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  8773  0024AC  501D               	movf	(___fldiv@a+3)^0,w,c
  8774  0024AE  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  8775  0024B0                     l3246:
  8776  0024B0  2A2E               	incf	___fldiv@aexp^0,f,c
  8777  0024B2                     l816:
  8778  0024B2  0E19               	movlw	25
  8779  0024B4  642E               	cpfsgt	___fldiv@aexp^0,c
  8780  0024B6  EF5F  F012         	goto	u3171
  8781  0024BA  EF61  F012         	goto	u3170
  8782  0024BE                     u3171:
  8783  0024BE  EF21  F012         	goto	l3232
  8784  0024C2                     u3170:
  8785  0024C2  5022               	movf	___fldiv@rem^0,w,c
  8786  0024C4  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  8787  0024C6  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  8788  0024C8  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  8789  0024CA  B4D8               	btfsc	status,2,c
  8790  0024CC  EF6A  F012         	goto	u3181
  8791  0024D0  EF6C  F012         	goto	u3180
  8792  0024D4                     u3181:
  8793  0024D4  EF84  F012         	goto	l3258
  8794  0024D8                     u3180:
  8795  0024D8  8029               	bsf	___fldiv@grs^0,0,c
  8796  0024DA  EF84  F012         	goto	l3258
  8797  0024DE                     l3252:
  8798  0024DE  90D8               	bcf	status,0,c
  8799  0024E0  3616               	rlcf	___fldiv@b^0,f,c
  8800  0024E2  3617               	rlcf	(___fldiv@b+1)^0,f,c
  8801  0024E4  3618               	rlcf	(___fldiv@b+2)^0,f,c
  8802  0024E6  3619               	rlcf	(___fldiv@b+3)^0,f,c
  8803  0024E8  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  8804  0024EA  EF79  F012         	goto	u3191
  8805  0024EE  EF7B  F012         	goto	u3190
  8806  0024F2                     u3191:
  8807  0024F2  EF7C  F012         	goto	l825
  8808  0024F6                     u3190:
  8809  0024F6  8016               	bsf	___fldiv@b^0,0,c
  8810  0024F8                     l825:
  8811  0024F8  90D8               	bcf	status,0,c
  8812  0024FA  3629               	rlcf	___fldiv@grs^0,f,c
  8813  0024FC  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  8814  0024FE  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  8815  002500  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  8816  002502  0627               	decf	___fldiv@new_exp^0,f,c
  8817  002504  A0D8               	btfss	status,0,c
  8818  002506  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  8819  002508                     l3258:
  8820  002508  AE18               	btfss	(___fldiv@b+2)^0,7,c
  8821  00250A  EF89  F012         	goto	u3201
  8822  00250E  EF8B  F012         	goto	u3200
  8823  002512                     u3201:
  8824  002512  EF6F  F012         	goto	l3252
  8825  002516                     u3200:
  8826  002516  0E00               	movlw	0
  8827  002518  6E2E               	movwf	___fldiv@aexp^0,c
  8828  00251A  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  8829  00251C  EF92  F012         	goto	u3211
  8830  002520  EF94  F012         	goto	u3210
  8831  002524                     u3211:
  8832  002524  EFB8  F012         	goto	l827
  8833  002528                     u3210:
  8834  002528  0EFF               	movlw	255
  8835  00252A  1429               	andwf	___fldiv@grs^0,w,c
  8836  00252C  6E1E               	movwf	??___fldiv^0,c
  8837  00252E  0EFF               	movlw	255
  8838  002530  142A               	andwf	(___fldiv@grs+1)^0,w,c
  8839  002532  6E1F               	movwf	(??___fldiv+1)^0,c
  8840  002534  0EFF               	movlw	255
  8841  002536  142B               	andwf	(___fldiv@grs+2)^0,w,c
  8842  002538  6E20               	movwf	(??___fldiv+2)^0,c
  8843  00253A  0E7F               	movlw	127
  8844  00253C  142C               	andwf	(___fldiv@grs+3)^0,w,c
  8845  00253E  6E21               	movwf	(??___fldiv+3)^0,c
  8846  002540  501E               	movf	??___fldiv^0,w,c
  8847  002542  101F               	iorwf	(??___fldiv+1)^0,w,c
  8848  002544  1020               	iorwf	(??___fldiv+2)^0,w,c
  8849  002546  1021               	iorwf	(??___fldiv+3)^0,w,c
  8850  002548  B4D8               	btfsc	status,2,c
  8851  00254A  EFA9  F012         	goto	u3221
  8852  00254E  EFAB  F012         	goto	u3220
  8853  002552                     u3221:
  8854  002552  EFAF  F012         	goto	l828
  8855  002556                     u3220:
  8856  002556                     l3266:
  8857  002556  0E01               	movlw	1
  8858  002558  6E2E               	movwf	___fldiv@aexp^0,c
  8859  00255A  EFB8  F012         	goto	l827
  8860  00255E                     l828:
  8861  00255E  A016               	btfss	___fldiv@b^0,0,c
  8862  002560  EFB4  F012         	goto	u3231
  8863  002564  EFB6  F012         	goto	u3230
  8864  002568                     u3231:
  8865  002568  EFB8  F012         	goto	l827
  8866  00256C                     u3230:
  8867  00256C  EFAB  F012         	goto	l3266
  8868  002570                     l827:
  8869  002570  502E               	movf	___fldiv@aexp^0,w,c
  8870  002572  B4D8               	btfsc	status,2,c
  8871  002574  EFBE  F012         	goto	u3241
  8872  002578  EFC0  F012         	goto	u3240
  8873  00257C                     u3241:
  8874  00257C  EFE4  F012         	goto	l3278
  8875  002580                     u3240:
  8876  002580  0E01               	movlw	1
  8877  002582  2616               	addwf	___fldiv@b^0,f,c
  8878  002584  0E00               	movlw	0
  8879  002586  2217               	addwfc	(___fldiv@b+1)^0,f,c
  8880  002588  2218               	addwfc	(___fldiv@b+2)^0,f,c
  8881  00258A  2219               	addwfc	(___fldiv@b+3)^0,f,c
  8882  00258C  A019               	btfss	(___fldiv@b+3)^0,0,c
  8883  00258E  EFCB  F012         	goto	u3251
  8884  002592  EFCD  F012         	goto	u3250
  8885  002596                     u3251:
  8886  002596  EFE4  F012         	goto	l3278
  8887  00259A                     u3250:
  8888  00259A  C016  F01E         	movff	___fldiv@b,??___fldiv
  8889  00259E  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  8890  0025A2  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  8891  0025A6  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  8892  0025AA  3421               	rlcf	(??___fldiv+3)^0,w,c
  8893  0025AC  3221               	rrcf	(??___fldiv+3)^0,f,c
  8894  0025AE  3220               	rrcf	(??___fldiv+2)^0,f,c
  8895  0025B0  321F               	rrcf	(??___fldiv+1)^0,f,c
  8896  0025B2  321E               	rrcf	??___fldiv^0,f,c
  8897  0025B4  C01E  F016         	movff	??___fldiv,___fldiv@b
  8898  0025B8  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  8899  0025BC  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  8900  0025C0  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  8901  0025C4  4A27               	infsnz	___fldiv@new_exp^0,f,c
  8902  0025C6  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  8903  0025C8                     l3278:
  8904  0025C8  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8905  0025CA  EFEF  F012         	goto	u3261
  8906  0025CE  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  8907  0025D0  E108               	bnz	u3260
  8908  0025D2  2827               	incf	___fldiv@new_exp^0,w,c
  8909  0025D4  A0D8               	btfss	status,0,c
  8910  0025D6  EFEF  F012         	goto	u3261
  8911  0025DA  EFF1  F012         	goto	u3260
  8912  0025DE                     u3261:
  8913  0025DE  EFFC  F012         	goto	l3282
  8914  0025E2                     u3260:
  8915  0025E2  0E00               	movlw	0
  8916  0025E4  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  8917  0025E6  6827               	setf	___fldiv@new_exp^0,c
  8918  0025E8  0E00               	movlw	0
  8919  0025EA  6E16               	movwf	___fldiv@b^0,c
  8920  0025EC  0E00               	movlw	0
  8921  0025EE  6E17               	movwf	(___fldiv@b+1)^0,c
  8922  0025F0  0E00               	movlw	0
  8923  0025F2  6E18               	movwf	(___fldiv@b+2)^0,c
  8924  0025F4  0E00               	movlw	0
  8925  0025F6  6E19               	movwf	(___fldiv@b+3)^0,c
  8926  0025F8                     l3282:
  8927  0025F8  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8928  0025FA  EF09  F013         	goto	u3270
  8929  0025FE  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  8930  002600  E106               	bnz	u3271
  8931  002602  0427               	decf	___fldiv@new_exp^0,w,c
  8932  002604  B0D8               	btfsc	status,0,c
  8933  002606  EF07  F013         	goto	u3271
  8934  00260A  EF09  F013         	goto	u3270
  8935  00260E                     u3271:
  8936  00260E  EF17  F013         	goto	l3286
  8937  002612                     u3270:
  8938  002612  0E00               	movlw	0
  8939  002614  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  8940  002616  0E00               	movlw	0
  8941  002618  6E27               	movwf	___fldiv@new_exp^0,c
  8942  00261A  0E00               	movlw	0
  8943  00261C  6E16               	movwf	___fldiv@b^0,c
  8944  00261E  0E00               	movlw	0
  8945  002620  6E17               	movwf	(___fldiv@b+1)^0,c
  8946  002622  0E00               	movlw	0
  8947  002624  6E18               	movwf	(___fldiv@b+2)^0,c
  8948  002626  0E00               	movlw	0
  8949  002628  6E19               	movwf	(___fldiv@b+3)^0,c
  8950  00262A  0E00               	movlw	0
  8951  00262C  6E26               	movwf	___fldiv@sign^0,c
  8952  00262E                     l3286:
  8953  00262E  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  8954  002632  A02D               	btfss	___fldiv@bexp^0,0,c
  8955  002634  EF1E  F013         	goto	u3281
  8956  002638  EF20  F013         	goto	u3280
  8957  00263C                     u3281:
  8958  00263C  EF23  F013         	goto	l3292
  8959  002640                     u3280:
  8960  002640  8E18               	bsf	(___fldiv@b+2)^0,7,c
  8961  002642  EF24  F013         	goto	l3294
  8962  002646                     l3292:
  8963  002646  9E18               	bcf	(___fldiv@b+2)^0,7,c
  8964  002648                     l3294:
  8965  002648  90D8               	bcf	status,0,c
  8966  00264A  302D               	rrcf	___fldiv@bexp^0,w,c
  8967  00264C  6E19               	movwf	(___fldiv@b+3)^0,c
  8968  00264E  EFDA  F011         	goto	l3208
  8969  002652                     l814:
  8970  002652  0012               	return		;funcret
  8971  002654                     __end_of___fldiv:
  8972                           	callstack 0
  8973                           
  8974 ;; *************** function _MPU6050_Read *****************
  8975 ;; Defined at:
  8976 ;;		line 31 in file "mpu6050.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  add             1    wreg     unsigned char 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;  add             1    6[COMRAM] unsigned char 
  8981 ;;  retval          2    4[COMRAM] int 
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  2    1[COMRAM] int 
  8984 ;; Registers used:
  8985 ;;		wreg, status,2, status,0, cstack
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8991 ;;      Params:         2       0       0       0       0       0       0       0       0
  8992 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8993 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8994 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8995 ;;Total ram usage:        6 bytes
  8996 ;; Hardware stack levels used: 1
  8997 ;; Hardware stack levels required when called: 1
  8998 ;; This function calls:
  8999 ;;		_I2C_Nack
  9000 ;;		_I2C_Read
  9001 ;;		_I2C_Restart
  9002 ;;		_I2C_Start
  9003 ;;		_I2C_Stop
  9004 ;;		_I2C_Write
  9005 ;; This function is called by:
  9006 ;;		_MPU6050_Read_Ax
  9007 ;;		_MPU6050_Read_Ay
  9008 ;;		_MPU6050_Read_Az
  9009 ;;		_MPU6050_Read_Gx
  9010 ;;		_MPU6050_Read_Gy
  9011 ;;		_MPU6050_Read_Gz
  9012 ;;		_MPU6050_Read_Temperature
  9013 ;; This function uses a non-reentrant model
  9014 ;;
  9015                           
  9016                           	psect	text38
  9017  003DB4                     __ptext38:
  9018                           	callstack 0
  9019  003DB4                     _MPU6050_Read:
  9020                           	callstack 28
  9021                           
  9022                           ;incstack = 0
  9023                           ;MPU6050_Read@add stored from wreg
  9024  003DB4  6E07               	movwf	MPU6050_Read@add^0,c
  9025  003DB6                     
  9026                           ;mpu6050.c: 31: int MPU6050_Read(unsigned char add);mpu6050.c: 32: {;mpu6050.c: 33:     
      +                          int retval;;mpu6050.c: 34:     I2C_Start();
  9027  003DB6  ECFA  F01F         	call	_I2C_Start	;wreg free
  9028  003DBA                     
  9029                           ;mpu6050.c: 35:     I2C_Write(0xD0);
  9030  003DBA  0ED0               	movlw	208
  9031  003DBC  ECC3  F01F         	call	_I2C_Write
  9032  003DC0                     
  9033                           ;mpu6050.c: 36:     I2C_Write(add);
  9034  003DC0  5007               	movf	MPU6050_Read@add^0,w,c
  9035  003DC2  ECC3  F01F         	call	_I2C_Write
  9036  003DC6                     
  9037                           ;mpu6050.c: 37:     I2C_Restart();
  9038  003DC6  ECE6  F01F         	call	_I2C_Restart	;wreg free
  9039  003DCA                     
  9040                           ;mpu6050.c: 38:     I2C_Write(0xD1);
  9041  003DCA  0ED1               	movlw	209
  9042  003DCC  ECC3  F01F         	call	_I2C_Write
  9043  003DD0                     
  9044                           ;mpu6050.c: 39:     retval = I2C_Read();
  9045  003DD0  ECD0  F01F         	call	_I2C_Read	;wreg free
  9046  003DD4  6E04               	movwf	??_MPU6050_Read^0,c
  9047  003DD6  5004               	movf	??_MPU6050_Read^0,w,c
  9048  003DD8  6E05               	movwf	MPU6050_Read@retval^0,c
  9049  003DDA  6A06               	clrf	(MPU6050_Read@retval+1)^0,c
  9050  003DDC                     
  9051                           ;mpu6050.c: 40:     I2C_Nack();
  9052  003DDC  ECDB  F01F         	call	_I2C_Nack	;wreg free
  9053  003DE0                     
  9054                           ;mpu6050.c: 41:     I2C_Stop();
  9055  003DE0  ECF0  F01F         	call	_I2C_Stop	;wreg free
  9056  003DE4                     
  9057                           ;mpu6050.c: 42:     return retval;
  9058  003DE4  C005  F002         	movff	MPU6050_Read@retval,?_MPU6050_Read
  9059  003DE8  C006  F003         	movff	MPU6050_Read@retval+1,?_MPU6050_Read+1
  9060  003DEC  0012               	return		;funcret
  9061  003DEE                     __end_of_MPU6050_Read:
  9062                           	callstack 0
  9063                           
  9064 ;; *************** function _I2C_Restart *****************
  9065 ;; Defined at:
  9066 ;;		line 41 in file "i2c.c"
  9067 ;; Parameters:    Size  Location     Type
  9068 ;;		None
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;		None
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		None
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9080 ;;      Params:         0       0       0       0       0       0       0       0       0
  9081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9083 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9084 ;;Total ram usage:        0 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; This function calls:
  9087 ;;		Nothing
  9088 ;; This function is called by:
  9089 ;;		_MPU6050_Read
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           	psect	text39
  9094  003FCC                     __ptext39:
  9095                           	callstack 0
  9096  003FCC                     _I2C_Restart:
  9097                           	callstack 28
  9098  003FCC                     
  9099                           ;i2c.c: 43:     SSPCON2bits.RSEN = 1;
  9100  003FCC  82C5               	bsf	197,1,c	;volatile
  9101  003FCE                     l37:
  9102  003FCE  A69E               	btfss	158,3,c	;volatile
  9103  003FD0  EFEC  F01F         	goto	u4781
  9104  003FD4  EFEE  F01F         	goto	u4780
  9105  003FD8                     u4781:
  9106  003FD8  EFE7  F01F         	goto	l37
  9107  003FDC                     u4780:
  9108  003FDC                     
  9109                           ;i2c.c: 45:     PIR1bits.SSPIF = 0;
  9110  003FDC  969E               	bcf	158,3,c	;volatile
  9111  003FDE  0012               	return		;funcret
  9112  003FE0                     __end_of_I2C_Restart:
  9113                           	callstack 0
  9114                           
  9115 ;; *************** function _I2C_Read *****************
  9116 ;; Defined at:
  9117 ;;		line 73 in file "i2c.c"
  9118 ;; Parameters:    Size  Location     Type
  9119 ;;		None
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;		None
  9122 ;; Return value:  Size  Location     Type
  9123 ;;                  1    wreg      unsigned char 
  9124 ;; Registers used:
  9125 ;;		wreg, status,2
  9126 ;; Tracked objects:
  9127 ;;		On entry : 0/0
  9128 ;;		On exit  : 0/0
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9131 ;;      Params:         0       0       0       0       0       0       0       0       0
  9132 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9134 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9135 ;;Total ram usage:        0 bytes
  9136 ;; Hardware stack levels used: 1
  9137 ;; This function calls:
  9138 ;;		Nothing
  9139 ;; This function is called by:
  9140 ;;		_MPU6050_Read
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           	psect	text40
  9145  003FA0                     __ptext40:
  9146                           	callstack 0
  9147  003FA0                     _I2C_Read:
  9148                           	callstack 28
  9149  003FA0                     
  9150                           ;i2c.c: 75:     SSPCON2bits.RCEN = 1;
  9151  003FA0  86C5               	bsf	197,3,c	;volatile
  9152  003FA2                     l61:
  9153  003FA2  A69E               	btfss	158,3,c	;volatile
  9154  003FA4  EFD6  F01F         	goto	u4811
  9155  003FA8  EFD8  F01F         	goto	u4810
  9156  003FAC                     u4811:
  9157  003FAC  EFD1  F01F         	goto	l61
  9158  003FB0                     u4810:
  9159  003FB0                     
  9160                           ;i2c.c: 77:     PIR1bits.SSPIF = 0;
  9161  003FB0  969E               	bcf	158,3,c	;volatile
  9162  003FB2                     
  9163                           ;i2c.c: 78:     return SSPBUF;
  9164  003FB2  50C9               	movf	201,w,c	;volatile
  9165  003FB4  0012               	return		;funcret
  9166  003FB6                     __end_of_I2C_Read:
  9167                           	callstack 0
  9168                           
  9169 ;; *************** function _I2C_Nack *****************
  9170 ;; Defined at:
  9171 ;;		line 56 in file "i2c.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;		None
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;		None
  9176 ;; Return value:  Size  Location     Type
  9177 ;;                  1    wreg      void 
  9178 ;; Registers used:
  9179 ;;		None
  9180 ;; Tracked objects:
  9181 ;;		On entry : 0/0
  9182 ;;		On exit  : 0/0
  9183 ;;		Unchanged: 0/0
  9184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9185 ;;      Params:         0       0       0       0       0       0       0       0       0
  9186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9188 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9189 ;;Total ram usage:        0 bytes
  9190 ;; Hardware stack levels used: 1
  9191 ;; This function calls:
  9192 ;;		Nothing
  9193 ;; This function is called by:
  9194 ;;		_MPU6050_Read
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           	psect	text41
  9199  003FB6                     __ptext41:
  9200                           	callstack 0
  9201  003FB6                     _I2C_Nack:
  9202                           	callstack 28
  9203  003FB6                     
  9204                           ;i2c.c: 58:     SSPCON2bits.ACKDT = 1;
  9205  003FB6  8AC5               	bsf	197,5,c	;volatile
  9206                           
  9207                           ;i2c.c: 59:  SSPCON2bits.ACKEN = 1;
  9208  003FB8  88C5               	bsf	197,4,c	;volatile
  9209  003FBA                     l49:
  9210  003FBA  A69E               	btfss	158,3,c	;volatile
  9211  003FBC  EFE2  F01F         	goto	u4791
  9212  003FC0  EFE4  F01F         	goto	u4790
  9213  003FC4                     u4791:
  9214  003FC4  EFDD  F01F         	goto	l49
  9215  003FC8                     u4790:
  9216  003FC8                     
  9217                           ;i2c.c: 61:     PIR1bits.SSPIF = 0;
  9218  003FC8  969E               	bcf	158,3,c	;volatile
  9219  003FCA  0012               	return		;funcret
  9220  003FCC                     __end_of_I2C_Nack:
  9221                           	callstack 0
  9222                           
  9223 ;; *************** function _MPU6050_Init *****************
  9224 ;; Defined at:
  9225 ;;		line 20 in file "mpu6050.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;		None
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;		None
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  1    wreg      void 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2, cstack
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9239 ;;      Params:         0       0       0       0       0       0       0       0       0
  9240 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9241 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9242 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9243 ;;Total ram usage:        1 bytes
  9244 ;; Hardware stack levels used: 1
  9245 ;; Hardware stack levels required when called: 2
  9246 ;; This function calls:
  9247 ;;		_MPU6050_Write
  9248 ;; This function is called by:
  9249 ;;		_main
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text42
  9254  003BAA                     __ptext42:
  9255                           	callstack 0
  9256  003BAA                     _MPU6050_Init:
  9257                           	callstack 28
  9258  003BAA                     
  9259                           ;mpu6050.c: 22:     MPU6050_Write(0x6B, 0x80);
  9260  003BAA  0E80               	movlw	128
  9261  003BAC  6E02               	movwf	MPU6050_Write@data^0,c
  9262  003BAE  0E6B               	movlw	107
  9263  003BB0  ECB4  F01F         	call	_MPU6050_Write
  9264  003BB4                     
  9265                           ;mpu6050.c: 23:     _delay((unsigned long)((10)*(48000000/4000.0)));
  9266  003BB4  0E9C               	movlw	156
  9267  003BB6  6E04               	movwf	??_MPU6050_Init^0,c
  9268  003BB8  0ED7               	movlw	215
  9269  003BBA                     u5177:
  9270  003BBA  2EE8               	decfsz	wreg,f,c
  9271  003BBC  D7FE               	bra	u5177
  9272  003BBE  2E04               	decfsz	??_MPU6050_Init^0,f,c
  9273  003BC0  D7FC               	bra	u5177
  9274  003BC2  F000               	nop	
  9275  003BC4                     
  9276                           ;mpu6050.c: 24:     MPU6050_Write(0x6B, 0x00);
  9277  003BC4  0E00               	movlw	0
  9278  003BC6  6E02               	movwf	MPU6050_Write@data^0,c
  9279  003BC8  0E6B               	movlw	107
  9280  003BCA  ECB4  F01F         	call	_MPU6050_Write
  9281                           
  9282                           ;mpu6050.c: 25:     _delay((unsigned long)((10)*(48000000/4000.0)));
  9283  003BCE  0E9C               	movlw	156
  9284  003BD0  6E04               	movwf	??_MPU6050_Init^0,c
  9285  003BD2  0ED7               	movlw	215
  9286  003BD4                     u5187:
  9287  003BD4  2EE8               	decfsz	wreg,f,c
  9288  003BD6  D7FE               	bra	u5187
  9289  003BD8  2E04               	decfsz	??_MPU6050_Init^0,f,c
  9290  003BDA  D7FC               	bra	u5187
  9291  003BDC  F000               	nop	
  9292  003BDE                     
  9293                           ;mpu6050.c: 26:     MPU6050_Write(0x1A, 0x01);
  9294  003BDE  0E01               	movlw	1
  9295  003BE0  6E02               	movwf	MPU6050_Write@data^0,c
  9296  003BE2  0E1A               	movlw	26
  9297  003BE4  ECB4  F01F         	call	_MPU6050_Write
  9298  003BE8                     
  9299                           ;mpu6050.c: 27:     _delay((unsigned long)((10)*(48000000/4000.0)));
  9300  003BE8  0E9C               	movlw	156
  9301  003BEA  6E04               	movwf	??_MPU6050_Init^0,c
  9302  003BEC  0ED7               	movlw	215
  9303  003BEE                     u5197:
  9304  003BEE  2EE8               	decfsz	wreg,f,c
  9305  003BF0  D7FE               	bra	u5197
  9306  003BF2  2E04               	decfsz	??_MPU6050_Init^0,f,c
  9307  003BF4  D7FC               	bra	u5197
  9308  003BF6  F000               	nop	
  9309                           
  9310                           ;mpu6050.c: 28:     MPU6050_Write(0x1B, 0x00);
  9311  003BF8  0E00               	movlw	0
  9312  003BFA  6E02               	movwf	MPU6050_Write@data^0,c
  9313  003BFC  0E1B               	movlw	27
  9314  003BFE  ECB4  F01F         	call	_MPU6050_Write
  9315  003C02  0012               	return		;funcret
  9316  003C04                     __end_of_MPU6050_Init:
  9317                           	callstack 0
  9318                           
  9319 ;; *************** function _MPU6050_Write *****************
  9320 ;; Defined at:
  9321 ;;		line 11 in file "mpu6050.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  add             1    wreg     unsigned char 
  9324 ;;  data            1    1[COMRAM] unsigned char 
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;  add             1    2[COMRAM] unsigned char 
  9327 ;; Return value:  Size  Location     Type
  9328 ;;                  1    wreg      void 
  9329 ;; Registers used:
  9330 ;;		wreg, status,2, cstack
  9331 ;; Tracked objects:
  9332 ;;		On entry : 0/0
  9333 ;;		On exit  : 0/0
  9334 ;;		Unchanged: 0/0
  9335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9336 ;;      Params:         1       0       0       0       0       0       0       0       0
  9337 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9339 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9340 ;;Total ram usage:        2 bytes
  9341 ;; Hardware stack levels used: 1
  9342 ;; Hardware stack levels required when called: 1
  9343 ;; This function calls:
  9344 ;;		_I2C_Start
  9345 ;;		_I2C_Stop
  9346 ;;		_I2C_Write
  9347 ;; This function is called by:
  9348 ;;		_MPU6050_Init
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           	psect	text43
  9353  003F68                     __ptext43:
  9354                           	callstack 0
  9355  003F68                     _MPU6050_Write:
  9356                           	callstack 28
  9357                           
  9358                           ;incstack = 0
  9359                           ;MPU6050_Write@add stored from wreg
  9360  003F68  6E03               	movwf	MPU6050_Write@add^0,c
  9361  003F6A                     
  9362                           ;mpu6050.c: 11: void MPU6050_Write(unsigned char add, unsigned char data);mpu6050.c: 12:
      +                           {;mpu6050.c: 13:    I2C_Start();
  9363  003F6A  ECFA  F01F         	call	_I2C_Start	;wreg free
  9364  003F6E                     
  9365                           ;mpu6050.c: 14:    I2C_Write(0xD0);
  9366  003F6E  0ED0               	movlw	208
  9367  003F70  ECC3  F01F         	call	_I2C_Write
  9368  003F74                     
  9369                           ;mpu6050.c: 15:    I2C_Write(add);
  9370  003F74  5003               	movf	MPU6050_Write@add^0,w,c
  9371  003F76  ECC3  F01F         	call	_I2C_Write
  9372  003F7A                     
  9373                           ;mpu6050.c: 16:    I2C_Write(data);
  9374  003F7A  5002               	movf	MPU6050_Write@data^0,w,c
  9375  003F7C  ECC3  F01F         	call	_I2C_Write
  9376  003F80                     
  9377                           ;mpu6050.c: 17:    I2C_Stop();
  9378  003F80  ECF0  F01F         	call	_I2C_Stop	;wreg free
  9379  003F84  0012               	return		;funcret
  9380  003F86                     __end_of_MPU6050_Write:
  9381                           	callstack 0
  9382                           
  9383 ;; *************** function _I2C_Write *****************
  9384 ;; Defined at:
  9385 ;;		line 64 in file "i2c.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;  data            1    wreg     unsigned char 
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;  data            1    0[COMRAM] unsigned char 
  9390 ;;  b_ok            2    0        short 
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  2   54[None  ] short 
  9393 ;; Registers used:
  9394 ;;		wreg
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9400 ;;      Params:         0       0       0       0       0       0       0       0       0
  9401 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9403 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9404 ;;Total ram usage:        1 bytes
  9405 ;; Hardware stack levels used: 1
  9406 ;; This function calls:
  9407 ;;		Nothing
  9408 ;; This function is called by:
  9409 ;;		_MPU6050_Write
  9410 ;;		_MPU6050_Read
  9411 ;; This function uses a non-reentrant model
  9412 ;;
  9413                           
  9414                           	psect	text44
  9415  003F86                     __ptext44:
  9416                           	callstack 0
  9417  003F86                     _I2C_Write:
  9418                           	callstack 28
  9419                           
  9420                           ;incstack = 0
  9421                           ;I2C_Write@data stored from wreg
  9422  003F86  6E01               	movwf	I2C_Write@data^0,c
  9423  003F88                     
  9424                           ;i2c.c: 64: short I2C_Write(char data);i2c.c: 65: {;i2c.c: 66:     SSPBUF = data;
  9425  003F88  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  9426  003F8C                     l55:
  9427  003F8C  A69E               	btfss	158,3,c	;volatile
  9428  003F8E  EFCB  F01F         	goto	u4801
  9429  003F92  EFCD  F01F         	goto	u4800
  9430  003F96                     u4801:
  9431  003F96  EFC6  F01F         	goto	l55
  9432  003F9A                     u4800:
  9433  003F9A                     
  9434                           ;i2c.c: 68:     PIR1bits.SSPIF = 0;
  9435  003F9A  969E               	bcf	158,3,c	;volatile
  9436  003F9C  50C5               	movf	197,w,c	;volatile
  9437  003F9E  0012               	return		;funcret
  9438  003FA0                     __end_of_I2C_Write:
  9439                           	callstack 0
  9440                           
  9441 ;; *************** function _I2C_Stop *****************
  9442 ;; Defined at:
  9443 ;;		line 34 in file "i2c.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;		None
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;		None
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  1    wreg      void 
  9450 ;; Registers used:
  9451 ;;		None
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9457 ;;      Params:         0       0       0       0       0       0       0       0       0
  9458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9460 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9461 ;;Total ram usage:        0 bytes
  9462 ;; Hardware stack levels used: 1
  9463 ;; This function calls:
  9464 ;;		Nothing
  9465 ;; This function is called by:
  9466 ;;		_MPU6050_Write
  9467 ;;		_MPU6050_Read
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           	psect	text45
  9472  003FE0                     __ptext45:
  9473                           	callstack 0
  9474  003FE0                     _I2C_Stop:
  9475                           	callstack 28
  9476  003FE0                     
  9477                           ;i2c.c: 36:     SSPCON2bits.PEN = 1;
  9478  003FE0  84C5               	bsf	197,2,c	;volatile
  9479  003FE2                     l31:
  9480  003FE2  A69E               	btfss	158,3,c	;volatile
  9481  003FE4  EFF6  F01F         	goto	u4771
  9482  003FE8  EFF8  F01F         	goto	u4770
  9483  003FEC                     u4771:
  9484  003FEC  EFF1  F01F         	goto	l31
  9485  003FF0                     u4770:
  9486  003FF0                     
  9487                           ;i2c.c: 38:     PIR1bits.SSPIF = 0;
  9488  003FF0  969E               	bcf	158,3,c	;volatile
  9489  003FF2  0012               	return		;funcret
  9490  003FF4                     __end_of_I2C_Stop:
  9491                           	callstack 0
  9492                           
  9493 ;; *************** function _I2C_Start *****************
  9494 ;; Defined at:
  9495 ;;		line 27 in file "i2c.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;		None
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;		None
  9500 ;; Return value:  Size  Location     Type
  9501 ;;                  1    wreg      void 
  9502 ;; Registers used:
  9503 ;;		None
  9504 ;; Tracked objects:
  9505 ;;		On entry : 0/0
  9506 ;;		On exit  : 0/0
  9507 ;;		Unchanged: 0/0
  9508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9509 ;;      Params:         0       0       0       0       0       0       0       0       0
  9510 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9512 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9513 ;;Total ram usage:        0 bytes
  9514 ;; Hardware stack levels used: 1
  9515 ;; This function calls:
  9516 ;;		Nothing
  9517 ;; This function is called by:
  9518 ;;		_MPU6050_Write
  9519 ;;		_MPU6050_Read
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           	psect	text46
  9524  003FF4                     __ptext46:
  9525                           	callstack 0
  9526  003FF4                     _I2C_Start:
  9527                           	callstack 28
  9528  003FF4                     
  9529                           ;i2c.c: 29:     SSPCON2bits.SEN = 1;
  9530  003FF4  80C5               	bsf	197,0,c	;volatile
  9531  003FF6                     l25:
  9532  003FF6  A69E               	btfss	158,3,c	;volatile
  9533  003FF8  EF00  F020         	goto	u4761
  9534  003FFC  EF02  F020         	goto	u4760
  9535  004000                     u4761:
  9536  004000  EFFB  F01F         	goto	l25
  9537  004004                     u4760:
  9538  004004                     
  9539                           ;i2c.c: 31:     PIR1bits.SSPIF = 0;
  9540  004004  969E               	bcf	158,3,c	;volatile
  9541  004006  0012               	return		;funcret
  9542  004008                     __end_of_I2C_Start:
  9543                           	callstack 0
  9544                           
  9545 ;; *************** function _Lcd_Write_String *****************
  9546 ;; Defined at:
  9547 ;;		line 104 in file "lcd.c"
  9548 ;; Parameters:    Size  Location     Type
  9549 ;;  a               2    4[COMRAM] PTR const unsigned char 
  9550 ;;		 -> buffer(14), 
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;  i               2    6[COMRAM] int 
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  1    wreg      void 
  9555 ;; Registers used:
  9556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9562 ;;      Params:         2       0       0       0       0       0       0       0       0
  9563 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9565 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9566 ;;Total ram usage:        4 bytes
  9567 ;; Hardware stack levels used: 1
  9568 ;; Hardware stack levels required when called: 2
  9569 ;; This function calls:
  9570 ;;		_Lcd_Write_Char
  9571 ;; This function is called by:
  9572 ;;		_main
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           	psect	text47
  9577  003D74                     __ptext47:
  9578                           	callstack 0
  9579  003D74                     _Lcd_Write_String:
  9580                           	callstack 28
  9581  003D74                     
  9582                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  9583  003D74  0E00               	movlw	0
  9584  003D76  6E08               	movwf	(Lcd_Write_String@i+1)^0,c
  9585  003D78  0E00               	movlw	0
  9586  003D7A  6E07               	movwf	Lcd_Write_String@i^0,c
  9587  003D7C  EFCB  F01E         	goto	l4446
  9588  003D80                     l4442:
  9589                           
  9590                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  9591  003D80  5007               	movf	Lcd_Write_String@i^0,w,c
  9592  003D82  2405               	addwf	Lcd_Write_String@a^0,w,c
  9593  003D84  6ED9               	movwf	fsr2l,c
  9594  003D86  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  9595  003D88  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  9596  003D8A  6EDA               	movwf	fsr2h,c
  9597  003D8C  50DF               	movf	indf2,w,c
  9598  003D8E  EC66  F01F         	call	_Lcd_Write_Char
  9599  003D92  4A07               	infsnz	Lcd_Write_String@i^0,f,c
  9600  003D94  2A08               	incf	(Lcd_Write_String@i+1)^0,f,c
  9601  003D96                     l4446:
  9602  003D96  5007               	movf	Lcd_Write_String@i^0,w,c
  9603  003D98  2405               	addwf	Lcd_Write_String@a^0,w,c
  9604  003D9A  6ED9               	movwf	fsr2l,c
  9605  003D9C  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  9606  003D9E  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  9607  003DA0  6EDA               	movwf	fsr2h,c
  9608  003DA2  50DF               	movf	indf2,w,c
  9609  003DA4  A4D8               	btfss	status,2,c
  9610  003DA6  EFD7  F01E         	goto	u5151
  9611  003DAA  EFD9  F01E         	goto	u5150
  9612  003DAE                     u5151:
  9613  003DAE  EFC0  F01E         	goto	l4442
  9614  003DB2                     u5150:
  9615  003DB2  0012               	return		;funcret
  9616  003DB4                     __end_of_Lcd_Write_String:
  9617                           	callstack 0
  9618                           
  9619 ;; *************** function _Lcd_Write_Char *****************
  9620 ;; Defined at:
  9621 ;;		line 88 in file "lcd.c"
  9622 ;; Parameters:    Size  Location     Type
  9623 ;;  a               1    wreg     unsigned char 
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;  a               1    3[COMRAM] unsigned char 
  9626 ;;  y               1    2[COMRAM] unsigned char 
  9627 ;;  temp            1    1[COMRAM] unsigned char 
  9628 ;; Return value:  Size  Location     Type
  9629 ;;                  1    wreg      void 
  9630 ;; Registers used:
  9631 ;;		wreg, status,2, status,0, cstack
  9632 ;; Tracked objects:
  9633 ;;		On entry : 0/0
  9634 ;;		On exit  : 0/0
  9635 ;;		Unchanged: 0/0
  9636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9637 ;;      Params:         0       0       0       0       0       0       0       0       0
  9638 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9640 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9641 ;;Total ram usage:        3 bytes
  9642 ;; Hardware stack levels used: 1
  9643 ;; Hardware stack levels required when called: 1
  9644 ;; This function calls:
  9645 ;;		_Lcd_Port
  9646 ;; This function is called by:
  9647 ;;		_Lcd_Write_String
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           	psect	text48
  9652  003ECC                     __ptext48:
  9653                           	callstack 0
  9654  003ECC                     _Lcd_Write_Char:
  9655                           	callstack 28
  9656                           
  9657                           ;incstack = 0
  9658                           ;Lcd_Write_Char@a stored from wreg
  9659  003ECC  6E04               	movwf	Lcd_Write_Char@a^0,c
  9660  003ECE                     
  9661                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  9662  003ECE  5004               	movf	Lcd_Write_Char@a^0,w,c
  9663  003ED0  0B0F               	andlw	15
  9664  003ED2  6E02               	movwf	Lcd_Write_Char@temp^0,c
  9665                           
  9666                           ;lcd.c: 92:     y = a&0xF0;
  9667  003ED4  5004               	movf	Lcd_Write_Char@a^0,w,c
  9668  003ED6  0BF0               	andlw	240
  9669  003ED8  6E03               	movwf	Lcd_Write_Char@y^0,c
  9670  003EDA                     
  9671                           ;lcd.c: 93:     LATDbits.LD2 = 1;
  9672  003EDA  848C               	bsf	140,2,c	;volatile
  9673  003EDC                     
  9674                           ;lcd.c: 94:     Lcd_Port(y>>4);
  9675  003EDC  3803               	swapf	Lcd_Write_Char@y^0,w,c
  9676  003EDE  0B0F               	andlw	15
  9677  003EE0  ECA7  F01D         	call	_Lcd_Port
  9678  003EE4                     
  9679                           ;lcd.c: 95:     LATDbits.LD3 = 1;
  9680  003EE4  868C               	bsf	140,3,c	;volatile
  9681  003EE6                     
  9682                           ;lcd.c: 96:     _delay((unsigned long)((40)*(48000000/4000000.0)));
  9683  003EE6  0EA0               	movlw	160
  9684  003EE8                     u5207:
  9685  003EE8  2EE8               	decfsz	wreg,f,c
  9686  003EEA  D7FE               	bra	u5207
  9687  003EEC                     
  9688                           ;lcd.c: 97:     LATDbits.LD3 = 0;
  9689  003EEC  968C               	bcf	140,3,c	;volatile
  9690  003EEE                     
  9691                           ;lcd.c: 98:     Lcd_Port(temp);
  9692  003EEE  5002               	movf	Lcd_Write_Char@temp^0,w,c
  9693  003EF0  ECA7  F01D         	call	_Lcd_Port
  9694  003EF4                     
  9695                           ;lcd.c: 99:     LATDbits.LD3 = 1;
  9696  003EF4  868C               	bsf	140,3,c	;volatile
  9697  003EF6                     
  9698                           ;lcd.c: 100:     _delay((unsigned long)((40)*(48000000/4000000.0)));
  9699  003EF6  0EA0               	movlw	160
  9700  003EF8                     u5217:
  9701  003EF8  2EE8               	decfsz	wreg,f,c
  9702  003EFA  D7FE               	bra	u5217
  9703  003EFC                     
  9704                           ;lcd.c: 101:     LATDbits.LD3 = 0;
  9705  003EFC  968C               	bcf	140,3,c	;volatile
  9706  003EFE  0012               	return		;funcret
  9707  003F00                     __end_of_Lcd_Write_Char:
  9708                           	callstack 0
  9709                           
  9710 ;; *************** function _Lcd_Set_Cursor *****************
  9711 ;; Defined at:
  9712 ;;		line 26 in file "lcd.c"
  9713 ;; Parameters:    Size  Location     Type
  9714 ;;  a               1    wreg     unsigned char 
  9715 ;;  b               1    3[COMRAM] unsigned char 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;  a               1    4[COMRAM] unsigned char 
  9718 ;;  temp            1    7[COMRAM] unsigned char 
  9719 ;;  y               1    6[COMRAM] unsigned char 
  9720 ;;  z               1    5[COMRAM] unsigned char 
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  1    wreg      void 
  9723 ;; Registers used:
  9724 ;;		wreg, status,2, status,0, cstack
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9730 ;;      Params:         1       0       0       0       0       0       0       0       0
  9731 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9733 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9734 ;;Total ram usage:        5 bytes
  9735 ;; Hardware stack levels used: 1
  9736 ;; Hardware stack levels required when called: 2
  9737 ;; This function calls:
  9738 ;;		_Lcd_Cmd
  9739 ;; This function is called by:
  9740 ;;		_main
  9741 ;; This function uses a non-reentrant model
  9742 ;;
  9743                           
  9744                           	psect	text49
  9745  0031F0                     __ptext49:
  9746                           	callstack 0
  9747  0031F0                     _Lcd_Set_Cursor:
  9748                           	callstack 28
  9749                           
  9750                           ;incstack = 0
  9751                           ;Lcd_Set_Cursor@a stored from wreg
  9752  0031F0  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  9753  0031F2                     
  9754                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  9755  0031F2  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  9756  0031F4  A4D8               	btfss	status,2,c
  9757  0031F6  EFFF  F018         	goto	u5111
  9758  0031FA  EF01  F019         	goto	u5110
  9759  0031FE                     u5111:
  9760  0031FE  EF12  F019         	goto	l4384
  9761  003202                     u5110:
  9762  003202                     
  9763                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  9764  003202  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  9765  003204  0F7F               	addlw	127
  9766  003206  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  9767                           
  9768                           ;lcd.c: 32:         z = temp>>4;
  9769  003208  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  9770  00320A  0B0F               	andlw	15
  9771  00320C  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  9772                           
  9773                           ;lcd.c: 33:         y = temp & 0x0F;
  9774  00320E  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  9775  003210  0B0F               	andlw	15
  9776  003212  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  9777  003214                     
  9778                           ;lcd.c: 34:         Lcd_Cmd(z);
  9779  003214  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  9780  003216  ECA4  F01F         	call	_Lcd_Cmd
  9781  00321A                     
  9782                           ;lcd.c: 35:         Lcd_Cmd(y);
  9783  00321A  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  9784  00321C  ECA4  F01F         	call	_Lcd_Cmd
  9785                           
  9786                           ;lcd.c: 36:     }
  9787  003220  EF60  F019         	goto	l105
  9788  003224                     l4384:
  9789  003224  0E02               	movlw	2
  9790  003226  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  9791  003228  A4D8               	btfss	status,2,c
  9792  00322A  EF19  F019         	goto	u5121
  9793  00322E  EF1B  F019         	goto	u5120
  9794  003232                     u5121:
  9795  003232  EF2C  F019         	goto	l4392
  9796  003236                     u5120:
  9797  003236                     
  9798                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  9799  003236  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  9800  003238  0FBF               	addlw	191
  9801  00323A  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  9802                           
  9803                           ;lcd.c: 40:         z = temp>>4;
  9804  00323C  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  9805  00323E  0B0F               	andlw	15
  9806  003240  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  9807                           
  9808                           ;lcd.c: 41:         y = temp & 0x0F;
  9809  003242  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  9810  003244  0B0F               	andlw	15
  9811  003246  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  9812  003248                     
  9813                           ;lcd.c: 42:         Lcd_Cmd(z);
  9814  003248  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  9815  00324A  ECA4  F01F         	call	_Lcd_Cmd
  9816  00324E                     
  9817                           ;lcd.c: 43:         Lcd_Cmd(y);
  9818  00324E  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  9819  003250  ECA4  F01F         	call	_Lcd_Cmd
  9820                           
  9821                           ;lcd.c: 44:     }
  9822  003254  EF60  F019         	goto	l105
  9823  003258                     l4392:
  9824  003258  0E03               	movlw	3
  9825  00325A  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  9826  00325C  A4D8               	btfss	status,2,c
  9827  00325E  EF33  F019         	goto	u5131
  9828  003262  EF35  F019         	goto	u5130
  9829  003266                     u5131:
  9830  003266  EF46  F019         	goto	l4400
  9831  00326A                     u5130:
  9832  00326A                     
  9833                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  9834  00326A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  9835  00326C  0F93               	addlw	147
  9836  00326E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  9837                           
  9838                           ;lcd.c: 48:         z = temp>>4;
  9839  003270  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  9840  003272  0B0F               	andlw	15
  9841  003274  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  9842                           
  9843                           ;lcd.c: 49:         y = temp & 0x0F;
  9844  003276  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  9845  003278  0B0F               	andlw	15
  9846  00327A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  9847  00327C                     
  9848                           ;lcd.c: 50:         Lcd_Cmd(z);
  9849  00327C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  9850  00327E  ECA4  F01F         	call	_Lcd_Cmd
  9851  003282                     
  9852                           ;lcd.c: 51:         Lcd_Cmd(y);
  9853  003282  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  9854  003284  ECA4  F01F         	call	_Lcd_Cmd
  9855                           
  9856                           ;lcd.c: 52:     }
  9857  003288  EF60  F019         	goto	l105
  9858  00328C                     l4400:
  9859  00328C  0E04               	movlw	4
  9860  00328E  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  9861  003290  A4D8               	btfss	status,2,c
  9862  003292  EF4D  F019         	goto	u5141
  9863  003296  EF4F  F019         	goto	u5140
  9864  00329A                     u5141:
  9865  00329A  EF60  F019         	goto	l101
  9866  00329E                     u5140:
  9867  00329E                     
  9868                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  9869  00329E  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  9870  0032A0  0FD3               	addlw	211
  9871  0032A2  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  9872                           
  9873                           ;lcd.c: 56:         z = temp>>4;
  9874  0032A4  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  9875  0032A6  0B0F               	andlw	15
  9876  0032A8  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  9877                           
  9878                           ;lcd.c: 57:         y = temp & 0x0F;
  9879  0032AA  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  9880  0032AC  0B0F               	andlw	15
  9881  0032AE  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  9882  0032B0                     
  9883                           ;lcd.c: 58:         Lcd_Cmd(z);
  9884  0032B0  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  9885  0032B2  ECA4  F01F         	call	_Lcd_Cmd
  9886  0032B6                     
  9887                           ;lcd.c: 59:         Lcd_Cmd(y);
  9888  0032B6  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  9889  0032B8  ECA4  F01F         	call	_Lcd_Cmd
  9890  0032BC  EF60  F019         	goto	l105
  9891  0032C0                     l101:
  9892  0032C0                     l105:
  9893  0032C0  0012               	return		;funcret
  9894  0032C2                     __end_of_Lcd_Set_Cursor:
  9895                           	callstack 0
  9896                           
  9897 ;; *************** function _Lcd_Init *****************
  9898 ;; Defined at:
  9899 ;;		line 63 in file "lcd.c"
  9900 ;; Parameters:    Size  Location     Type
  9901 ;;		None
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;		None
  9904 ;; Return value:  Size  Location     Type
  9905 ;;                  1    wreg      void 
  9906 ;; Registers used:
  9907 ;;		wreg, status,2, cstack
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9913 ;;      Params:         0       0       0       0       0       0       0       0       0
  9914 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9915 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9916 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9917 ;;Total ram usage:        2 bytes
  9918 ;; Hardware stack levels used: 1
  9919 ;; Hardware stack levels required when called: 3
  9920 ;; This function calls:
  9921 ;;		_Lcd_Clear
  9922 ;;		_Lcd_Cmd
  9923 ;;		_Lcd_Port
  9924 ;; This function is called by:
  9925 ;;		_main
  9926 ;; This function uses a non-reentrant model
  9927 ;;
  9928                           
  9929                           	psect	text50
  9930  003704                     __ptext50:
  9931                           	callstack 0
  9932  003704                     _Lcd_Init:
  9933                           	callstack 27
  9934  003704                     
  9935                           ;lcd.c: 65:  TRISDbits.TRISD2 = 0;
  9936  003704  9495               	bcf	149,2,c	;volatile
  9937                           
  9938                           ;lcd.c: 66:  TRISDbits.TRISD3 = 0;
  9939  003706  9695               	bcf	149,3,c	;volatile
  9940                           
  9941                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  9942  003708  9895               	bcf	149,4,c	;volatile
  9943                           
  9944                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  9945  00370A  9A95               	bcf	149,5,c	;volatile
  9946                           
  9947                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  9948  00370C  9C95               	bcf	149,6,c	;volatile
  9949                           
  9950                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  9951  00370E  9E95               	bcf	149,7,c	;volatile
  9952  003710                     
  9953                           ;lcd.c: 71:     Lcd_Port(0x00);
  9954  003710  0E00               	movlw	0
  9955  003712  ECA7  F01D         	call	_Lcd_Port
  9956  003716                     
  9957                           ;lcd.c: 72:     _delay((unsigned long)((20)*(48000000/4000.0)));
  9958  003716  0E02               	movlw	2
  9959  003718  6E05               	movwf	(??_Lcd_Init+1)^0,c
  9960  00371A  0E38               	movlw	56
  9961  00371C  6E04               	movwf	??_Lcd_Init^0,c
  9962  00371E  0EAD               	movlw	173
  9963  003720                     u5227:
  9964  003720  2EE8               	decfsz	wreg,f,c
  9965  003722  D7FE               	bra	u5227
  9966  003724  2E04               	decfsz	??_Lcd_Init^0,f,c
  9967  003726  D7FC               	bra	u5227
  9968  003728  2E05               	decfsz	(??_Lcd_Init+1)^0,f,c
  9969  00372A  D7FA               	bra	u5227
  9970  00372C  F000               	nop	
  9971  00372E                     
  9972                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  9973  00372E  0E03               	movlw	3
  9974  003730  ECA4  F01F         	call	_Lcd_Cmd
  9975  003734                     
  9976                           ;lcd.c: 74:     _delay((unsigned long)((5)*(48000000/4000.0)));
  9977  003734  0E4E               	movlw	78
  9978  003736  6E04               	movwf	??_Lcd_Init^0,c
  9979  003738  0EEB               	movlw	235
  9980  00373A                     u5237:
  9981  00373A  2EE8               	decfsz	wreg,f,c
  9982  00373C  D7FE               	bra	u5237
  9983  00373E  2E04               	decfsz	??_Lcd_Init^0,f,c
  9984  003740  D7FC               	bra	u5237
  9985  003742  F000               	nop	
  9986  003744                     
  9987                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  9988  003744  0E03               	movlw	3
  9989  003746  ECA4  F01F         	call	_Lcd_Cmd
  9990  00374A                     
  9991                           ;lcd.c: 76:     _delay((unsigned long)((11)*(48000000/4000.0)));
  9992  00374A  0EAC               	movlw	172
  9993  00374C  6E04               	movwf	??_Lcd_Init^0,c
  9994  00374E  0E6C               	movlw	108
  9995  003750                     u5247:
  9996  003750  2EE8               	decfsz	wreg,f,c
  9997  003752  D7FE               	bra	u5247
  9998  003754  2E04               	decfsz	??_Lcd_Init^0,f,c
  9999  003756  D7FC               	bra	u5247
 10000  003758  D000               	nop2	
 10001  00375A                     
 10002                           ;lcd.c: 77:     Lcd_Cmd(0x03);
 10003  00375A  0E03               	movlw	3
 10004  00375C  ECA4  F01F         	call	_Lcd_Cmd
 10005  003760                     
 10006                           ;lcd.c: 78:     Lcd_Cmd(0x02);
 10007  003760  0E02               	movlw	2
 10008  003762  ECA4  F01F         	call	_Lcd_Cmd
 10009  003766                     
 10010                           ;lcd.c: 79:     Lcd_Cmd(0x02);
 10011  003766  0E02               	movlw	2
 10012  003768  ECA4  F01F         	call	_Lcd_Cmd
 10013  00376C                     
 10014                           ;lcd.c: 80:     Lcd_Cmd(0x08);
 10015  00376C  0E08               	movlw	8
 10016  00376E  ECA4  F01F         	call	_Lcd_Cmd
 10017  003772                     
 10018                           ;lcd.c: 81:     Lcd_Cmd(0x00);
 10019  003772  0E00               	movlw	0
 10020  003774  ECA4  F01F         	call	_Lcd_Cmd
 10021  003778                     
 10022                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
 10023  003778  0E0C               	movlw	12
 10024  00377A  ECA4  F01F         	call	_Lcd_Cmd
 10025  00377E                     
 10026                           ;lcd.c: 83:     Lcd_Cmd(0x00);
 10027  00377E  0E00               	movlw	0
 10028  003780  ECA4  F01F         	call	_Lcd_Cmd
 10029  003784                     
 10030                           ;lcd.c: 84:     Lcd_Cmd(0x06);
 10031  003784  0E06               	movlw	6
 10032  003786  ECA4  F01F         	call	_Lcd_Cmd
 10033  00378A                     
 10034                           ;lcd.c: 85:     Lcd_Clear();
 10035  00378A  EC04  F020         	call	_Lcd_Clear	;wreg free
 10036  00378E  0012               	return		;funcret
 10037  003790                     __end_of_Lcd_Init:
 10038                           	callstack 0
 10039                           
 10040 ;; *************** function _Lcd_Clear *****************
 10041 ;; Defined at:
 10042 ;;		line 20 in file "lcd.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;		None
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;		None
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  1    wreg      void 
 10049 ;; Registers used:
 10050 ;;		wreg, status,2, cstack
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10056 ;;      Params:         0       0       0       0       0       0       0       0       0
 10057 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10058 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10059 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10060 ;;Total ram usage:        0 bytes
 10061 ;; Hardware stack levels used: 1
 10062 ;; Hardware stack levels required when called: 2
 10063 ;; This function calls:
 10064 ;;		_Lcd_Cmd
 10065 ;; This function is called by:
 10066 ;;		_Lcd_Init
 10067 ;;		_main
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071                           	psect	text51
 10072  004008                     __ptext51:
 10073                           	callstack 0
 10074  004008                     _Lcd_Clear:
 10075                           	callstack 27
 10076  004008                     
 10077                           ;lcd.c: 22:     Lcd_Cmd(0);
 10078  004008  0E00               	movlw	0
 10079  00400A  ECA4  F01F         	call	_Lcd_Cmd
 10080                           
 10081                           ;lcd.c: 23:     Lcd_Cmd(1);
 10082  00400E  0E01               	movlw	1
 10083  004010  ECA4  F01F         	call	_Lcd_Cmd
 10084  004014  0012               	return		;funcret
 10085  004016                     __end_of_Lcd_Clear:
 10086                           	callstack 0
 10087                           
 10088 ;; *************** function _Lcd_Cmd *****************
 10089 ;; Defined at:
 10090 ;;		line 11 in file "lcd.c"
 10091 ;; Parameters:    Size  Location     Type
 10092 ;;  a               1    wreg     unsigned char 
 10093 ;; Auto vars:     Size  Location     Type
 10094 ;;  a               1    2[COMRAM] unsigned char 
 10095 ;; Return value:  Size  Location     Type
 10096 ;;                  1    wreg      void 
 10097 ;; Registers used:
 10098 ;;		wreg, status,2, cstack
 10099 ;; Tracked objects:
 10100 ;;		On entry : 0/0
 10101 ;;		On exit  : 0/0
 10102 ;;		Unchanged: 0/0
 10103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10104 ;;      Params:         0       0       0       0       0       0       0       0       0
 10105 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10106 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10107 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10108 ;;Total ram usage:        2 bytes
 10109 ;; Hardware stack levels used: 1
 10110 ;; Hardware stack levels required when called: 1
 10111 ;; This function calls:
 10112 ;;		_Lcd_Port
 10113 ;; This function is called by:
 10114 ;;		_Lcd_Clear
 10115 ;;		_Lcd_Set_Cursor
 10116 ;;		_Lcd_Init
 10117 ;;		_Lcd_Shift_Right
 10118 ;;		_Lcd_Shift_Left
 10119 ;;		_Lcd_Blink
 10120 ;;		_Lcd_NoBlink
 10121 ;; This function uses a non-reentrant model
 10122 ;;
 10123                           
 10124                           	psect	text52
 10125  003F48                     __ptext52:
 10126                           	callstack 0
 10127  003F48                     _Lcd_Cmd:
 10128                           	callstack 28
 10129                           
 10130                           ;incstack = 0
 10131                           ;Lcd_Cmd@a stored from wreg
 10132  003F48  6E03               	movwf	Lcd_Cmd@a^0,c
 10133  003F4A                     
 10134                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATDbits.LD2 = 0;
 10135  003F4A  948C               	bcf	140,2,c	;volatile
 10136  003F4C                     
 10137                           ;lcd.c: 14:     Lcd_Port(a);
 10138  003F4C  5003               	movf	Lcd_Cmd@a^0,w,c
 10139  003F4E  ECA7  F01D         	call	_Lcd_Port
 10140  003F52                     
 10141                           ;lcd.c: 15:     LATDbits.LD3 = 1;
 10142  003F52  868C               	bsf	140,3,c	;volatile
 10143  003F54                     
 10144                           ;lcd.c: 16:     _delay((unsigned long)((4)*(48000000/4000.0)));
 10145  003F54  0E3F               	movlw	63
 10146  003F56  6E02               	movwf	??_Lcd_Cmd^0,c
 10147  003F58  0E55               	movlw	85
 10148  003F5A                     u5257:
 10149  003F5A  2EE8               	decfsz	wreg,f,c
 10150  003F5C  D7FE               	bra	u5257
 10151  003F5E  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 10152  003F60  D7FC               	bra	u5257
 10153  003F62  F000               	nop	
 10154  003F64                     
 10155                           ;lcd.c: 17:     LATDbits.LD3 = 0;
 10156  003F64  968C               	bcf	140,3,c	;volatile
 10157  003F66  0012               	return		;funcret
 10158  003F68                     __end_of_Lcd_Cmd:
 10159                           	callstack 0
 10160                           
 10161 ;; *************** function _Lcd_Port *****************
 10162 ;; Defined at:
 10163 ;;		line 3 in file "lcd.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  a               1    wreg     unsigned char 
 10166 ;; Auto vars:     Size  Location     Type
 10167 ;;  a               1    0[COMRAM] unsigned char 
 10168 ;; Return value:  Size  Location     Type
 10169 ;;                  1    wreg      void 
 10170 ;; Registers used:
 10171 ;;		wreg
 10172 ;; Tracked objects:
 10173 ;;		On entry : 0/0
 10174 ;;		On exit  : 0/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10177 ;;      Params:         0       0       0       0       0       0       0       0       0
 10178 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10179 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10180 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10181 ;;Total ram usage:        1 bytes
 10182 ;; Hardware stack levels used: 1
 10183 ;; This function calls:
 10184 ;;		Nothing
 10185 ;; This function is called by:
 10186 ;;		_Lcd_Cmd
 10187 ;;		_Lcd_Init
 10188 ;;		_Lcd_Write_Char
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           	psect	text53
 10193  003B4E                     __ptext53:
 10194                           	callstack 0
 10195  003B4E                     _Lcd_Port:
 10196                           	callstack 28
 10197                           
 10198                           ;incstack = 0
 10199                           ;Lcd_Port@a stored from wreg
 10200  003B4E  6E01               	movwf	Lcd_Port@a^0,c
 10201  003B50                     
 10202                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
 10203  003B50  A001               	btfss	Lcd_Port@a^0,0,c
 10204  003B52  EFAD  F01D         	goto	u4061
 10205  003B56  EFAF  F01D         	goto	u4060
 10206  003B5A                     u4061:
 10207  003B5A  EFB2  F01D         	goto	l74
 10208  003B5E                     u4060:
 10209  003B5E  888C               	bsf	140,4,c	;volatile
 10210  003B60  EFB3  F01D         	goto	l3714
 10211  003B64                     l74:
 10212  003B64  988C               	bcf	140,4,c	;volatile
 10213  003B66                     l3714:
 10214                           
 10215                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
 10216  003B66  A201               	btfss	Lcd_Port@a^0,1,c
 10217  003B68  EFB8  F01D         	goto	u4071
 10218  003B6C  EFBA  F01D         	goto	u4070
 10219  003B70                     u4071:
 10220  003B70  EFBD  F01D         	goto	l78
 10221  003B74                     u4070:
 10222  003B74  8A8C               	bsf	140,5,c	;volatile
 10223  003B76  EFBE  F01D         	goto	l3718
 10224  003B7A                     l78:
 10225  003B7A  9A8C               	bcf	140,5,c	;volatile
 10226  003B7C                     l3718:
 10227                           
 10228                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
 10229  003B7C  A401               	btfss	Lcd_Port@a^0,2,c
 10230  003B7E  EFC3  F01D         	goto	u4081
 10231  003B82  EFC5  F01D         	goto	u4080
 10232  003B86                     u4081:
 10233  003B86  EFC8  F01D         	goto	l82
 10234  003B8A                     u4080:
 10235  003B8A  8C8C               	bsf	140,6,c	;volatile
 10236  003B8C  EFC9  F01D         	goto	l3722
 10237  003B90                     l82:
 10238  003B90  9C8C               	bcf	140,6,c	;volatile
 10239  003B92                     l3722:
 10240                           
 10241                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
 10242  003B92  A601               	btfss	Lcd_Port@a^0,3,c
 10243  003B94  EFCE  F01D         	goto	u4091
 10244  003B98  EFD0  F01D         	goto	u4090
 10245  003B9C                     u4091:
 10246  003B9C  EFD3  F01D         	goto	l86
 10247  003BA0                     u4090:
 10248  003BA0  8E8C               	bsf	140,7,c	;volatile
 10249  003BA2  EFD4  F01D         	goto	l89
 10250  003BA6                     l86:
 10251  003BA6  9E8C               	bcf	140,7,c	;volatile
 10252  003BA8                     l89:
 10253  003BA8  0012               	return		;funcret
 10254  003BAA                     __end_of_Lcd_Port:
 10255                           	callstack 0
 10256                           
 10257 ;; *************** function _I2C_Init_Master *****************
 10258 ;; Defined at:
 10259 ;;		line 12 in file "i2c.c"
 10260 ;; Parameters:    Size  Location     Type
 10261 ;;  sp_i2c          1    wreg     unsigned char 
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;  sp_i2c          1    0[COMRAM] unsigned char 
 10264 ;; Return value:  Size  Location     Type
 10265 ;;                  1    wreg      void 
 10266 ;; Registers used:
 10267 ;;		wreg, status,2, status,0
 10268 ;; Tracked objects:
 10269 ;;		On entry : 0/0
 10270 ;;		On exit  : 0/0
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10273 ;;      Params:         0       0       0       0       0       0       0       0       0
 10274 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10275 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10276 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10277 ;;Total ram usage:        1 bytes
 10278 ;; Hardware stack levels used: 1
 10279 ;; This function calls:
 10280 ;;		Nothing
 10281 ;; This function is called by:
 10282 ;;		_main
 10283 ;; This function uses a non-reentrant model
 10284 ;;
 10285                           
 10286                           	psect	text54
 10287  003D32                     __ptext54:
 10288                           	callstack 0
 10289  003D32                     _I2C_Init_Master:
 10290                           	callstack 30
 10291                           
 10292                           ;incstack = 0
 10293                           ;I2C_Init_Master@sp_i2c stored from wreg
 10294  003D32  6E01               	movwf	I2C_Init_Master@sp_i2c^0,c
 10295  003D34                     
 10296                           ;i2c.c: 12: void I2C_Init_Master(unsigned char sp_i2c);i2c.c: 13: {;i2c.c: 14:     TRISB
      +                          bits.TRISB1 = 1;
 10297  003D34  8293               	bsf	147,1,c	;volatile
 10298                           
 10299                           ;i2c.c: 15:     TRISBbits.TRISB0 = 1;
 10300  003D36  8093               	bsf	147,0,c	;volatile
 10301  003D38                     
 10302                           ;i2c.c: 16:     SSPSTAT = sp_i2c;
 10303  003D38  C001  FFC7         	movff	I2C_Init_Master@sp_i2c,4039	;volatile
 10304  003D3C                     
 10305                           ;i2c.c: 17:  SSPCON1 = 0x28;
 10306  003D3C  0E28               	movlw	40
 10307  003D3E  6EC6               	movwf	198,c	;volatile
 10308  003D40                     
 10309                           ;i2c.c: 18:     SSPCON2 = 0x00;
 10310  003D40  0E00               	movlw	0
 10311  003D42  6EC5               	movwf	197,c	;volatile
 10312  003D44                     
 10313                           ;i2c.c: 19:     if(sp_i2c == 0x80){
 10314  003D44  0E80               	movlw	128
 10315  003D46  1801               	xorwf	I2C_Init_Master@sp_i2c^0,w,c
 10316  003D48  A4D8               	btfss	status,2,c
 10317  003D4A  EFA9  F01E         	goto	u5091
 10318  003D4E  EFAB  F01E         	goto	u5090
 10319  003D52                     u5091:
 10320  003D52  EFAF  F01E         	goto	l4372
 10321  003D56                     u5090:
 10322  003D56                     
 10323                           ;i2c.c: 20:         SSPADD = 119;
 10324  003D56  0E77               	movlw	119
 10325  003D58  6EC8               	movwf	200,c	;volatile
 10326                           
 10327                           ;i2c.c: 21:     }
 10328  003D5A  EFB9  F01E         	goto	l22
 10329  003D5E                     l4372:
 10330  003D5E  5001               	movf	I2C_Init_Master@sp_i2c^0,w,c
 10331  003D60  A4D8               	btfss	status,2,c
 10332  003D62  EFB5  F01E         	goto	u5101
 10333  003D66  EFB7  F01E         	goto	u5100
 10334  003D6A                     u5101:
 10335  003D6A  EFB9  F01E         	goto	l22
 10336  003D6E                     u5100:
 10337  003D6E                     
 10338                           ;i2c.c: 23:         SSPADD = 29;
 10339  003D6E  0E1D               	movlw	29
 10340  003D70  6EC8               	movwf	200,c	;volatile
 10341  003D72                     l22:
 10342  003D72  0012               	return		;funcret
 10343  003D74                     __end_of_I2C_Init_Master:
 10344                           	callstack 0
 10345                           
 10346                           	psect	rparam
 10347  0000                     
 10348                           	psect	idloc
 10349                           
 10350                           ;Config register IDLOC0 @ 0x200000
 10351                           ;	unspecified, using default values
 10352  200000                     	org	2097152
 10353  200000  FF                 	db	255
 10354                           
 10355                           ;Config register IDLOC1 @ 0x200001
 10356                           ;	unspecified, using default values
 10357  200001                     	org	2097153
 10358  200001  FF                 	db	255
 10359                           
 10360                           ;Config register IDLOC2 @ 0x200002
 10361                           ;	unspecified, using default values
 10362  200002                     	org	2097154
 10363  200002  FF                 	db	255
 10364                           
 10365                           ;Config register IDLOC3 @ 0x200003
 10366                           ;	unspecified, using default values
 10367  200003                     	org	2097155
 10368  200003  FF                 	db	255
 10369                           
 10370                           ;Config register IDLOC4 @ 0x200004
 10371                           ;	unspecified, using default values
 10372  200004                     	org	2097156
 10373  200004  FF                 	db	255
 10374                           
 10375                           ;Config register IDLOC5 @ 0x200005
 10376                           ;	unspecified, using default values
 10377  200005                     	org	2097157
 10378  200005  FF                 	db	255
 10379                           
 10380                           ;Config register IDLOC6 @ 0x200006
 10381                           ;	unspecified, using default values
 10382  200006                     	org	2097158
 10383  200006  FF                 	db	255
 10384                           
 10385                           ;Config register IDLOC7 @ 0x200007
 10386                           ;	unspecified, using default values
 10387  200007                     	org	2097159
 10388  200007  FF                 	db	255
 10389                           
 10390                           	psect	config
 10391                           
 10392                           ;Config register CONFIG1L @ 0x300000
 10393                           ;	PLL Prescaler Selection bits
 10394                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
 10395                           ;	System Clock Postscaler Selection bits
 10396                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10397                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10398                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
 10399  300000                     	org	3145728
 10400  300000  21                 	db	33
 10401                           
 10402                           ;Config register CONFIG1H @ 0x300001
 10403                           ;	Oscillator Selection bits
 10404                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
 10405                           ;	Fail-Safe Clock Monitor Enable bit
 10406                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10407                           ;	Internal/External Oscillator Switchover bit
 10408                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10409  300001                     	org	3145729
 10410  300001  0E                 	db	14
 10411                           
 10412                           ;Config register CONFIG2L @ 0x300002
 10413                           ;	Power-up Timer Enable bit
 10414                           ;	PWRT = OFF, PWRT disabled
 10415                           ;	Brown-out Reset Enable bits
 10416                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10417                           ;	Brown-out Reset Voltage bits
 10418                           ;	BORV = 3, Minimum setting 2.05V
 10419                           ;	USB Voltage Regulator Enable bit
 10420                           ;	VREGEN = OFF, USB voltage regulator disabled
 10421  300002                     	org	3145730
 10422  300002  19                 	db	25
 10423                           
 10424                           ;Config register CONFIG2H @ 0x300003
 10425                           ;	Watchdog Timer Enable bit
 10426                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10427                           ;	Watchdog Timer Postscale Select bits
 10428                           ;	WDTPS = 32768, 1:32768
 10429  300003                     	org	3145731
 10430  300003  1E                 	db	30
 10431                           
 10432                           ; Padding undefined space
 10433  300004                     	org	3145732
 10434  300004  FF                 	db	255
 10435                           
 10436                           ;Config register CONFIG3H @ 0x300005
 10437                           ;	CCP2 MUX bit
 10438                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10439                           ;	PORTB A/D Enable bit
 10440                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10441                           ;	Low-Power Timer 1 Oscillator Enable bit
 10442                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10443                           ;	MCLR Pin Enable bit
 10444                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10445  300005                     	org	3145733
 10446  300005  81                 	db	129
 10447                           
 10448                           ;Config register CONFIG4L @ 0x300006
 10449                           ;	Stack Full/Underflow Reset Enable bit
 10450                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10451                           ;	Single-Supply ICSP Enable bit
 10452                           ;	LVP = OFF, Single-Supply ICSP disabled
 10453                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10454                           ;	ICPRT = OFF, ICPORT disabled
 10455                           ;	Extended Instruction Set Enable bit
 10456                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10457                           ;	Background Debugger Enable bit
 10458                           ;	DEBUG = 0x1, unprogrammed default
 10459  300006                     	org	3145734
 10460  300006  81                 	db	129
 10461                           
 10462                           ; Padding undefined space
 10463  300007                     	org	3145735
 10464  300007  FF                 	db	255
 10465                           
 10466                           ;Config register CONFIG5L @ 0x300008
 10467                           ;	Code Protection bit
 10468                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10469                           ;	Code Protection bit
 10470                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10471                           ;	Code Protection bit
 10472                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10473                           ;	Code Protection bit
 10474                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10475  300008                     	org	3145736
 10476  300008  0F                 	db	15
 10477                           
 10478                           ;Config register CONFIG5H @ 0x300009
 10479                           ;	Boot Block Code Protection bit
 10480                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10481                           ;	Data EEPROM Code Protection bit
 10482                           ;	CPD = OFF, Data EEPROM is not code-protected
 10483  300009                     	org	3145737
 10484  300009  C0                 	db	192
 10485                           
 10486                           ;Config register CONFIG6L @ 0x30000A
 10487                           ;	Write Protection bit
 10488                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10489                           ;	Write Protection bit
 10490                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10491                           ;	Write Protection bit
 10492                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10493                           ;	Write Protection bit
 10494                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10495  30000A                     	org	3145738
 10496  30000A  0F                 	db	15
 10497                           
 10498                           ;Config register CONFIG6H @ 0x30000B
 10499                           ;	Configuration Register Write Protection bit
 10500                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10501                           ;	Boot Block Write Protection bit
 10502                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10503                           ;	Data EEPROM Write Protection bit
 10504                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10505  30000B                     	org	3145739
 10506  30000B  E0                 	db	224
 10507                           
 10508                           ;Config register CONFIG7L @ 0x30000C
 10509                           ;	Table Read Protection bit
 10510                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10511                           ;	Table Read Protection bit
 10512                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10513                           ;	Table Read Protection bit
 10514                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10515                           ;	Table Read Protection bit
 10516                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10517  30000C                     	org	3145740
 10518  30000C  0F                 	db	15
 10519                           
 10520                           ;Config register CONFIG7H @ 0x30000D
 10521                           ;	Boot Block Table Read Protection bit
 10522                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10523  30000D                     	org	3145741
 10524  30000D  40                 	db	64
 10525                           tosu	equ	0xFFF
 10526                           tosh	equ	0xFFE
 10527                           tosl	equ	0xFFD
 10528                           stkptr	equ	0xFFC
 10529                           pclatu	equ	0xFFB
 10530                           pclath	equ	0xFFA
 10531                           pcl	equ	0xFF9
 10532                           tblptru	equ	0xFF8
 10533                           tblptrh	equ	0xFF7
 10534                           tblptrl	equ	0xFF6
 10535                           tablat	equ	0xFF5
 10536                           prodh	equ	0xFF4
 10537                           prodl	equ	0xFF3
 10538                           indf0	equ	0xFEF
 10539                           postinc0	equ	0xFEE
 10540                           postdec0	equ	0xFED
 10541                           preinc0	equ	0xFEC
 10542                           plusw0	equ	0xFEB
 10543                           fsr0h	equ	0xFEA
 10544                           fsr0l	equ	0xFE9
 10545                           wreg	equ	0xFE8
 10546                           indf1	equ	0xFE7
 10547                           postinc1	equ	0xFE6
 10548                           postdec1	equ	0xFE5
 10549                           preinc1	equ	0xFE4
 10550                           plusw1	equ	0xFE3
 10551                           fsr1h	equ	0xFE2
 10552                           fsr1l	equ	0xFE1
 10553                           bsr	equ	0xFE0
 10554                           indf2	equ	0xFDF
 10555                           postinc2	equ	0xFDE
 10556                           postdec2	equ	0xFDD
 10557                           preinc2	equ	0xFDC
 10558                           plusw2	equ	0xFDB
 10559                           fsr2h	equ	0xFDA
 10560                           fsr2l	equ	0xFD9
 10561                           status	equ	0xFD8

Data Sizes:
    Strings     81
    Constant    0
    Data        0
    BSS         138
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     94     152
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 14
		 -> buffer(BANK0[14]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 14
		 -> buffer(BANK0[14]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S845_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 14
		 -> buffer(BANK0[14]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 14
		 -> buffer(BANK0[14]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 14
		 -> buffer(BANK0[14]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _atoi->_isspace
    _MPU6050_Read_Temperature->___fladd
    ___fladd->___fldiv
    _MPU6050_Read_Gz->___fldiv
    _MPU6050_Read_Gy->___fldiv
    _MPU6050_Read_Gx->___fldiv
    _MPU6050_Read_Az->___fldiv
    _MPU6050_Read_Ay->___fldiv
    _MPU6050_Read_Ax->___fldiv
    ___xxtofl->_MPU6050_Read
    ___fldiv->___xxtofl
    _MPU6050_Read->_I2C_Write
    _MPU6050_Init->_MPU6050_Write
    _MPU6050_Write->_I2C_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   63965
                                             92 BANK0      2     2      0
                    _I2C_Init_Master
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _MPU6050_Init
                    _MPU6050_Read_Ax
                    _MPU6050_Read_Ay
                    _MPU6050_Read_Az
                    _MPU6050_Read_Gx
                    _MPU6050_Read_Gy
                    _MPU6050_Read_Gz
           _MPU6050_Read_Temperature
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   30563
                                             76 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   29294
                                             92 COMRAM     2     2      0
                                             70 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   28911
                                             82 COMRAM    10     4      6
                                             56 BANK0     14    14      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   23456
                                             70 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             46 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3041
                                             62 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read_Temperature                             6     2      4    6565
                                             62 COMRAM     6     2      4
                       _MPU6050_Read
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                             46 COMRAM    16     8      8
                       _MPU6050_Read (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read_Gz                                      6     2      4    3999
                                             46 COMRAM     6     2      4
                       _MPU6050_Read
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read_Gy                                      6     2      4    3999
                                             46 COMRAM     6     2      4
                       _MPU6050_Read
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read_Gx                                      6     2      4    3999
                                             46 COMRAM     6     2      4
                       _MPU6050_Read
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read_Az                                      6     2      4    3999
                                             46 COMRAM     6     2      4
                       _MPU6050_Read
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read_Ay                                      6     2      4    3999
                                             46 COMRAM     6     2      4
                       _MPU6050_Read
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read_Ax                                      6     2      4    3999
                                             46 COMRAM     6     2      4
                       _MPU6050_Read
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     854
                                              7 COMRAM    14    10      4
                       _MPU6050_Read (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3071
                                             21 COMRAM    25    17      8
                       _MPU6050_Read (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Read                                         6     4      2      74
                                              1 COMRAM     6     4      2
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         1     1      0     377
                                              3 COMRAM     1     1      0
                      _MPU6050_Write
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Write                                        2     1      1     377
                                              1 COMRAM     2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            3     3      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     800
                                              4 COMRAM     4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1    1182
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     308
                                              3 COMRAM     2     2      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init_Master                                      1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init_Master
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _MPU6050_Init
     _MPU6050_Write
       _I2C_Start
       _I2C_Stop
       _I2C_Write
   _MPU6050_Read_Ax
     _MPU6050_Read
       _I2C_Nack
       _I2C_Read
       _I2C_Restart
       _I2C_Start
       _I2C_Stop
       _I2C_Write
     ___fldiv
       _MPU6050_Read (ARG)
       ___xxtofl (ARG)
         _MPU6050_Read (ARG)
     ___xxtofl
   _MPU6050_Read_Ay
     _MPU6050_Read
     ___fldiv
     ___xxtofl
   _MPU6050_Read_Az
     _MPU6050_Read
     ___fldiv
     ___xxtofl
   _MPU6050_Read_Gx
     _MPU6050_Read
     ___fldiv
     ___xxtofl
   _MPU6050_Read_Gy
     _MPU6050_Read
     ___fldiv
     ___xxtofl
   _MPU6050_Read_Gz
     _MPU6050_Read
     ___fldiv
     ___xxtofl
   _MPU6050_Read_Temperature
     _MPU6050_Read
     ___fladd
       _MPU6050_Read (ARG)
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5E      98       5       95.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     146      20        0.0%
DATA                 0      0     146       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 30 18:50:38 2021

__size_of_MPU6050_Read_Temperature 0094                       ___fldiv@aexp 002E  
                     ___fldiv@bexp 002D          ?_MPU6050_Read_Temperature 003F  
                                _t 00C6                       ___fldiv@sign 0026  
               __size_of_I2C_Start 0014                 __size_of_I2C_Write 001A  
                               l22 3D72                                 l31 3FE2  
                               l40 3FDE                                 l25 3FF6  
                               l33 3FF0                                 l34 3FF2  
                               l27 4004                                 l51 3FC8  
                               l28 4006                                 l52 3FCA  
                               l61 3FA2                                 l37 3FCE  
                               l55 3F8C                                 l63 3FB0  
                               l39 3FDC                                 l64 3FB4  
                               l57 3F9A                                 l49 3FBA  
                               l82 3B90                                 l74 3B64  
                               l58 3F9E                                 l92 3F66  
                               l86 3BA6                                 l78 3B7A  
                               l95 4014                                 l89 3BA8  
                     ___awdiv@sign 0006                                 _ax 00DE  
                               _ay 00DA                                 _az 00D6  
                               _gx 00D2                                 _gy 00CE  
                               _gz 00CA                ___wmul@multiplicand 0003  
                              l101 32C0                                l111 3EFE  
                              l105 32C0                                l108 378E  
                              l117 3DB2                                l152 3DEC  
                              l232 3F24                                l161 394E  
                              l146 3F84                                l170 37FE  
                              l155 3A2E                                l164 38DE  
                              l149 3C02                                l173 3702  
                              l158 39BE                                l502 301A  
                              l167 386E                                l506 3E5C  
                              l463 3514                                l529 2F16  
                              l802 3CEC                                l491 366E  
                              l476 35C4                                l901 2C18  
                              l814 2652                                l910 3C54  
                              l816 24B2                                l760 1BBE  
                              l825 24F8                                l761 1BAC  
                              l497 2FD4                                l762 1B72  
                              l850 22B8                                l827 2570  
                              l819 2476                                l828 255E  
                              l853 214A                                l846 1F54  
                              l863 227A                                l855 21C2  
                              l951 33D2                                l856 21B0  
                              l777 1CD8                                l769 1E8E  
                              l890 2C80                                l786 1DA8  
                              l954 3414                                l787 1D96  
                              l956 3450                                l894 2BBC  
                              l974 14AA                                l887 2B24  
                              l992 0C40                                _pad 338C  
                     ___awmod@sign 0006                                wreg 000FE8  
                     ___flmul@aexp 0012                       ___flmul@bexp 0013  
                     ___flmul@sign 000D               __size_of_I2C_Restart 0014  
                     ___flmul@temp 0018                       ___flmul@prod 0014  
                     ___fltol@exp1 000A                               l1020 1080  
                             l1102 3118                               l1202 3ECA  
                             l1131 2E08                               l1140 2ACC  
                             l1221 3AF0                               l1150 3E94  
                             l1134 2E10                               l1206 31EE  
                             l1143 2A10                               l1063 159E  
                             l3000 1AF8                               l1216 3AE8  
                             l3010 1B0C                               l3002 1AFC  
                             l1091 3A88                               l3100 1D8E  
                             l3020 1B6A                               l3004 1B00  
                             l3012 1B10                               l1164 3E24  
                             l1092 3A90                               l1085 1918  
                             l3110 1E0C                               l3030 1BA0  
                             l3022 1B80                               l3014 1B14  
                             l3006 1B04                               l1158 3CA6  
                             l1190 4016                               l1078 19CE  
                             l3200 2376                               l3120 1E52  
                             l3104 1DB8                               l3112 1E0E  
                             l3040 1BF0                               l3032 1BAA  
                             l3024 1B8C                               l3016 1B3E  
                             l3008 1B08                               l4000 13D2  
                             l3210 23B8                               l3202 2386  
                             l3130 1E7C                               l3122 1E60  
                             l3114 1E1E                               l3106 1DC4  
                             l3050 1C2C                               l3042 1C00  
                             l3034 1BCC                               l3026 1B90  
                             l3018 1B5A                               l4010 140E  
                             l4002 13D8                               l1179 338A  
                             l1187 3D30                               l4100 3FCC  
                             l3204 239C                               l3132 1E7E  
                             l3124 1E66                               l3116 1E2E  
                             l3108 1DD2                               l3060 1C72  
                             l3052 1C3A                               l3044 1C0E  
                             l3036 1BDC                               l3028 1B9E  
                             l3140 3D0C                               l1196 3B4C  
                             l4020 1460                               l4012 1414  
                             l4004 13EA                               l4102 3FB6  
                             l4110 3FA0                               l3230 243A  
                             l3222 23F0                               l3206 23AC  
                             l3214 23CC                               l3126 1E68  
                             l3118 1E4E                               l3070 1CEE  
                             l3062 1CA6                               l3054 1C3C  
                             l3046 1C1C                               l3310 1EBC  
                             l3302 1E90                               l3142 3D10  
                             l3150 3EBE                               l4022 146C  
                             l4014 141A                               l4006 13F6  
                             l4120 3F52                               l4104 3F88  
                             l4112 3FB2                               l3240 2480  
                             l3232 2442                               l3224 240A  
                             l3216 23DC                               l3208 23B4  
                             l3128 1E6E                               l3080 1D2A  
                             l3072 1CFE                               l3064 1CA8  
                             l3056 1C46                               l3048 1C28  
                             l3160 3F1C                               l4040 2C9E  
                             l3320 1EF8                               l3312 1ECC  
                             l3304 1E9C                               l3136 3CEE  
                             l3144 3E96                               l4024 1474  
                             l4008 13FE                               l4200 179C  
                             l4122 3F54                               l4106 3F9C  
                             l3250 24D8                               l3242 249E  
                             l3234 2452                               l3226 241A  
                             l3218 23DC                               l3170 22D6  
                             l3090 1D56                               l3082 1D2C  
                             l3066 1CB8                               l3058 1C4C  
                             l4050 2CFA                               l4042 2CBA  
                             l4034 2C82                               l3402 21D2  
                             l3410 221A                               l3330 1F2E  
                             l3322 1EFE                               l3314 1EDC  
                             l3306 1EAA                               l3138 3CFA  
                             l3146 3EA2                               l3154 3DEE  
                             l4026 1484                               l4018 144E  
                             l4210 1834                               l4202 17AA  
                             l4130 14DE                               l4124 3F64  
                             l4116 3F4A                               l4300 3DE0  
                             l3260 2516                               l3252 24DE  
                             l3244 24A0                               l3236 2466  
                             l3228 242A                               l3172 22E6  
                             l3180 2310                               l3164 22BA  
                             l3084 1D3A                               l3076 1D12  
                             l3092 1D58                               l3068 1CC8  
                             l4052 2D10                               l4044 2CF0  
                             l4036 2C96                               l3500 356C  
                             l3420 228E                               l3412 2234  
                             l3404 21DE                               l3332 1F3E  
                             l3324 1F0C                               l3316 1EE2  
                             l3308 1EAC                               l3148 3EA6  
                             l4028 148A                               l4204 17DA  
                             l4140 1514                               l4132 14F0  
                             l4118 3F4C                               l4302 3DE4  
                             l3270 2580                               l3262 251A  
                             l3254 24E8                               l3246 24B0  
                             l3238 2474                               l3190 233C  
                             l3182 2320                               l3174 22F6  
                             l3166 22C6                               l4310 2AEE  
                             l3086 1D42                               l3078 1D1C  
                             l3094 1D66                               l3158 3F00  
                             l4070 2DEC                               l4062 2D8A  
                             l4054 2D18                               l4046 2CF4  
                             l4038 2C9A                               l3502 357A  
                             l3510 35A4                               l3422 229C  
                             l3414 2248                               l3406 21EC  
                             l3350 1FC0                               l3342 1F88  
                             l3334 1F44                               l3326 1F0E  
                             l3318 1EF2                               l4230 1972  
                             l4214 18A2                               l4134 14F4  
                             l4126 14AC                               l4400 328C  
                             l3280 25E2                               l3272 258C  
                             l3264 2528                               l3256 24F6  
                             l3248 24C2                               l3192 234C  
                             l3184 2326                               l3176 2306  
                             l3168 22D4                               l4320 2B66  
                             l4312 2B34                               l3096 1D6A  
                             l3088 1D46                               l4056 2D20  
                             l3440 3456                               l3512 35B4  
                             l3504 3590                               l3520 35F4  
                             l3424 229E                               l3416 2262  
                             l3408 2216                               l3360 200A  
                             l3352 1FD8                               l3344 1F94  
                             l3336 1F64                               l3328 1F1E  
                             l3432 3CA8                               l3600 2EE6  
                             l4216 18B4                               l4224 192C  
                             l4208 1806                               l4160 1538  
                             l4152 1526                               l4144 151A  
                             l4136 1500                               l4128 14D0  
                             l4240 1998                               l4410 3710  
                             l4402 329E                               l3290 2640  
                             l3282 25F8                               l3274 259A  
                             l3266 2556                               l3258 2508  
                             l3194 235C                               l3186 232C  
                             l3178 2308                               l4330 2BEE  
                             l4322 2B72                               l4314 2B4A  
                             l4306 2AD0                               l3098 1D78  
                             l4066 2DC8                               l4058 2D54  
                             l3450 3486                               l3442 3464  
                             l3514 35BC                               l3506 3598  
                             l3530 366C                               l3522 3604  
                             l3418 227E                               l3426 22A4  
                             l3370 2060                               l3362 201A  
                             l3354 1FE4                               l3346 1F9E  
                             l3338 1F74                               l3434 3CB8  
                             l3602 2EF6                               l3610 339C  
                             l4090 31A4                               l4082 3150  
                             l4242 19BC                               l4226 1950  
                             l4234 197E                               l4218 18E8  
                             l4170 15DA                               l4138 1502  
                             l4162 158C                               l4420 374A  
                             l4412 3716                               l4404 32B0  
                             l4260 3EDC                               l3292 2646  
                             l3284 2612                               l3276 25C4  
                             l3196 236C                               l3188 233A  
                             l4340 2C2C                               l4332 2BFA  
                             l4324 2BA4                               l4308 2AE0  
                             l3700 3C5A                               l4068 2DDA  
                             l3460 34B4                               l3452 348A  
                             l3444 346C                               l3508 359E  
                             l3524 3632                               l3540 2F84  
                             l3428 22A8                               l3380 2104  
                             l3372 207C                               l3364 2026  
                             l3356 1FF0                               l3348 1FB4  
                             l3604 2F06                               l3620 33F2  
                             l3612 33B0                               l4092 31CC  
                             l4084 315E                               l4076 311A  
                             l4236 198C                               l4228 195E  
                             l4180 1674                               l4172 15E8  
                             l4164 15AC                               l4156 152C  
                             l4148 1520                               l3710 3B50  
                             l4254 4008                               l4430 3772  
                             l4422 375A                               l4414 372E  
                             l4406 32B6                               l4270 3EF4  
                             l4262 3EE4                               l3294 2648  
                             l3286 262E                               l3278 25C8  
                             l3198 236E                               l4342 2C50  
                             l4334 2C08                               l4326 2BA6  
                             l4318 2B5E                               l3702 3C6E  
                             l3470 34E8                               l3462 34C2  
                             l3454 3492                               l3446 3470  
                             l3438 3452                               l3526 3642  
                             l3518 35C6                               l3550 3012  
                             l3542 2F94                               l3534 2F18  
                             l3390 215A                               l3382 2112  
                             l3374 2088                               l3366 2036  
                             l3358 1FFE                               l3630 301C  
                             l3622 33F6                               l3614 33BE  
                             l4086 3176                               l4078 3144  
                             l4190 1700                               l4174 160C  
                             l4166 15AE                               l4510 265E  
                             l4360 3D34                               l3720 3B8A  
                             l3712 3B5E                               l4432 3778  
                             l4424 3760                               l4416 3734  
                             l4408 3704                               l4272 3EF6  
                             l4264 3EE6                               l4256 3ECE  
                             l4440 3D74                               l4096 3FF4  
                             l4280 3F74                               l3288 2632  
                             l4344 2C60                               l4336 2C26  
                             l4328 2BB2                               l3704 3C9C  
                             l3472 34EE                               l3464 34C8  
                             l3456 34A4                               l3448 347E  
                             l3528 3666                               l3552 3018  
                             l3544 2FA2                               l3536 2F46  
                             l3392 2168                               l3384 2130  
                             l3376 20A4                               l3368 2050  
                             l3560 3E4C                               l3632 303C  
                             l2920 32C2                               l3624 3424  
                             l3616 33CA                               l3608 338C  
                             l3800 0B0C                               l4088 3192  
                             l4192 1732                               l4184 16BC  
                             l4176 1646                               l4168 15D2  
                             l4352 3A30                               l4520 26A2  
                             l4512 2662                               l4370 3D56  
                             l4362 3D38                               l3722 3B92  
                             l3714 3B66                               l4434 377E  
                             l4426 3766                               l4418 3744  
                             l4274 3EFC                               l4266 3EEC  
                             l4258 3EDA                               l4442 3D80  
                             l4098 3FE0                               l4282 3F7A  
                             l4450 3BB4                               l4290 3DC0  
                             l4346 2C6E                               l4338 2C28  
                             l3706 3CA0                               l3466 34DE  
                             l3458 34AC                               l3474 34F4  
                             l3490 3534                               l3482 3516  
                             l3546 2FB4                               l3538 2F56  
                             l3394 216C                               l3386 213A  
                             l3378 20CE                               l3570 2E3C  
                             l3634 307A                               l3642 30BA  
                             l2930 3344                               l2922 32D4  
                             l3626 3438                               l3618 33DE  
                             l3802 0B12                               l3810 0BDA  
                             l3730 086E                               l4194 1742  
                             l4178 1666                               l4186 16CE  
                             l4354 3A38                               l4530 26F6  
                             l4522 26B6                               l4514 2666  
                             l4506 2654                               l4372 3D5E  
                             l4364 3D3C                               l3724 3BA0  
                             l3716 3B74                               l4436 3784  
                             l4428 376C                               l4380 3214  
                             l4268 3EEE                               l4444 3D92  
                             l4284 3F80                               l4276 3F6A  
                             l4452 3BC4                               l4292 3DC6  
                             l4348 2C70                               l2940 19EC  
                             l3476 3504                               l3468 34E6  
                             l3492 3542                               l3484 351A  
                             l3548 2FC2                               l3396 217A  
                             l3388 2148                               l3556 3E26  
                             l3580 2E8A                               l3572 2E66  
                             l3564 2E12                               l3644 30CC  
                             l3636 30A2                               l2924 32E6  
                             l3652 3AF2                               l3660 3AC8  
                             l3900 1048                               l3820 0C1A  
                             l3812 0BEA                               l3804 0B6C  
                             l3740 08BA                               l3732 087C  
                             l4196 1774                               l4188 16F0  
                             l4356 3A46                               l4540 2762  
                             l4532 2700                               l4524 26CA  
                             l4516 267A                               l4508 2658  
                             l4374 3D6E                               l4366 3D40  
                             l3718 3B7C                               l4438 378A  
                             l4390 324E                               l4382 321A  
                             l4446 3D96                               l4278 3F6E  
                             l4454 3BDE                               l4294 3DCA  
                             l4286 3DB6                               l4462 3950  
                             l4470 3870                               l2942 19FC  
                             l2950 1A26                               l2934 19D0  
                             l3478 350C                               l3494 354A  
                             l3486 3528                               l3398 21A8  
                             l3558 3E3C                               l3590 2EB6  
                             l3574 2E68                               l3566 2E28  
                             l3638 30AE                               l3670 2932  
                             l2926 32F0                               l3654 3B02  
                             l3662 3ADA                               l3910 1100  
                             l3902 1058                               l3830 0C5E  
                             l3822 0C34                               l3814 0BEE  
                             l3806 0BA0                               l3750 0900  
                             l3742 08CC                               l3734 0884  
                             l3726 0854                               l4198 1786  
                             l4358 3A6C                               l4550 27B4  
                             l4542 276E                               l4534 2726  
                             l4526 26DE                               l4518 268E  
                             ?_pad 0011                               l4368 3D44  
                             l4392 3258                               l4384 3224  
                             l4376 31F2                               l4456 3BE8  
                             l4448 3BAA                               l4296 3DD0  
                             l4288 3DBA                               l2960 1A56  
                             l2952 1A36                               l2944 1A0C  
                             l2936 19DC                               l3496 355C  
                             l3488 3530                               l3576 2E78  
                             l3648 3110                               l3680 2A00  
                             l3672 2946                               l2928 330E  
                             l3656 3A92                               l3912 1110  
                             l3920 114A                               l3904 106C  
                             l3832 0C70                               l3840 0CCE  
                             l3816 0C00                               l3824 0C4C  
                             l3808 0BA8                               l3752 0904  
                             l3744 08DA                               l3736 08A8  
                             l3728 085E                               l4624 155E  
                             l4560 2822                               l4552 27DA  
                             l4544 2778                               l4536 2732  
                             l4528 26F2                               l4394 326A  
                             l4386 3236                               l4378 3202  
                             l4298 3DDC                               l4458 39C0  
                             l4466 38E0                               l4474 3800  
                             l2970 1A96                               l2962 1A64  
                             l2954 1A3C                               l2946 1A1C  
                             l2938 19EA                               l4482 3670  
                             l4626 2D3E                               l3498 3564  
                             l3586 2EA2                               l3578 2E7C  
                             l3690 2ABC                               l3674 2954  
                             l3682 2A34                               l3666 28BC  
                             l3930 1184                               l3922 115C  
                             l3914 1122                               l3906 1078  
                             l3850 0D0C                               l3842 0CD6  
                             l3834 0C8C                               l3818 0C12  
                             l3770 09BA                               l3762 096A  
                             l3754 0908                               l3746 08EC  
                             l3738 08B2                               l4490 3C1E  
                             l4570 288E                               l4562 282C  
                             l4554 27E6                               l4546 279E  
                             l4538 273C                               l4396 327C  
                             l4388 3248                               l2980 1AD0  
                             l2972 1A98                               l2964 1A66  
                             l2956 1A4E                               l2948 1A1E  
                             l3596 2ECA                               l3588 2EAC  
                             l3684 2A70                               l3668 28DC  
                             l3932 1190                               l3924 116A  
                             l3940 11B0                               l3916 1134  
                             l3908 109C                               l3852 0D1E  
                             l3860 0D5E                               l3844 0CE8  
                             l3836 0CC2                               l3780 0A3E  
                             l3764 097C                               l3748 08F8  
                             l3756 090E                               l4492 3C26  
                             l4572 289A                               l4564 2852  
                             l4556 27F0                               l4548 27AA  
                             l4398 3282                               l4478 3790  
                             l2990 1AE4                               l2982 1AD4  
                             l2966 1A76                               l2974 1AA0  
                             l2958 1A50                               l3694 3E5E  
                             l3598 2ED6                               l3686 2A84  
                             l3678 29C4                               l3950 1236  
                             l3942 11C2                               l3934 11A0  
                             l3926 117A                               l3918 1142  
                             l3870 0E46                               l3862 0D66  
                             l3854 0D2C                               l3846 0CFA  
                             l3838 0CCA                               l3782 0A50  
                             l3766 0998                               l3758 0934  
                             l3774 09E2                               l4494 3C42  
                             l4486 3C04                               l4566 285E  
                             l4558 2816                               l2992 1AE8  
                             l2984 1AD8                               l2976 1AB0  
                             l2968 1A86                               l3688 2AAC  
                             l3960 12B0                               l3952 126A  
                             l3944 11D4                               l3936 11A4  
                             l3928 117E                               l3880 0F04  
                             l3872 0E7A                               l3864 0D76  
                             l3856 0D44                               l3848 0D08  
                             l3784 0A6C                               l3776 0A08  
                             l3792 0A88                               l3768 09B0  
                             l4488 3C16                               l4568 2868  
                             l2994 1AEC                               l2986 1ADC  
                             l2978 1AC2                               l3698 3C56  
                             l3970 12F4                               l3962 12C2  
                             l3954 1272                               l3946 11D8  
                             l3938 11AA                               l3890 0FA0  
                             l3882 0F1A                               l3866 0D8A  
                             l3874 0E80                               l3858 0D56  
                             l3794 0AA2                               l2996 1AF0  
                             l2988 1AE0                               l3980 1334  
                             l3972 1306                               l3964 12D0  
                             l3948 11DE                               l3956 1276  
                             l3892 0FF6                               l3884 0F4C  
                             l3876 0E9E                               l3868 0DEE  
                             l2998 1AF4                               l3990 137C  
                             l3982 133C                               l3974 130E  
                             l3966 12E0                               l3958 1294  
                             l3894 0FFC                               l3886 0F5C  
                             l3878 0ED2                               l3798 0AD8  
                             l3992 1398                               l3984 1344  
                             l3976 131E                               l3968 12E4  
                             l3896 1030                               l3888 0F6C  
                             l3994 13A0                               l3986 1350  
                             l3978 1326                               l3898 1044  
                             l3988 1356                               l3996 13A6  
                             l3998 13B8                               STR_1 0801  
                             STR_2 0813                               STR_3 0825  
                             STR_4 0837                               STR_5 080A  
                             STR_6 081C                               STR_7 082E  
                             STR_8 083F                               STR_9 0847  
                             u3000 1E60                               u3001 1E5C  
                             u3010 1E7C                               u3011 1E78  
                             u3100 234C                               u3020 3D30  
                             u3101 2348                               u3021 3D2C  
                             u3110 235C                               u3030 3EBE  
                             u3111 2358                               u3031 3EBA  
                             u3200 2516                               u3120 239C  
                             u4000 2A70                               u3040 3E1E  
                             u3201 2512                               u3121 2398  
                             u4001 2A6C                               u3041 3E18  
                             u3210 2528                               u3130 23DC  
                             u4010 2AAC                               u3050 3E20  
                             u3211 2524                               u3131 23D8  
                             u4011 2AA8                               u3220 2556  
                             u3140 2452                               u3060 22D4  
                             u4020 3E8E                               u3300 1EBC  
                             u4100 087C                               u3221 2552  
                             u3141 244E                               u3061 22D0  
                             u4021 3E88                               u3301 1EB8  
                             u4101 0878                               u3230 256C  
                             u3150 2474                               u3070 22E6  
                             u4030 3E90                               u3310 1ECC  
                             u4110 08CC                               u3231 2568  
                             u3151 2470                               u3071 22E2  
                             u3311 1EC8                               u4111 08C8  
                             u3240 2580                               u3160 249E  
                             u3080 22F6                               u5000 2B4A  
                             u4040 3C6E                               u3400 217A  
                             u3320 1F0C                               u2600 32E6  
                             u4200 0A38                               u4120 08DA  
                             u3241 257C                               u3161 249A  
                             u3081 22F2                               u5001 2B46  
                             u4041 3C6A                               u3401 2176  
                             u3321 1F08                               u2601 32E2  
                             u4121 08D6                               u3250 259A  
                             u3170 24C2                               u3090 233A  
                             u5010 2BA0                               u4050 3C9C  
                             u3410 21A8                               u3330 1F1E  
                             u2610 330E                               u4210 0A50  
                             u4130 08EC                               u3251 2596  
                             u3171 24BE                               u3091 2336  
                             u5011 2B9C                               u4051 3C98  
                             u3411 21A4                               u3331 1F1A  
                             u2611 330A                               u4211 0A4C  
                             u4131 08E8                               u5100 3D6E  
                             u4060 3B5E                               u3260 25E2  
                             u3180 24D8                               u5020 2BEA  
                             u2700 1AC2                               u3500 34A4  
                             u3420 21BE                               u3340 1F2E  
                             u2620 3344                               u4300 0C8C  
                             u4220 0AD4                               u4140 0934  
               MPU6050_Read@retval 0005                               u5101 3D6A  
                             u4061 3B5A                               u3261 25DE  
                             u3181 24D4                               u5021 2BE6  
                             u2701 1ABE                               u3501 34A0  
                             u3421 21BA                               u3341 1F2A  
                             u2621 3340                               u4301 0C88  
                             u4221 0AD0                               u4141 0930  
                             u4070 3B74                               u5110 3202  
                             u3270 2612                               u3190 24F6  
                             u5030 2C08                               u2710 1AD0  
                             u2630 19EA                               u3510 34C2  
                             u3430 21D2                               u3350 1F64  
                             u4310 0CC2                               u4230 0B68  
                             u4150 0962                               u4071 3B70  
                             u5111 31FE                               u3271 260E  
                             u3191 24F2                               u5031 2C04  
                             u2711 1ACC                               u2631 19E6  
                             u3511 34BE                               u3431 21CE  
                             u3351 1F60                               u4311 0CBE  
                             u4231 0B64                               u4151 095C  
                             u4080 3B8A                               u5120 3236  
                             u3280 2640                               u5040 2C18  
                             u2800 1C0E                               u2720 1B3E  
                             u2640 19FC                               u3520 34DE  
                             u3600 35F4                               u3440 21EC  
                             u3360 1F74                               u4400 0F4C  
                             u4320 0CE8                               u4240 0BDA  
                             u4160 0964                               u4081 3B86  
                             u5121 3232                               u3281 263C  
                             u5041 2C14                               u2801 1C0A  
                             u2721 1B3A                               u2641 19F8  
                             u3521 34DA                               u3601 35F0  
                             u3441 21E8                               u3361 1F70  
                             u4401 0F48                               u4321 0CE4  
                             u4241 0BD6                               u4090 3BA0  
                             u5130 326A                               u5050 2C26  
                             u2810 1C1C                               u2730 1B56  
                             u2650 1A0C                               u3530 3504  
                             u3610 3632                               u3450 2234  
                             u3370 20EE                               u3290 1EAA  
                             u4410 0F5C                               u4330 0CFA  
                             u4250 0C00                               u4170 097C  
                             u4091 3B9C                               u5131 3266  
                             u5051 2C22                               u2811 1C18  
                             u2731 1B50                               u2651 1A08  
                             u3531 3500                               u3611 362E  
                             u3451 2230                               u3291 1EA6  
                             u4411 0F58                               u4331 0CF6  
                             u4251 0BFC                               u4171 0978  
                             u5140 329E                               u5060 2C60  
                             u2900 1D66                               u2820 1C3A  
                             u2740 1B58                               u2660 1A4E  
                             u3540 3528                               u3620 3666  
                             u3460 2262                               u3380 2148  
                             u3700 2E5C                               u4500 116A  
                             u4420 0FF6                               u4340 0D08  
                             u4260 0C12                               u4180 0A08  
                             u5141 329A                               u5061 2C5C  
                             u2901 1D62                               u2821 1C36  
                             u2661 1A4A                               u3541 3524  
                             u3621 3662                               u3461 225E  
                             u3381 2144                               u4501 1166  
                             u4421 0FF2                               u4341 0D04  
                             u4261 0C0E                               u4181 0A04  
                             u5150 3DB2                               u5070 2C6E  
                             u2910 1D78                               u2830 1C72  
                             u2750 1B80                               u2670 1A64  
                             u3550 3542                               u3630 2F46  
                             u3470 229C                               u3390 2168  
                             u3710 2E8A                               u2590 32D4  
                             u4510 11C2                               u4430 1044  
                             u4350 0D1E                               u4270 0C34  
                             u4190 0A36                               u5207 3EE8  
                             u5151 3DAE                               u5071 2C6A  
                             u2911 1D74                               u2831 1C6E  
                             u2751 1B7C                               u2671 1A60  
                             u3551 353E                               u3631 2F42  
                             u3471 2298                               u3391 2164  
                             u3375 20E4                               u3711 2E86  
                             u2591 32D0                               u4511 11BE  
                             u4431 1040                               u4351 0D1A  
                             u4271 0C30                               u4191 0A30  
                             u2920 1D8E                               u2840 1CB8  
                             u2760 1B9E                               u2680 1A76  
                             u3480 3464                               u3560 355C  
                             u3640 2F84                               u3720 2E9E  
                             u3800 305C                               u4600 13EA  
                             u4520 1294                               u4440 106C  
                             u4360 0D2C                               u4280 0C5A  
                             u5080 3A88                               u5217 3EF8  
                             u2921 1D8A                               u2841 1CB4  
                             u2761 1B9A                               u2681 1A72  
                             u3481 3460                               u3561 3558  
                             u3641 2F80                               u3721 2E9A  
                             u3705 2E52                               u4601 13E6  
                             u4521 1290                               u4441 1068  
                             u4361 0D28                               u4281 0C56  
                             u5081 3A84                               u5090 3D56  
                             u2930 1DA4                               u2850 1CEE  
                             u2770 1BBE                               u2690 1A86  
                             u3490 347E                               u3570 357A  
                             u3650 2FA2                               u3730 2EC6  
                             u3810 307A                               u4610 1448  
                             u4530 12B0                               u4450 1110  
                             u4370 0D56                               u4290 0C70  
                             u5091 3D52                               u5227 3720  
                             u2931 1DA0                               u2851 1CEA  
                             u2771 1BBA                               u2691 1A82  
                             u3491 347A                               u3571 3576  
                             u3651 2F9E                               u3731 2EC2  
                             u3811 3076                               u4611 1442  
                             u4531 12AC                               u4451 110C  
                             u4371 0D52                               u4291 0C6C  
                             u2940 1DB8                               u2860 1CFE  
                             u2780 1BCC                               u4700 2DEC  
                             u3580 3590                               u3660 2FC2  
                             u3740 2EE6                               u3820 30A2  
                             u3900 3AC4                               u4620 144A  
                             u4540 12C2                               u4460 1122  
                             u4380 0E9E                               u5237 373A  
                             u2941 1DB4                               u2861 1CFA  
                             u2781 1BC8                               u4701 2DE8  
                             u3581 358C                               u3661 2FBE  
                             u3741 2EE2                               u3821 309E  
                             u3805 3052                               u4541 12BE  
                             u4461 111E                               u4381 0E9A  
                             u2950 1DD2                               u2870 1D2A  
                             u2790 1BDC                               u3590 35B4  
                             u3670 3012                               u3750 2EF6  
                             u3830 30CC                               u3910 3ADA  
                             u4630 1460                               u4550 12D0  
                             u4470 1134                               u4390 0F04  
                             u4710 3144                               u5247 3750  
                             u2951 1DCE                               u2871 1D26  
                             u2791 1BD8                               u3591 35B0  
                             u3671 300E                               u3751 2EF2  
                             u3831 30C8                               u3911 3AD6  
                             u4631 145C                               u4551 12CC  
                             u4471 1130                               u4391 0F00  
                             u4711 3140                               u5167 28A6  
                             u4800 3F9A                               u2960 1E0C  
                             u2880 1D3A                               u4640 2CBA  
                             u3680 3E3C                               u3920 2904  
                             u3760 339C                               u4560 1306  
                             u4480 1142                               u4720 3176  
                             u5257 3F5A                               u4801 3F96  
                             u5177 3BBA                               u2961 1E08  
                             u2881 1D36                               u4641 2CB6  
                             u3681 3E38                               u3761 3398  
                             u4561 1302                               u4481 113E  
                             u4721 3172                               u4810 3FB0  
                             u2970 1E1E                               u2890 1D56  
                             u4650 2CF0                               u3690 2E28  
                             u3850 3106                               u3930 2932  
                             u3770 33BE                               u4570 1334  
                             u4490 115C                               u4730 3192  
                             u5187 3BD4                               u4811 3FAC  
                             u2971 1E1A                               u2891 1D52  
                             u4651 2CEC                               u3691 2E24  
                             u3851 3100                               u3931 292E  
                             u3771 33BA                               u4571 1330  
                             u4491 1158                               u4731 318E  
                             u2980 1E2E                               u4660 2D0C  
                             u3860 3108                               u3940 2954  
                             u3780 3414                               u4580 13B8  
                             u4740 31A4                               u4900 1700  
                             u4820 14D0                               u5197 3BEE  
                             u2981 1E2A                               u4661 2D08  
                             u3845 30DE                               u3941 2950  
                             u3925 28FA                               u3781 3410  
                             u4581 13B4                               u4741 31A0  
                             u4901 16FC                               u4821 14CC  
                             u2990 1E4E                               u4670 2DC2  
                             u3790 3424                               u3870 3B3A  
                             u4590 13D2                               u4750 31CC  
                             u4910 1742                               u4830 159E  
                             u2991 1E4A                               u4671 2DBC  
                             u3791 3420                               u4591 13CE  
                             u4751 31C8                               u4911 173E  
                             u4831 159A                               u4760 4004  
                             u4680 2DC4                               u3960 29C0  
                             u3880 3B4C                               u4920 1786  
                             u4840 15AC                               u4761 4000  
                             u3961 29BC                               u3881 3B48  
                             u4921 1782                               u4841 15A8  
                             u4770 3FF0                               u4690 2DDA  
                             u3970 29E4                               u3890 3AC2  
                             u4930 1834                               u4850 15D2  
                             u4771 3FEC                               u4691 2DD6  
                             u3955 2968                               u3891 3ABC  
                             u4931 1830                               u4851 15CE  
                             u4780 3FDC                               u3980 2A00  
                             u3956 2972                               u4940 189A  
                             u4860 160C                               u4781 3FD8  
                             u3981 29FC                               u3957 2982  
                             u3877 3B30                               u4941 1894  
                             u4861 1608                               u4790 3FC8  
                             u3990 2A54                               u4950 189C  
                             u4870 16B4                               u4791 3FC4  
                             u3975 29DA                               u4871 16AE  
                             u4960 18B4                               u4880 16B6  
                             u4961 18B0                               u4970 1950  
                             u4890 16CE                               u3995 2A4A  
                             u4971 194C                               u4891 16CA  
                             u4980 2AE0                               u4981 2ADC  
                             u4990 2AEE                               u4991 2AEA  
                ?_Lcd_Write_String 0005                               _dbuf 0100  
                             _atoi 2C82             __size_of_MPU6050_Write 001E  
                             _main 2654                   __end_of_I2C_Nack 3FCC  
                             _prec 00E6                   __end_of_I2C_Read 3FB6  
                             _nout 00E2                               pad@i 0018  
                             pad@p 0015                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf1 000FE7  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 001A                               fsr2l 000FD9  
                 __end_of_I2C_Stop 3FF4                      ___fpclassifyf 301C  
                             prodh 000FF4                               prodl 000FF3  
                             start 0000                 ??_Lcd_Write_String 0007  
                 ?_I2C_Init_Master 0001                    ___fldiv@new_exp 0027  
                  __end_of_Lcd_Cmd 3F68                       _tolower$1129 000D  
                     ___param_bank 000000                              ??_pad 0017  
                    ___fltol@sign1 0009                              ?_atoi 0008  
                  __end_of___fladd 1E90                              ?_main 0001  
                  __end_of___fldiv 2654                    __end_of___awdiv 3516  
                  __end_of___flneg 3E5E                              STR_12 0843  
                            STR_13 084B                              STR_16 084F  
                            STR_18 084F                    __end_of___awmod 35C6  
                  __end_of___flmul 22BA                    __end_of___flsub 3CEE  
                  __end_of___fltol 2F18                    ___awdiv@divisor 0003  
                  ___awdiv@counter 0005                       vfpfcnvrt@fmt 0055  
          __size_of_Lcd_Set_Cursor 00D2                              _flags 00E8  
                    ?_MPU6050_Init 0001                      ?_MPU6050_Read 0002  
                            _fputc 32C2                              _fputs 3CEE  
                  __end_of_isdigit 3E96                              atoi@n 0015  
                            pad@fp 0011                              atoi@s 0008  
                            _width 00E4                              _putch 4016  
                  __end_of_isspace 3CA8                  __end_of_I2C_Start 4008  
                __end_of_I2C_Write 3FA0                    __end_of_isupper 3E26  
                            tablat 000FF5                              status 000FD8  
                  __end_of_sprintf 3C56                     ?___fpclassifyf 0001  
                  __end_of_tolower 3AF2                    __end_of_strncmp 31F0  
                 __end_of_Lcd_Init 3790                   __end_of_Lcd_Port 3BAA  
                  __initialization 3F26                       __end_of_atoi 2E12  
                     __end_of_main 28BC                      _MPU6050_Write 3F68  
                           ??_atoi 000A                             ??_main 00BC  
               __size_of_Lcd_Clear 000E                      __activetblptr 000002  
                MPU6050_Write@data 0002                     ??_MPU6050_Init 0004  
                   ??_MPU6050_Read 0004                             ?_fputc 0001  
                           ?_fputs 000A                   ___awdiv@dividend 0001  
                           ?_putch 0001                          ??_Lcd_Cmd 0002  
                    vfpfcnvrt@done 0098            __size_of_Lcd_Write_Char 0034  
                           _SSPADD 000FC8                             _SSPBUF 000FC9  
                 __end_of___xxtofl 2C82           __size_of_MPU6050_Read_Ax 0070  
         __size_of_MPU6050_Read_Ay 0070           __size_of_MPU6050_Read_Az 0070  
         __size_of_MPU6050_Read_Gx 0070           __size_of_MPU6050_Read_Gy 0070  
         __size_of_MPU6050_Read_Gz 0070                       vfprintf@cfmt 005D  
                           ___flge 2F18                             ___fleq 35C6  
                        ??___fladd 0037                             ___wmul 3F00  
                        ??___fldiv 001E                          ??___awdiv 0005  
                        ??___flneg 0005                          ??___awmod 0005  
                        ??___flmul 0009                          ??___flsub 0047  
                        ??___fltol 0005                             _efgtoa 0854  
                           _buffer 00EA                             _floorf 28BC  
                   ?_MPU6050_Write 0002                             clear_0 3F2C  
                           clear_1 3F38                   ___awdiv@quotient 0007  
                  ___awmod@divisor 0003                             isa$std 000001  
                  ___awmod@counter 0005                             pad@buf 0013  
                           _strcpy 3AF2                             _strlen 3E96  
                           fputc@c 0001                             fputs@c 000E  
                           fputs@i 000F                          ?_I2C_Nack 0001  
                           fputs@s 000A                          ??_isdigit 0003  
                        ?_I2C_Read 0001                          ?_I2C_Stop 0001  
                  ___fpclassifyf@e 0009                    ___fpclassifyf@u 000B  
                  ___fpclassifyf@x 0001                       __mediumconst 0000  
                        ??_isspace 0003                             tblptrh 000FF7  
                        ??_isupper 0003                             tblptrl 000FF6  
                           tblptru 000FF8                             putch@c 0001  
                 __end_of_vfprintf 3A92                          ??_sprintf 005F  
                        ??_tolower 0009                          ??_strncmp 0007  
                  Lcd_Set_Cursor@a 0005                    Lcd_Set_Cursor@b 0004  
                  Lcd_Set_Cursor@y 0007                    Lcd_Set_Cursor@z 0006  
                       ___flge@ff1 001A                         ___flge@ff2 001E  
                  ??___fpclassifyf 0005   __end_of_MPU6050_Read_Temperature 3704  
                     ___xxtofl@arg 0012                       ___xxtofl@exp 0011  
                     ___xxtofl@val 0008                         ___fleq@ff1 0001  
                       ___fleq@ff2 0005                         __accesstop 0060  
          __end_of__initialization 3F3E                         ___flneg@f1 0001  
                  MPU6050_Read@add 0007                  __end_of_Lcd_Clear 4016  
                    ___rparam_used 000001                         ___fltol@f1 0001  
                   __pcstackCOMRAM 0001                      __end_of_fputc 338C  
                    __end_of_fputs 3D32                      __end_of_putch 4018  
                   _Lcd_Set_Cursor 31F0                         ??_I2C_Nack 0001  
                       ??_I2C_Read 0001                         ??_I2C_Stop 0001  
                        ?_Lcd_Init 0001                          ?_Lcd_Port 0001  
                          ??_fputc 0005                            ??_fputs 000E  
                          ??_putch 0001                         __pbssBANK0 00BE  
                       __pbssBANK1 0100                         _efgtoa$970 0060  
                       _efgtoa$971 0062                         _efgtoa$980 0066  
                       _efgtoa$981 0068                         _efgtoa$982 006A  
                       _efgtoa$976 0064                            ?___flge 001A  
                          ?___fleq 0001               __end_of_MPU6050_Init 3C04  
             __end_of_MPU6050_Read 3DEE                            ?___wmul 0001  
                  ??_MPU6050_Write 0003                            ?_efgtoa 0047  
                ??_MPU6050_Read_Ax 0033                  ??_MPU6050_Read_Ay 0033  
                ??_MPU6050_Read_Az 0033                  ??_MPU6050_Read_Gx 0033  
                ??_MPU6050_Read_Gy 0033                  ??_MPU6050_Read_Gz 0033  
                          ?_floorf 002F          __size_of_Lcd_Write_String 0040  
           __end_of_Lcd_Set_Cursor 32C2                            ?_strcpy 0001  
                          ?_strlen 0001                      ??_I2C_Restart 0001  
                        ?___xxtofl 0008                 __size_of_vfpfcnvrt 0524  
                       ??_Lcd_Init 0004                         ??_Lcd_Port 0001  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                          _SSPSTAT 000FC7                     _Lcd_Write_Char 3ECC  
                          _Lcd_Cmd 3F48                          _I2C_Start 3FF4  
                        _I2C_Write 3F86           _MPU6050_Read_Temperature 3670  
                          __Hparam 0000                            __Lparam 0000  
                  __size_of___flge 0104                    __size_of___fleq 00AA  
                          ___fladd 19D0                            ___fldiv 22BA  
                          ___awdiv 3452                            ___flneg 3E26  
                          ___awmod 3516                            ___flmul 1E90  
                          ___flsub 3CA8                            ___fltol 2E12  
                  __size_of___wmul 0026                          ?_vfprintf 00A6  
                     __psmallconst 0800                    __size_of_efgtoa 0C58  
         __size_of_I2C_Init_Master 0042                    __size_of_floorf 0212  
                          __pcinit 3F26                            __ramtop 0800  
                  ?_Lcd_Set_Cursor 0004                            __ptext0 2654  
                          __ptext1 3C04                            __ptext2 3A30  
                          __ptext3 14AC                            __ptext4 311A  
                          __ptext5 0854                            __ptext6 3A92  
                          __ptext7 3DEE                            __ptext8 3AF2  
                          __ptext9 338C                    __size_of_strcpy 005C  
                  __size_of_strlen 0036                       __size_of_pad 00C6  
                          _isdigit 3E5E                         ??___xxtofl 000C  
                 ___awmod@dividend 0001                            _isspace 3C56  
                          _isupper 3DEE                            efgtoa@c 004D  
                          efgtoa@d 0078                            efgtoa@e 0090  
                          efgtoa@f 0049                            efgtoa@g 008C  
                          efgtoa@h 0082                            efgtoa@i 008A  
                          efgtoa@l 0086                            efgtoa@m 0072  
                          efgtoa@n 0092                            efgtoa@p 007C  
                          efgtoa@t 006C                            efgtoa@u 0094  
                          efgtoa@w 007E                            atoi@neg 000E  
                          _sprintf 3C04                            _tolower 3A92  
              __end_of_I2C_Restart 3FE0             __end_of_Lcd_Write_Char 3F00  
                          _strncmp 311A               end_of_initialization 3F3E  
                          floorf@e 003D                            floorf@m 0039  
                          floorf@u 003F                            floorf@x 002F  
                          fputc@fp 0003                      __Lmediumconst 0000  
                          fputs@fp 000C                         ?_I2C_Start 0001  
                       ?_I2C_Write 0001                  __end_of_vfpfcnvrt 19D0  
                       efgtoa@mode 0081                         efgtoa@sign 007A  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                        Lcd_Port@a 0001                         ??_vfprintf 005D  
                          strcpy@d 0009                            strlen@a 0003  
                          strcpy@s 0007                            strlen@s 0001  
                      ___fladd@grs 003E                      ___xxtofl@sign 0010  
                        _TRISBbits 000F93                          _TRISDbits 000F95  
                __size_of_I2C_Nack 0016                  __size_of_I2C_Read 0016  
                      ___fldiv@grs 0029                        ___fldiv@rem 0022  
                __size_of_I2C_Stop 0014                    ?_Lcd_Write_Char 0001  
                Lcd_Write_String@a 0005                  Lcd_Write_String@i 0007  
                      ___flmul@grs 000E              __size_of_MPU6050_Init 005A  
            __size_of_MPU6050_Read 003A                          _Lcd_Clear 4008  
                   __end_of___flge 301C                     __end_of___fleq 3670  
                      vfpfcnvrt@ap 0057                        vfpfcnvrt@ct 00A2  
                      vfpfcnvrt@fp 0053                     __end_of___wmul 3F26  
                 _Lcd_Write_String 3D74                     __end_of_efgtoa 14AC  
                   __end_of_floorf 2ACE                         floorf@F527 00BE  
                      _I2C_Restart 3FCC                     __end_of_strcpy 3B4E  
                   __end_of_strlen 3ECC                start_initialization 3F26  
                ??_I2C_Init_Master 0001                        __end_of_pad 3452  
            I2C_Init_Master@sp_i2c 0001                       _MPU6050_Init 3BAA  
                     _MPU6050_Read 3DB4                   MPU6050_Write@add 0003  
                __size_of_Lcd_Init 008C                  __size_of_Lcd_Port 005C  
            __end_of___fpclassifyf 311A                    _MPU6050_Read_Ax 39C0  
                  _MPU6050_Read_Ay 3950                    _MPU6050_Read_Az 38E0  
                  _MPU6050_Read_Gx 3870                    _MPU6050_Read_Gy 3800  
                  _MPU6050_Read_Gz 3790                        ??_I2C_Start 0001  
                      ??_I2C_Write 0001                        vfprintf@fmt 00A8  
                       ?_Lcd_Clear 0001                           ??___flge 0022  
                         ??___fleq 0009                           ??___wmul 0005  
                         ??_efgtoa 004E                           ??_floorf 0033  
                  Lcd_Write_Char@a 0004                    Lcd_Write_Char@y 0003  
                         ??_strcpy 0005                           ??_strlen 0003  
                        ___fladd@a 0033                          ___fladd@b 002F  
                        ___fldiv@a 001A                          ___fldiv@b 0016  
                        ___flmul@a 0005                          ___flmul@b 0001  
                        ___flsub@a 0043                          ___flsub@b 003F  
                    __pcstackBANK0 0060                  __size_of___xxtofl 01B4  
       ??_MPU6050_Read_Temperature 0043                           ?_Lcd_Cmd 0001  
                        _atoi$1034 0010                          _atoi$1035 0014  
                        _atoi$1036 0012                   ??_Lcd_Set_Cursor 0005  
                         ?___fladd 002F                           ?___fldiv 0016  
                         ?___awdiv 0001                           ?___flneg 0001  
                         ?___awmod 0001                           ?___flmul 0001  
                         ?___flsub 003F                           ?___fltol 0001  
            __end_of_MPU6050_Write 3F86                  __size_of_vfprintf 0062  
                      __smallconst 0800                           _I2C_Nack 3FB6  
                         ?_isdigit 0001                           _I2C_Read 3FA0  
                         _I2C_Stop 3FE0                           ?_isspace 0001  
                         ?_isupper 0001            __end_of_MPU6050_Read_Ax 3A30  
          __end_of_MPU6050_Read_Ay 39C0            __end_of_MPU6050_Read_Az 3950  
          __end_of_MPU6050_Read_Gx 38E0            __end_of_MPU6050_Read_Gy 3870  
          __end_of_MPU6050_Read_Gz 3800                           ?_sprintf 00AC  
                         ?_tolower 0007                     __size_of_fputc 00CA  
                   __size_of_fputs 0044                           ?_strncmp 0001  
                   __size_of_putch 0002                     ___wmul@product 0005  
                         _LATDbits 000F8C                           Lcd_Cmd@a 0003  
                         _PIR1bits 000F9E                        ??_Lcd_Clear 0004  
                        _vfpfcnvrt 14AC                         _ADCON1bits 000FC1  
                ___wmul@multiplier 0001                   ??_Lcd_Write_Char 0002  
                     _isspace$1065 0007                           _Lcd_Init 3704  
                         _Lcd_Port 3B4E                         vfpfcnvrt@c 00A5  
                       vfpfcnvrt@f 009E           __end_of_Lcd_Write_String 3DB4  
                 __size_of_Lcd_Cmd 0020                           __Hrparam 0000  
                       vfprintf@ap 00AA                           __Lrparam 0000  
                       vfprintf@fp 00A6                    _I2C_Init_Master 3D32  
                    I2C_Write@data 0001                   __size_of___fladd 04C0  
                 __size_of___fldiv 039A                   __size_of___awdiv 00C4  
                 __size_of___flneg 0038                   __size_of___awmod 00B0  
                 __size_of___flmul 042A                   __size_of___flsub 0046  
                 __size_of___fltol 0106                         ?_vfpfcnvrt 0053  
               ___fpclassifyf@F465 00C2                       ?_I2C_Restart 0001  
                       sprintf@fmt 00AE                           ___xxtofl 2ACE  
                 __size_of_isdigit 0038                   __size_of_isspace 0052  
                         __ptext10 3E96                           __ptext11 3CEE  
                         __ptext20 2F18                           __ptext12 32C2  
                         __ptext21 35C6                           __ptext13 4016  
                         __ptext30 3790                           __ptext22 3516  
                         __ptext14 28BC                           __ptext31 3800  
                         __ptext23 3452                           __ptext15 301C  
                         __ptext40 3FA0                           __ptext32 3870  
                         __ptext24 2C82                           __ptext16 2E12  
                         __ptext41 3FB6                           __ptext33 38E0  
                         __ptext25 3C56                           __ptext17 3CA8  
                         __ptext50 3704                           __ptext42 3BAA  
                         __ptext34 3950                           __ptext26 3E5E  
                         __ptext18 3E26                           __ptext51 4008  
                         __ptext43 3F68                           __ptext35 39C0  
                         __ptext27 3F00                           __ptext19 1E90  
                         __ptext52 3F48                           __ptext44 3F86  
                         __ptext36 2ACE                           __ptext28 3670  
                         __ptext53 3B4E                           __ptext45 3FE0  
                         __ptext37 22BA                           __ptext29 19D0  
                         __ptext54 3D32                           __ptext46 3FF4  
                         __ptext38 3DB4                           __ptext47 3D74  
                         __ptext39 3FCC                           __ptext48 3ECC  
                         __ptext49 31F0                   __size_of_isupper 0038  
                 ?_MPU6050_Read_Ax 002F                   ?_MPU6050_Read_Ay 002F  
                 ?_MPU6050_Read_Az 002F                   ?_MPU6050_Read_Gx 002F  
                 ?_MPU6050_Read_Gy 002F                   ?_MPU6050_Read_Gz 002F  
                 __size_of_sprintf 0052                   __size_of_tolower 0060  
                       strcpy@dest 0001                   __size_of_strncmp 00D6  
                    __size_of_atoi 0190                      __size_of_main 0268  
                         efgtoa@fp 0047                           efgtoa@ne 0070  
                         efgtoa@pp 006E                           efgtoa@ou 0074  
                         isa$xinst 000000                           _vfprintf 3A30  
                   _vfpfcnvrt$1000 009C                           isdigit@c 0001  
               Lcd_Write_Char@temp 0002                          sprintf@ap 00B4  
                         isspace@c 0001                          strcpy@src 0003  
          __end_of_I2C_Init_Master 3D74                           isupper@c 0001  
                        strncmp@_l 0001                          strncmp@_r 0003  
                      efgtoa@nmode 0080                        ??_vfpfcnvrt 0059  
               Lcd_Set_Cursor@temp 0008                      _vfpfcnvrt$996 009A  
                         sprintf@f 00B6                           tolower@c 0007  
                         sprintf@s 00AC             __size_of___fpclassifyf 00FE  
                         strncmp@l 0008                           strncmp@n 0005  
                         strncmp@r 000A                        _SSPCON2bits 000FC5  
                    ___fladd@signs 003B                       ___fladd@aexp 003C  
                     ___fladd@bexp 003D  
